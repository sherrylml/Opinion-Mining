result:
1	i	_	FW	FW	_	5	nsubj	_	_
2	am	_	RB	RB	_	5	advmod	_	_
3	a	_	DT	DT	_	5	det	_	_
4	business	_	NN	NN	_	5	nn	_	_
5	user	_	NN	NN	_	0	root	_	_
6	who	_	WP	WP	_	8	nsubj	_	_
7	heavily	_	RB	RB	_	8	advmod	_	_
8	depend	_	VBP	VBP	_	5	rcmod	_	_
9	on	_	IN	IN	_	8	prep	_	_
10	mobile	_	JJ	JJ	_	11	amod	_	_
11	service	_	NN	NN	_	9	pobj	_	_
12	.	_	.	.	_	0	erased	_	_
#nsubj(user-5, i-1)
#advmod(user-5, am-2)
#det(user-5, a-3)
#nn(user-5, business-4)
#root(ROOT-0, user-5)
#nsubj(depend-8, user-5)
#advmod(depend-8, heavily-7)
#rcmod(user-5, depend-8)
#amod(service-11, mobile-10)
#prep_on(depend-8, service-11)
result:
1	there	_	EX	EX	_	2	expl	_	_
2	is	_	VBZ	VBZ	_	25	ccomp	_	_
3	much	_	RB	RB	_	2	advmod	_	_
4	which	_	WDT	WDT	_	7	nsubjpass	_	_
5	has	_	VBZ	VBZ	_	7	aux	_	_
6	been	_	VBN	VBN	_	7	auxpass	_	_
7	said	_	VBN	VBN	_	2	ccomp	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	other	_	JJ	JJ	_	10	amod	_	_
10	reviews	_	NNS	NNS	_	8	pobj	_	_
11	about	_	IN	IN	_	7	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	features	_	NNS	NNS	_	11	pobj	_	_
14	of	_	IN	IN	_	13	prep	_	_
15	this	_	DT	DT	_	16	det	_	_
16	phone	_	NN	NN	_	14	pobj	_	_
17	,	_	,	,	_	0	erased	_	_
18	it	_	PRP	PRP	_	22	nsubj	_	_
19	is	_	VBZ	VBZ	_	22	cop	_	_
20	a	_	DT	DT	_	22	det	_	_
21	great	_	JJ	JJ	_	22	amod	_	_
22	phone	_	NN	NN	_	2	ccomp	_	_
23	,	_	,	,	_	0	erased	_	_
24	mine	_	PRP	PRP	_	25	nsubj	_	_
25	worked	_	VBD	VBD	_	0	root	_	_
26	without	_	IN	IN	_	25	prep	_	_
27	any	_	DT	DT	_	28	det	_	_
28	problems	_	NNS	NNS	_	26	pobj	_	_
29	right	_	RB	RB	_	30	advmod	_	_
30	out	_	RB	RB	_	31	advmod	_	_
31	of	_	IN	IN	_	25	prep	_	_
32	the	_	DT	DT	_	33	det	_	_
33	box	_	NN	NN	_	31	pobj	_	_
34	.	_	.	.	_	0	erased	_	_
#expl(is-2, there-1)
#ccomp(worked-25, is-2)
#advmod(is-2, much-3)
#nsubjpass(said-7, which-4)
#aux(said-7, has-5)
#auxpass(said-7, been-6)
#ccomp(is-2, said-7)
#amod(reviews-10, other-9)
#prep_in(said-7, reviews-10)
#det(features-13, the-12)
#prep_about(said-7, features-13)
#det(phone-16, this-15)
#prep_of(features-13, phone-16)
#nsubj(phone-22, it-18)
#cop(phone-22, is-19)
#det(phone-22, a-20)
#amod(phone-22, great-21)
#ccomp(is-2, phone-22)
#nsubj(worked-25, mine-24)
#root(ROOT-0, worked-25)
#det(problems-28, any-27)
#prep_without(worked-25, problems-28)
#advmod(worked-25, right-29)
#det(box-33, the-32)
#prep_out_of(worked-25, box-33)
result:
1	just	_	RB	RB	_	3	advmod	_	_
2	double	_	JJ	JJ	_	3	amod	_	_
3	check	_	NN	NN	_	19	nsubj	_	_
4	with	_	IN	IN	_	3	prep	_	_
5	customer	_	NN	NN	_	6	nn	_	_
6	service	_	NN	NN	_	4	pobj	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	ensure	_	VB	VB	_	3	vmod	_	_
9	the	_	DT	DT	_	10	det	_	_
10	number	_	NN	NN	_	8	dobj	_	_
11	provided	_	VBN	VBN	_	10	vmod	_	_
12	by	_	IN	IN	_	11	prep	_	_
13	amazon	_	NN	NN	_	12	pobj	_	_
14	is	_	VBZ	VBZ	_	19	cop	_	_
15	for	_	IN	IN	_	19	prep	_	_
16	the	_	DT	DT	_	17	det	_	_
17	city	_	NN	NN	_	15	pobj	_	_
18	/	_	:	:	_	19	punct	_	_
19	exchange	_	NN	NN	_	0	root	_	_
20	you	_	PRP	PRP	_	21	nsubj	_	_
21	wanted	_	VBD	VBD	_	19	rcmod	_	_
22	.	_	.	.	_	0	erased	_	_
#advmod(check-3, just-1)
#amod(check-3, double-2)
#nsubj(exchange-19, check-3)
#nn(service-6, customer-5)
#prep_with(check-3, service-6)
#aux(ensure-8, to-7)
#vmod(check-3, ensure-8)
#det(number-10, the-9)
#dobj(ensure-8, number-10)
#vmod(number-10, provided-11)
#agent(provided-11, amazon-13)
#cop(exchange-19, is-14)
#det(city-17, the-16)
#prep_for(exchange-19, city-17)
#punct(exchange-19, /-18)
#root(ROOT-0, exchange-19)
#nsubj(wanted-21, you-20)
#rcmod(exchange-19, wanted-21)
result:
1	after	_	IN	IN	_	17	prep	_	_
2	several	_	JJ	JJ	_	3	amod	_	_
3	years	_	NNS	NNS	_	1	pobj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	torture	_	VB	VB	_	4	pobj	_	_
6	in	_	IN	IN	_	5	prep	_	_
7	the	_	DT	DT	_	8	det	_	_
8	hands	_	NNS	NNS	_	6	pobj	_	_
9	of	_	IN	IN	_	8	prep	_	_
10	at	_	IN	IN	_	9	pobj	_	_
11	&	_	CC	CC	_	10	cc	_	_
12	t	_	NN	NN	_	14	nn	_	_
13	customer	_	NN	NN	_	14	nn	_	_
14	service	_	NN	NN	_	10	conj	_	_
15	i	_	FW	FW	_	17	nsubj	_	_
16	am	_	VBP	VBP	_	17	cop	_	_
17	delighted	_	JJ	JJ	_	0	root	_	_
18	to	_	TO	TO	_	19	aux	_	_
19	drop	_	VB	VB	_	17	xcomp	_	_
20	them	_	PRP	PRP	_	19	dobj	_	_
21	,	_	,	,	_	0	erased	_	_
22	and	_	CC	CC	_	19	cc	_	_
23	look	_	VB	VB	_	19	conj	_	_
24	forward	_	RP	RP	_	23	prt	_	_
25	to	_	TO	TO	_	23	prep	_	_
26	august	_	NNP	NNP	_	25	pobj	_	_
27	2004	_	CD	CD	_	26	num	_	_
28	when	_	WRB	WRB	_	31	advmod	_	_
29	i	_	FW	FW	_	31	nsubj	_	_
30	will	_	MD	MD	_	31	aux	_	_
31	convert	_	VB	VB	_	23	advcl	_	_
32	our	_	PRP$	PRP$	_	35	poss	_	_
33	other	_	JJ	JJ	_	35	amod	_	_
34	3	_	CD	CD	_	35	num	_	_
35	family-phones	_	NNS	NNS	_	31	dobj	_	_
36	from	_	IN	IN	_	35	prep	_	_
37	at	_	IN	IN	_	36	pobj	_	_
38	&	_	CC	CC	_	37	cc	_	_
39	t	_	NN	NN	_	37	conj	_	_
40	to	_	TO	TO	_	31	prep	_	_
41	t-mobile	_	JJ	JJ	_	40	pobj	_	_
42	!	_	.	.	_	0	erased	_	_
#amod(years-3, several-2)
#prep_after(delighted-17, years-3)
#prep_of(years-3, torture-5)
#det(hands-8, the-7)
#prep_in(torture-5, hands-8)
#prep(hands-8, of-9)
#pobj(of-9, at-10)
#nn(service-14, t-12)
#nn(service-14, customer-13)
#pobj(of-9, service-14)
#conj_and(at-10, service-14)
#nsubj(delighted-17, i-15)
#nsubj(drop-19, i-15)
#nsubj(look-23, i-15)
#cop(delighted-17, am-16)
#root(ROOT-0, delighted-17)
#aux(drop-19, to-18)
#xcomp(delighted-17, drop-19)
#dobj(drop-19, them-20)
#xcomp(delighted-17, look-23)
#conj_and(drop-19, look-23)
#prt(look-23, forward-24)
#prep_to(look-23, august-26)
#num(august-26, 2004-27)
#advmod(convert-31, when-28)
#nsubj(convert-31, i-29)
#aux(convert-31, will-30)
#advcl(look-23, convert-31)
#poss(family-phones-35, our-32)
#amod(family-phones-35, other-33)
#num(family-phones-35, 3-34)
#dobj(convert-31, family-phones-35)
#prep(family-phones-35, from-36)
#pobj(from-36, at-37)
#pobj(from-36, t-39)
#conj_and(at-37, t-39)
#prep_to(convert-31, t-mobile-41)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	have	_	VBP	VBP	_	3	aux	_	_
3	had	_	VBD	VBD	_	15	ccomp	_	_
4	the	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	for	_	IN	IN	_	5	prep	_	_
7	1	_	CD	CD	_	6	pobj	_	_
8	week	_	NN	NN	_	3	tmod	_	_
9	,	_	,	,	_	0	erased	_	_
10	the	_	DT	DT	_	12	det	_	_
11	signal	_	NN	NN	_	12	nn	_	_
12	quality	_	NN	NN	_	15	nsubj	_	_
13	has	_	VBZ	VBZ	_	15	aux	_	_
14	been	_	VBN	VBN	_	15	cop	_	_
15	great	_	JJ	JJ	_	0	root	_	_
16	in	_	IN	IN	_	15	prep	_	_
17	the	_	DT	DT	_	19	det	_	_
18	detroit	_	JJ	JJ	_	19	amod	_	_
19	area	_	NN	NN	_	16	pobj	_	_
20	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
21	suburbs	_	NNS	NNS	_	19	dep	_	_
22	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
23	and	_	CC	CC	_	16	cc	_	_
24	in	_	IN	IN	_	16	conj	_	_
25	my	_	PRP$	PRP$	_	28	poss	_	_
26	recent	_	JJ	JJ	_	28	amod	_	_
27	road	_	NN	NN	_	28	nn	_	_
28	trip	_	NN	NN	_	24	pobj	_	_
29	between	_	IN	IN	_	28	prep	_	_
30	detroit	_	NN	NN	_	33	nn	_	_
31	and	_	CC	CC	_	30	cc	_	_
32	northern	_	JJ	JJ	_	30	conj	_	_
33	kentucky	_	NN	NN	_	29	pobj	_	_
34	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
35	cincinnati	_	NNS	NNS	_	33	dep	_	_
36	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
37	i	_	FW	FW	_	38	nsubj	_	_
38	experienced	_	VBD	VBD	_	33	rcmod	_	_
39	perfect	_	JJ	JJ	_	40	amod	_	_
40	signal	_	NN	NN	_	38	dobj	_	_
41	and	_	CC	CC	_	40	cc	_	_
42	reception	_	NN	NN	_	40	conj	_	_
43	along	_	IN	IN	_	42	prep	_	_
44	i-75	_	JJ	JJ	_	47	amod	_	_
45	,	_	,	,	_	0	erased	_	_
46	far	_	RB	RB	_	47	advmod	_	_
47	superior	_	JJ	JJ	_	51	amod	_	_
48	to	_	TO	TO	_	47	prep	_	_
49	at	_	IN	IN	_	50	quantmod	_	_
50	&#38;	_	CD	CD	_	48	pobj	_	_
51	t	_	NN	NN	_	43	pobj	_	_
52	's	_	POS	POS	_	42	possessive	_	_
53	which	_	WDT	WDT	_	56	nsubj	_	_
54	does	_	VBZ	VBZ	_	56	aux	_	_
55	not	_	RB	RB	_	56	neg	_	_
56	work	_	VB	VB	_	28	rcmod	_	_
57	along	_	RP	RP	_	56	prt	_	_
58	several	_	JJ	JJ	_	60	amod	_	_
59	long	_	JJ	JJ	_	60	amod	_	_
60	stretches	_	NNS	NNS	_	56	dobj	_	_
61	on	_	IN	IN	_	56	prep	_	_
62	that	_	DT	DT	_	64	det	_	_
63	same	_	JJ	JJ	_	64	amod	_	_
64	route	_	NN	NN	_	61	pobj	_	_
65	.	_	.	.	_	0	erased	_	_
#nsubj(had-3, i-1)
#aux(had-3, have-2)
#ccomp(great-15, had-3)
#det(phone-5, the-4)
#dobj(had-3, phone-5)
#prep_for(phone-5, 1-7)
#tmod(had-3, week-8)
#det(quality-12, the-10)
#nn(quality-12, signal-11)
#nsubj(great-15, quality-12)
#aux(great-15, has-13)
#cop(great-15, been-14)
#root(ROOT-0, great-15)
#det(area-19, the-17)
#amod(area-19, detroit-18)
#prep_in(great-15, area-19)
#dep(area-19, suburbs-21)
#poss(trip-28, my-25)
#amod(trip-28, recent-26)
#nn(trip-28, road-27)
#prep_in(great-15, trip-28)
#conj_and(area-19, trip-28)
#nsubj(work-56, trip-28)
#nn(kentucky-33, detroit-30)
#conj_and(detroit-30, northern-32)
#nn(kentucky-33, northern-32)
#prep_between(trip-28, kentucky-33)
#dep(kentucky-33, cincinnati-35)
#nsubj(experienced-38, i-37)
#rcmod(kentucky-33, experienced-38)
#amod(signal-40, perfect-39)
#dobj(experienced-38, signal-40)
#dobj(experienced-38, reception-42)
#conj_and(signal-40, reception-42)
#amod(superior-47, i-75-44)
#advmod(superior-47, far-46)
#amod(t-51, superior-47)
#quantmod(&#38;-50, at-49)
#prep_to(superior-47, &#38;-50)
#prep_along(reception-42, t-51)
#aux(work-56, does-54)
#neg(work-56, not-55)
#rcmod(trip-28, work-56)
#prt(work-56, along-57)
#amod(stretches-60, several-58)
#amod(stretches-60, long-59)
#dobj(work-56, stretches-60)
#det(route-64, that-62)
#amod(route-64, same-63)
#prep_on(work-56, route-64)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	have	_	VBP	VBP	_	3	aux	_	_
3	owned	_	VBN	VBN	_	0	root	_	_
4	motorola	_	NN	NN	_	9	nn	_	_
5	,	_	,	,	_	0	erased	_	_
6	panasonic	_	NN	NN	_	4	conj	_	_
7	and	_	CC	CC	_	4	cc	_	_
8	nokia	_	NN	NN	_	4	conj	_	_
9	phones	_	NNS	NNS	_	3	dobj	_	_
10	over	_	IN	IN	_	3	prep	_	_
11	the	_	DT	DT	_	14	det	_	_
12	last	_	JJ	JJ	_	14	amod	_	_
13	8	_	CD	CD	_	14	num	_	_
14	years	_	NNS	NNS	_	10	pobj	_	_
15	and	_	CC	CC	_	3	cc	_	_
16	generally	_	RB	RB	_	17	advmod	_	_
17	prefer	_	VBP	VBP	_	3	conj	_	_
18	nokia	_	NN	NN	_	17	dobj	_	_
19	,	_	,	,	_	0	erased	_	_
20	this	_	DT	DT	_	21	det	_	_
21	phone	_	NN	NN	_	22	nsubj	_	_
22	combines	_	VBZ	VBZ	_	3	parataxis	_	_
23	many	_	JJ	JJ	_	22	dobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	the	_	DT	DT	_	28	det	_	_
26	best	_	JJS	JJS	_	28	amod	_	_
27	nokia	_	NN	NN	_	28	nn	_	_
28	features	_	NNS	NNS	_	24	pobj	_	_
29	,	_	,	,	_	0	erased	_	_
30	the	_	DT	DT	_	32	nsubj	_	_
31	only	_	RB	RB	_	32	advmod	_	_
32	feature	_	VBP	VBP	_	3	parataxis	_	_
33	missing	_	VBG	VBG	_	32	xcomp	_	_
34	for	_	IN	IN	_	39	mark	_	_
35	me	_	PRP	PRP	_	39	nsubj	_	_
36	is	_	VBZ	VBZ	_	39	cop	_	_
37	the	_	DT	DT	_	39	det	_	_
38	voice	_	NN	NN	_	39	nn	_	_
39	recognition	_	NN	NN	_	33	advcl	_	_
40	.	_	.	.	_	0	erased	_	_
#nsubj(owned-3, i-1)
#nsubj(prefer-17, i-1)
#aux(owned-3, have-2)
#root(ROOT-0, owned-3)
#nn(phones-9, motorola-4)
#conj_and(motorola-4, panasonic-6)
#nn(phones-9, panasonic-6)
#conj_and(motorola-4, nokia-8)
#nn(phones-9, nokia-8)
#dobj(owned-3, phones-9)
#det(years-14, the-11)
#amod(years-14, last-12)
#num(years-14, 8-13)
#prep_over(owned-3, years-14)
#advmod(prefer-17, generally-16)
#conj_and(owned-3, prefer-17)
#dobj(prefer-17, nokia-18)
#det(phone-21, this-20)
#nsubj(combines-22, phone-21)
#parataxis(owned-3, combines-22)
#dobj(combines-22, many-23)
#det(features-28, the-25)
#amod(features-28, best-26)
#nn(features-28, nokia-27)
#prep_of(many-23, features-28)
#nsubj(feature-32, the-30)
#advmod(feature-32, only-31)
#parataxis(owned-3, feature-32)
#xcomp(feature-32, missing-33)
#mark(recognition-39, for-34)
#nsubj(recognition-39, me-35)
#cop(recognition-39, is-36)
#det(recognition-39, the-37)
#nn(recognition-39, voice-38)
#advcl(missing-33, recognition-39)
result:
1	my	_	PRP$	PRP$	_	3	poss	_	_
2	favorite	_	JJ	JJ	_	3	amod	_	_
3	features	_	NNS	NNS	_	10	nsubj	_	_
4	,	_	,	,	_	0	erased	_	_
5	although	_	IN	IN	_	7	mark	_	_
6	there	_	EX	EX	_	7	expl	_	_
7	are	_	VBP	VBP	_	3	dep	_	_
8	many	_	JJ	JJ	_	7	acomp	_	_
9	,	_	,	,	_	0	erased	_	_
10	are	_	VBP	VBP	_	0	root	_	_
11	the	_	DT	DT	_	13	det	_	_
12	speaker	_	NN	NN	_	13	nn	_	_
13	phone	_	NN	NN	_	10	dep	_	_
14	,	_	,	,	_	0	erased	_	_
15	the	_	DT	DT	_	16	det	_	_
16	radio	_	NN	NN	_	13	conj	_	_
17	and	_	CC	CC	_	13	cc	_	_
18	the	_	DT	DT	_	19	det	_	_
19	infrared	_	NN	NN	_	13	conj	_	_
20	.	_	.	.	_	0	erased	_	_
#poss(features-3, my-1)
#amod(features-3, favorite-2)
#nsubj(are-10, features-3)
#mark(are-7, although-5)
#expl(are-7, there-6)
#dep(features-3, are-7)
#acomp(are-7, many-8)
#root(ROOT-0, are-10)
#det(phone-13, the-11)
#nn(phone-13, speaker-12)
#dep(are-10, phone-13)
#det(radio-16, the-15)
#dep(are-10, radio-16)
#conj_and(phone-13, radio-16)
#det(infrared-19, the-18)
#dep(are-10, infrared-19)
#conj_and(phone-13, infrared-19)
result:
1	the	_	DT	DT	_	3	det	_	_
2	speaker	_	NN	NN	_	3	nn	_	_
3	phone	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	very	_	RB	RB	_	6	advmod	_	_
6	functional	_	JJ	JJ	_	0	root	_	_
7	and	_	CC	CC	_	6	cc	_	_
8	i	_	FW	FW	_	6	advmod	_	_
9	use	_	VB	VB	_	6	conj	_	_
10	it	_	PRP	PRP	_	9	dobj	_	_
11	in	_	IN	IN	_	9	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	car	_	NN	NN	_	11	pobj	_	_
14	,	_	,	,	_	0	erased	_	_
15	very	_	RB	RB	_	16	advmod	_	_
16	audible	_	JJ	JJ	_	20	amod	_	_
17	even	_	RB	RB	_	18	advmod	_	_
18	with	_	IN	IN	_	16	prep	_	_
19	freeway	_	NN	NN	_	18	pobj	_	_
20	noise	_	NN	NN	_	13	appos	_	_
21	.	_	.	.	_	0	erased	_	_
#det(phone-3, the-1)
#nn(phone-3, speaker-2)
#nsubj(functional-6, phone-3)
#nsubj(use-9, phone-3)
#cop(functional-6, is-4)
#advmod(functional-6, very-5)
#root(ROOT-0, functional-6)
#advmod(functional-6, i-8)
#conj_and(functional-6, i-8)
#conj_and(functional-6, use-9)
#dobj(use-9, it-10)
#det(car-13, the-12)
#prep_in(use-9, car-13)
#advmod(audible-16, very-15)
#amod(noise-20, audible-16)
#advmod(audible-16, even-17)
#prep_with(audible-16, freeway-19)
#appos(car-13, noise-20)
result:
1	the	_	DT	DT	_	2	det	_	_
2	infrared	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	a	_	DT	DT	_	5	det	_	_
5	blessing	_	NN	NN	_	0	root	_	_
6	if	_	IN	IN	_	8	mark	_	_
7	you	_	PRP	PRP	_	8	nsubj	_	_
8	have	_	VBP	VBP	_	5	advcl	_	_
9	a	_	DT	DT	_	11	det	_	_
10	previous	_	JJ	JJ	_	11	amod	_	_
11	nokia	_	NN	NN	_	8	dobj	_	_
12	and	_	CC	CC	_	8	cc	_	_
13	want	_	VBP	VBP	_	8	conj	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	transfer	_	VB	VB	_	13	xcomp	_	_
16	your	_	PRP$	PRP$	_	19	poss	_	_
17	old	_	JJ	JJ	_	19	amod	_	_
18	phone	_	NN	NN	_	19	nn	_	_
19	book	_	NN	NN	_	15	dobj	_	_
20	to	_	TO	TO	_	15	prep	_	_
21	this	_	DT	DT	_	22	det	_	_
22	phone	_	NN	NN	_	20	pobj	_	_
23	,	_	,	,	_	0	erased	_	_
24	saved	_	VBN	VBN	_	8	vmod	_	_
25	me	_	PRP	PRP	_	24	iobj	_	_
26	hours	_	NNS	NNS	_	24	dobj	_	_
27	of	_	IN	IN	_	26	prep	_	_
28	re-entering	_	VBG	VBG	_	27	pcomp	_	_
29	my	_	PRP$	PRP$	_	30	poss	_	_
30	numbers	_	NNS	NNS	_	28	dobj	_	_
31	.	_	.	.	_	0	erased	_	_
#det(infrared-2, the-1)
#nsubj(blessing-5, infrared-2)
#cop(blessing-5, is-3)
#det(blessing-5, a-4)
#root(ROOT-0, blessing-5)
#mark(have-8, if-6)
#nsubj(have-8, you-7)
#nsubj(want-13, you-7)
#nsubj(transfer-15, you-7)
#advcl(blessing-5, have-8)
#det(nokia-11, a-9)
#amod(nokia-11, previous-10)
#dobj(have-8, nokia-11)
#advcl(blessing-5, want-13)
#conj_and(have-8, want-13)
#aux(transfer-15, to-14)
#xcomp(want-13, transfer-15)
#poss(book-19, your-16)
#amod(book-19, old-17)
#nn(book-19, phone-18)
#dobj(transfer-15, book-19)
#det(phone-22, this-21)
#prep_to(transfer-15, phone-22)
#vmod(have-8, saved-24)
#iobj(saved-24, me-25)
#dobj(saved-24, hours-26)
#prepc_of(hours-26, re-entering-28)
#poss(numbers-30, my-29)
#dobj(re-entering-28, numbers-30)
result:
1	the	_	DT	DT	_	2	det	_	_
2	combination	_	NN	NN	_	19	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	nokia	_	NN	NN	_	3	pobj	_	_
6	6610	_	CD	CD	_	5	num	_	_
7	and	_	CC	CC	_	5	cc	_	_
8	t-mobile	_	JJ	JJ	_	9	amod	_	_
9	service	_	NN	NN	_	5	conj	_	_
10	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
11	signal	_	NN	NN	_	5	appos	_	_
12	,	_	,	,	_	0	erased	_	_
13	price	_	NN	NN	_	11	dep	_	_
14	,	_	,	,	_	0	erased	_	_
15	service	_	NN	NN	_	11	dep	_	_
16	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
17	is	_	VBZ	VBZ	_	19	cop	_	_
18	a	_	DT	DT	_	19	det	_	_
19	winner	_	NN	NN	_	23	ccomp	_	_
20	,	_	,	,	_	0	erased	_	_
21	i	_	FW	FW	_	23	nsubj	_	_
22	highly	_	RB	RB	_	23	advmod	_	_
23	recommend	_	VBP	VBP	_	0	root	_	_
24	it	_	PRP	PRP	_	23	dobj	_	_
25	.	_	.	.	_	0	erased	_	_
#det(combination-2, the-1)
#nsubj(winner-19, combination-2)
#det(nokia-5, the-4)
#prep_of(combination-2, nokia-5)
#num(nokia-5, 6610-6)
#amod(service-9, t-mobile-8)
#prep_of(combination-2, service-9)
#conj_and(nokia-5, service-9)
#appos(nokia-5, signal-11)
#dep(signal-11, price-13)
#dep(signal-11, service-15)
#cop(winner-19, is-17)
#det(winner-19, a-18)
#ccomp(recommend-23, winner-19)
#nsubj(recommend-23, i-21)
#advmod(recommend-23, highly-22)
#root(ROOT-0, recommend-23)
#dobj(recommend-23, it-24)
result:
1	the	_	DT	DT	_	2	det	_	_
2	day	_	NN	NN	_	11	nsubj	_	_
3	finally	_	RB	RB	_	4	advmod	_	_
4	arrived	_	VBD	VBD	_	2	rcmod	_	_
5	when	_	WRB	WRB	_	8	advmod	_	_
6	i	_	FW	FW	_	8	nsubj	_	_
7	was	_	VBD	VBD	_	8	cop	_	_
8	sure	_	RB	RB	_	4	advcl	_	_
9	i	_	FW	FW	_	8	dep	_	_
10	'd	_	MD	MD	_	11	aux	_	_
11	leave	_	VB	VB	_	0	root	_	_
12	sprint	_	NN	NN	_	11	dobj	_	_
13	.	_	.	.	_	0	erased	_	_
#det(day-2, the-1)
#nsubj(leave-11, day-2)
#advmod(arrived-4, finally-3)
#rcmod(day-2, arrived-4)
#advmod(sure-8, when-5)
#nsubj(sure-8, i-6)
#cop(sure-8, was-7)
#advcl(arrived-4, sure-8)
#dep(sure-8, i-9)
#aux(leave-11, 'd-10)
#root(ROOT-0, leave-11)
#dobj(leave-11, sprint-12)
result:
1	after	_	IN	IN	_	15	prep	_	_
2	years	_	NNS	NNS	_	1	pobj	_	_
3	with	_	IN	IN	_	2	prep	_	_
4	that	_	DT	DT	_	5	det	_	_
5	carrier	_	NN	NN	_	8	poss	_	_
6	's	_	POS	POS	_	5	possessive	_	_
7	expensive	_	JJ	JJ	_	8	amod	_	_
8	plans	_	NNS	NNS	_	3	pobj	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	horrible	_	JJ	JJ	_	12	amod	_	_
11	customer	_	NN	NN	_	12	nn	_	_
12	service	_	NN	NN	_	8	conj	_	_
13	,	_	,	,	_	0	erased	_	_
14	portability	_	NN	NN	_	15	nsubj	_	_
15	seemed	_	VBD	VBD	_	0	root	_	_
16	heaven-sent	_	JJ	JJ	_	15	acomp	_	_
17	.	_	.	.	_	0	erased	_	_
#prep_after(seemed-15, years-2)
#det(carrier-5, that-4)
#poss(plans-8, carrier-5)
#amod(plans-8, expensive-7)
#prep_with(years-2, plans-8)
#amod(service-12, horrible-10)
#nn(service-12, customer-11)
#prep_with(years-2, service-12)
#conj_and(plans-8, service-12)
#nsubj(seemed-15, portability-14)
#root(ROOT-0, seemed-15)
#acomp(seemed-15, heaven-sent-16)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	'd	_	MD	MD	_	4	aux	_	_
3	always	_	RB	RB	_	4	advmod	_	_
4	eyed	_	VB	VB	_	0	root	_	_
5	the	_	DT	DT	_	7	det	_	_
6	nokia	_	JJ	JJ	_	7	amod	_	_
7	phones	_	NNS	NNS	_	4	dobj	_	_
8	and	_	CC	CC	_	4	cc	_	_
9	had	_	VBD	VBD	_	10	aux	_	_
10	heard	_	VBN	VBN	_	4	conj	_	_
11	decent	_	JJ	JJ	_	12	amod	_	_
12	things	_	NNS	NNS	_	10	dobj	_	_
13	about	_	IN	IN	_	12	prep	_	_
14	t-mobile	_	NN	NN	_	13	pobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	so	_	IN	IN	_	18	mark	_	_
17	i	_	FW	FW	_	18	nsubj	_	_
18	gave	_	VBD	VBD	_	10	advcl	_	_
19	it	_	PRP	PRP	_	18	iobj	_	_
20	a	_	DT	DT	_	21	det	_	_
21	whirl	_	NN	NN	_	18	dobj	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(eyed-4, i-1)
#nsubj(heard-10, i-1)
#aux(eyed-4, 'd-2)
#advmod(eyed-4, always-3)
#root(ROOT-0, eyed-4)
#det(phones-7, the-5)
#amod(phones-7, nokia-6)
#dobj(eyed-4, phones-7)
#aux(heard-10, had-9)
#conj_and(eyed-4, heard-10)
#amod(things-12, decent-11)
#dobj(heard-10, things-12)
#prep_about(things-12, t-mobile-14)
#mark(gave-18, so-16)
#nsubj(gave-18, i-17)
#advcl(heard-10, gave-18)
#iobj(gave-18, it-19)
#det(whirl-21, a-20)
#dobj(gave-18, whirl-21)
result:
1	here	_	RB	RB	_	5	nsubj	_	_
2	's	_	VBZ	VBZ	_	5	cop	_	_
3	the	_	DT	DT	_	5	det	_	_
4	brief	_	JJ	JJ	_	5	amod	_	_
5	synopsis	_	NN	NN	_	0	root	_	_
6	:	_	:	:	_	0	erased	_	_
7	the	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	10	nsubj	_	_
9	is	_	VBZ	VBZ	_	10	cop	_	_
10	tiny	_	JJ	JJ	_	5	parataxis	_	_
11	,	_	,	,	_	0	erased	_	_
12	cute	_	JJ	JJ	_	10	advmod	_	_
13	,	_	,	,	_	0	erased	_	_
14	feels	_	VBZ	VBZ	_	10	dep	_	_
15	kind	_	NN	NN	_	14	iobj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	''	_	''	''	_	0	erased	_	_
18	plastic-like	_	JJ	JJ	_	14	dobj	_	_
19	''	_	''	''	_	0	erased	_	_
20	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
21	as	_	IN	IN	_	25	dep	_	_
22	if	_	IN	IN	_	25	mark	_	_
23	it	_	PRP	PRP	_	25	nsubj	_	_
24	might	_	MD	MD	_	25	aux	_	_
25	break	_	VB	VB	_	14	parataxis	_	_
26	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
27	,	_	,	,	_	0	erased	_	_
28	but	_	CC	CC	_	14	cc	_	_
29	seems	_	VBZ	VBZ	_	14	conj	_	_
30	pretty	_	RB	RB	_	31	advmod	_	_
31	sturdy	_	JJ	JJ	_	29	acomp	_	_
32	.	_	.	.	_	0	erased	_	_
#nsubj(synopsis-5, here-1)
#cop(synopsis-5, 's-2)
#det(synopsis-5, the-3)
#amod(synopsis-5, brief-4)
#root(ROOT-0, synopsis-5)
#det(phone-8, the-7)
#nsubj(tiny-10, phone-8)
#cop(tiny-10, is-9)
#parataxis(synopsis-5, tiny-10)
#advmod(tiny-10, cute-12)
#dep(tiny-10, feels-14)
#iobj(feels-14, kind-15)
#prep(kind-15, of-16)
#dobj(feels-14, plastic-like-18)
#dep(break-25, as-21)
#mark(break-25, if-22)
#nsubj(break-25, it-23)
#aux(break-25, might-24)
#parataxis(feels-14, break-25)
#dep(tiny-10, seems-29)
#conj_but(feels-14, seems-29)
#advmod(sturdy-31, pretty-30)
#acomp(seems-29, sturdy-31)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	has	_	VBZ	VBZ	_	0	root	_	_
3	lots	_	NNS	NNS	_	2	dobj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	little	_	JJ	JJ	_	7	amod	_	_
6	cute	_	JJ	JJ	_	7	amod	_	_
7	features	_	NNS	NNS	_	4	pobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	my	_	PRP$	PRP$	_	10	poss	_	_
10	favorite	_	NN	NN	_	7	conj	_	_
11	being	_	VBG	VBG	_	10	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	games	_	NNS	NNS	_	11	pobj	_	_
14	and	_	CC	CC	_	13	cc	_	_
15	the	_	DT	DT	_	16	det	_	_
16	pim	_	NN	NN	_	13	conj	_	_
17	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
18	personal	_	JJ	JJ	_	20	amod	_	_
19	information	_	NN	NN	_	20	nn	_	_
20	manager	_	NN	NN	_	13	dep	_	_
21	--	_	:	:	_	0	erased	_	_
22	i.e.	_	FW	FW	_	20	dep	_	_
23	organizer	_	NN	NN	_	22	dep	_	_
24	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
25	,	_	,	,	_	0	erased	_	_
26	and	_	CC	CC	_	7	cc	_	_
27	the	_	DT	DT	_	28	det	_	_
28	radio	_	NN	NN	_	7	conj	_	_
29	!	_	.	.	_	0	erased	_	_
#nsubj(has-2, it-1)
#root(ROOT-0, has-2)
#dobj(has-2, lots-3)
#amod(features-7, little-5)
#amod(features-7, cute-6)
#prep_of(lots-3, features-7)
#poss(favorite-10, my-9)
#prep_of(lots-3, favorite-10)
#conj_and(features-7, favorite-10)
#det(games-13, the-12)
#prep_being(favorite-10, games-13)
#det(pim-16, the-15)
#prep_being(favorite-10, pim-16)
#conj_and(games-13, pim-16)
#amod(manager-20, personal-18)
#nn(manager-20, information-19)
#dep(games-13, manager-20)
#dep(manager-20, i.e.-22)
#dep(i.e.-22, organizer-23)
#det(radio-28, the-27)
#prep_of(lots-3, radio-28)
#conj_and(features-7, radio-28)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	spent	_	VBD	VBD	_	0	root	_	_
3	hours	_	NNS	NNS	_	2	dobj	_	_
4	setting	_	VBG	VBG	_	2	xcomp	_	_
5	up	_	RP	RP	_	4	prt	_	_
6	the	_	DT	DT	_	7	det	_	_
7	stations	_	NNS	NNS	_	4	dobj	_	_
8	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
9	accepts	_	VBZ	VBZ	_	14	csubj	_	_
10	about	_	IN	IN	_	11	quantmod	_	_
11	13-14	_	CD	CD	_	9	dobj	_	_
12	,	_	,	,	_	0	erased	_	_
13	i	_	FW	FW	_	9	dep	_	_
14	believe	_	VBP	VBP	_	7	dep	_	_
15	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
16	,	_	,	,	_	0	erased	_	_
17	though	_	IN	IN	_	21	mark	_	_
18	the	_	DT	DT	_	19	det	_	_
19	reception	_	NN	NN	_	21	nsubj	_	_
20	is	_	VBZ	VBZ	_	21	cop	_	_
21	unpredictable	_	JJ	JJ	_	2	advcl	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(spent-2, i-1)
#root(ROOT-0, spent-2)
#dobj(spent-2, hours-3)
#xcomp(spent-2, setting-4)
#prt(setting-4, up-5)
#det(stations-7, the-6)
#dobj(setting-4, stations-7)
#csubj(believe-14, accepts-9)
#quantmod(13-14-11, about-10)
#dobj(accepts-9, 13-14-11)
#dep(accepts-9, i-13)
#dep(stations-7, believe-14)
#mark(unpredictable-21, though-17)
#det(reception-19, the-18)
#nsubj(unpredictable-21, reception-19)
#cop(unpredictable-21, is-20)
#advcl(spent-2, unpredictable-21)
result:
1	also	_	RB	RB	_	4	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	you	_	PRP	PRP	_	4	nsubj	_	_
4	need	_	VBP	VBP	_	0	root	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	have	_	VB	VB	_	4	xcomp	_	_
7	the	_	DT	DT	_	8	det	_	_
8	headset	_	NN	NN	_	9	nsubj	_	_
9	plugged	_	VBD	VBD	_	6	ccomp	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	all	_	PDT	PDT	_	13	predet	_	_
12	the	_	DT	DT	_	13	det	_	_
13	time	_	NN	NN	_	10	pobj	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	have	_	VB	VB	_	9	xcomp	_	_
16	the	_	DT	DT	_	18	det	_	_
17	radio	_	NN	NN	_	18	nn	_	_
18	work	_	NN	NN	_	15	dobj	_	_
19	and	_	CC	CC	_	9	cc	_	_
20	that	_	IN	IN	_	23	mark	_	_
21	can	_	MD	MD	_	23	aux	_	_
22	get	_	VB	VB	_	23	dep	_	_
23	tedious	_	JJ	JJ	_	9	conj	_	_
24	.	_	.	.	_	0	erased	_	_
#advmod(need-4, also-1)
#nsubj(need-4, you-3)
#nsubj(have-6, you-3)
#root(ROOT-0, need-4)
#aux(have-6, to-5)
#xcomp(need-4, have-6)
#det(headset-8, the-7)
#nsubj(plugged-9, headset-8)
#nsubj(have-15, headset-8)
#nsubj(tedious-23, headset-8)
#ccomp(have-6, plugged-9)
#predet(time-13, all-11)
#det(time-13, the-12)
#prep_in(plugged-9, time-13)
#aux(have-15, to-14)
#xcomp(plugged-9, have-15)
#det(work-18, the-16)
#nn(work-18, radio-17)
#dobj(have-15, work-18)
#mark(tedious-23, that-20)
#aux(tedious-23, can-21)
#dep(tedious-23, get-22)
#ccomp(have-6, tedious-23)
#conj_and(plugged-9, tedious-23)
result:
1	the	_	DT	DT	_	2	det	_	_
2	headset	_	NN	NN	_	8	nsubj	_	_
3	that	_	WDT	WDT	_	4	nsubj	_	_
4	comes	_	VBZ	VBZ	_	2	rcmod	_	_
5	with	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	5	pobj	_	_
8	has	_	VBZ	VBZ	_	0	root	_	_
9	good	_	JJ	JJ	_	11	amod	_	_
10	sound	_	JJ	JJ	_	11	amod	_	_
11	volume	_	NN	NN	_	8	dobj	_	_
12	but	_	CC	CC	_	8	cc	_	_
13	it	_	PRP	PRP	_	14	nsubj	_	_
14	hurts	_	VBZ	VBZ	_	8	conj	_	_
15	the	_	DT	DT	_	16	det	_	_
16	ears	_	NNS	NNS	_	14	dobj	_	_
17	like	_	IN	IN	_	21	mark	_	_
18	you	_	PRP	PRP	_	21	nsubj	_	_
19	can	_	MD	MD	_	21	aux	_	_
20	not	_	RB	RB	_	21	neg	_	_
21	imagine	_	VB	VB	_	14	advcl	_	_
22	!	_	.	.	_	0	erased	_	_
#det(headset-2, the-1)
#nsubj(comes-4, headset-2)
#nsubj(has-8, headset-2)
#rcmod(headset-2, comes-4)
#det(phone-7, the-6)
#prep_with(comes-4, phone-7)
#root(ROOT-0, has-8)
#amod(volume-11, good-9)
#amod(volume-11, sound-10)
#dobj(has-8, volume-11)
#nsubj(hurts-14, it-13)
#conj_but(has-8, hurts-14)
#det(ears-16, the-15)
#dobj(hurts-14, ears-16)
#mark(imagine-21, like-17)
#nsubj(imagine-21, you-18)
#aux(imagine-21, can-19)
#neg(imagine-21, not-20)
#advcl(hurts-14, imagine-21)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	3	nsubj	_	_
3	comes	_	VBZ	VBZ	_	0	root	_	_
4	with	_	IN	IN	_	3	prep	_	_
5	okay	_	JJ	JJ	_	6	amod	_	_
6	ringtones	_	NNS	NNS	_	4	pobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	some	_	DT	DT	_	10	det	_	_
9	decent	_	JJ	JJ	_	10	amod	_	_
10	backgrounds	_	NNS	NNS	_	6	appos	_	_
11	/	_	:	:	_	10	punct	_	_
12	screensavers	_	NNS	NNS	_	10	dep	_	_
13	,	_	,	,	_	0	erased	_	_
14	but	_	CC	CC	_	3	cc	_	_
15	the	_	DT	DT	_	16	det	_	_
16	phone	_	NN	NN	_	17	nsubj	_	_
17	has	_	VBZ	VBZ	_	3	conj	_	_
18	very	_	RB	RB	_	19	advmod	_	_
19	little	_	JJ	JJ	_	20	amod	_	_
20	memory	_	NN	NN	_	17	dobj	_	_
21	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
22	mine	_	PRP	PRP	_	24	nsubj	_	_
23	had	_	VBD	VBD	_	24	dep	_	_
24	230kb	_	JJ	JJ	_	17	parataxis	_	_
25	as	_	IN	IN	_	27	mark	_	_
26	it	_	PRP	PRP	_	27	nsubj	_	_
27	arrived	_	VBD	VBD	_	24	advcl	_	_
28	from	_	IN	IN	_	27	prep	_	_
29	amazon	_	NN	NN	_	28	pobj	_	_
30	,	_	,	,	_	0	erased	_	_
31	so	_	IN	IN	_	35	mark	_	_
32	you	_	PRP	PRP	_	35	nsubj	_	_
33	do	_	VBP	VBP	_	35	aux	_	_
34	n't	_	RB	RB	_	35	neg	_	_
35	have	_	VB	VB	_	27	advcl	_	_
36	too	_	RB	RB	_	37	advmod	_	_
37	many	_	JJ	JJ	_	38	amod	_	_
38	options	_	NNS	NNS	_	35	dobj	_	_
39	on	_	IN	IN	_	35	prep	_	_
40	what	_	WP	WP	_	43	dobj	_	_
41	you	_	PRP	PRP	_	43	nsubj	_	_
42	can	_	MD	MD	_	43	aux	_	_
43	put	_	VB	VB	_	39	pcomp	_	_
44	on	_	RP	RP	_	43	prt	_	_
45	there	_	RB	RB	_	43	advmod	_	_
46	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
47	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(comes-3, phone-2)
#root(ROOT-0, comes-3)
#amod(ringtones-6, okay-5)
#prep_with(comes-3, ringtones-6)
#det(backgrounds-10, some-8)
#amod(backgrounds-10, decent-9)
#appos(ringtones-6, backgrounds-10)
#punct(backgrounds-10, /-11)
#dep(backgrounds-10, screensavers-12)
#det(phone-16, the-15)
#nsubj(has-17, phone-16)
#conj_but(comes-3, has-17)
#advmod(little-19, very-18)
#amod(memory-20, little-19)
#dobj(has-17, memory-20)
#nsubj(230kb-24, mine-22)
#dep(230kb-24, had-23)
#parataxis(has-17, 230kb-24)
#mark(arrived-27, as-25)
#nsubj(arrived-27, it-26)
#advcl(230kb-24, arrived-27)
#prep_from(arrived-27, amazon-29)
#mark(have-35, so-31)
#nsubj(have-35, you-32)
#aux(have-35, do-33)
#neg(have-35, n't-34)
#advcl(arrived-27, have-35)
#advmod(many-37, too-36)
#amod(options-38, many-37)
#dobj(have-35, options-38)
#dobj(put-43, what-40)
#nsubj(put-43, you-41)
#aux(put-43, can-42)
#prepc_on(have-35, put-43)
#prt(put-43, on-44)
#advmod(put-43, there-45)
result:
1	the	_	DT	DT	_	2	det	_	_
2	colors	_	NNS	NNS	_	9	nsubj	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	screen	_	NN	NN	_	3	pobj	_	_
6	are	_	VBP	VBP	_	9	cop	_	_
7	not	_	RB	RB	_	9	neg	_	_
8	as	_	RB	RB	_	9	advmod	_	_
9	crisp	_	JJ	JJ	_	0	root	_	_
10	as	_	IN	IN	_	14	mark	_	_
11	i	_	FW	FW	_	14	nsubj	_	_
12	'd	_	MD	MD	_	14	aux	_	_
13	have	_	VB	VB	_	14	aux	_	_
14	liked	_	VBN	VBN	_	9	advcl	_	_
15	them	_	PRP	PRP	_	14	dobj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	be	_	VB	VB	_	14	xcomp	_	_
18	.	_	.	.	_	0	erased	_	_
#det(colors-2, the-1)
#nsubj(crisp-9, colors-2)
#det(screen-5, the-4)
#prep_on(colors-2, screen-5)
#cop(crisp-9, are-6)
#neg(crisp-9, not-7)
#advmod(crisp-9, as-8)
#root(ROOT-0, crisp-9)
#mark(liked-14, as-10)
#nsubj(liked-14, i-11)
#aux(liked-14, 'd-12)
#aux(liked-14, have-13)
#advcl(crisp-9, liked-14)
#dobj(liked-14, them-15)
#nsubj(be-17, them-15)
#aux(be-17, to-16)
#xcomp(liked-14, be-17)
result:
1	however	_	RB	RB	_	4	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	it	_	PRP	PRP	_	4	nsubj	_	_
4	serves	_	VBZ	VBZ	_	0	root	_	_
5	its	_	PRP$	PRP$	_	6	poss	_	_
6	purpose	_	NN	NN	_	4	dobj	_	_
7	.	_	.	.	_	0	erased	_	_
#advmod(serves-4, however-1)
#nsubj(serves-4, it-3)
#root(ROOT-0, serves-4)
#poss(purpose-6, its-5)
#dobj(serves-4, purpose-6)
result:
1	the	_	DT	DT	_	2	det	_	_
2	backlight	_	NN	NN	_	6	nsubj	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	pobj	_	_
6	goes	_	VBZ	VBZ	_	0	root	_	_
7	off	_	RP	RP	_	6	prt	_	_
8	way	_	NN	NN	_	10	dep	_	_
9	too	_	RB	RB	_	10	advmod	_	_
10	quickly	_	RB	RB	_	6	advmod	_	_
11	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
12	dangerous	_	JJ	JJ	_	10	dep	_	_
13	when	_	WRB	WRB	_	16	advmod	_	_
14	you	_	PRP	PRP	_	16	nsubj	_	_
15	're	_	VBP	VBP	_	16	aux	_	_
16	driving	_	VBG	VBG	_	12	ccomp	_	_
17	at	_	IN	IN	_	16	prep	_	_
18	night	_	NN	NN	_	17	pobj	_	_
19	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
20	,	_	,	,	_	0	erased	_	_
21	and	_	CC	CC	_	6	cc	_	_
22	there	_	EX	EX	_	23	expl	_	_
23	's	_	VBZ	VBZ	_	6	conj	_	_
24	no	_	DT	DT	_	25	neg	_	_
25	way	_	NN	NN	_	23	nsubj	_	_
26	to	_	TO	TO	_	27	aux	_	_
27	change	_	VB	VB	_	25	vmod	_	_
28	this	_	DT	DT	_	27	dobj	_	_
29	--	_	:	:	_	0	erased	_	_
30	i	_	FW	FW	_	31	nsubj	_	_
31	checked	_	VBD	VBD	_	23	parataxis	_	_
32	with	_	IN	IN	_	31	prep	_	_
33	nokia	_	NN	NN	_	32	pobj	_	_
34	.	_	.	.	_	0	erased	_	_
#det(backlight-2, the-1)
#nsubj(goes-6, backlight-2)
#det(phone-5, the-4)
#prep_on(backlight-2, phone-5)
#root(ROOT-0, goes-6)
#prt(goes-6, off-7)
#dep(quickly-10, way-8)
#advmod(quickly-10, too-9)
#advmod(goes-6, quickly-10)
#dep(quickly-10, dangerous-12)
#advmod(driving-16, when-13)
#nsubj(driving-16, you-14)
#aux(driving-16, 're-15)
#ccomp(dangerous-12, driving-16)
#prep_at(driving-16, night-18)
#expl('s-23, there-22)
#conj_and(goes-6, 's-23)
#neg(way-25, no-24)
#nsubj('s-23, way-25)
#aux(change-27, to-26)
#vmod(way-25, change-27)
#dobj(change-27, this-28)
#nsubj(checked-31, i-30)
#parataxis('s-23, checked-31)
#prep_with(checked-31, nokia-33)
result:
1	the	_	DT	DT	_	2	det	_	_
2	buttons	_	NNS	NNS	_	7	nsubj	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	pobj	_	_
6	are	_	VBP	VBP	_	7	cop	_	_
7	small	_	JJ	JJ	_	0	root	_	_
8	,	_	,	,	_	0	erased	_	_
9	even	_	RB	RB	_	7	advmod	_	_
10	for	_	IN	IN	_	7	prep	_	_
11	my	_	PRP$	PRP$	_	13	poss	_	_
12	small	_	JJ	JJ	_	13	amod	_	_
13	fingertips	_	NNS	NNS	_	10	pobj	_	_
14	,	_	,	,	_	0	erased	_	_
15	but	_	CC	CC	_	7	cc	_	_
16	you	_	PRP	PRP	_	18	nsubjpass	_	_
17	get	_	VBP	VBP	_	18	auxpass	_	_
18	used	_	VBN	VBN	_	7	conj	_	_
19	to	_	TO	TO	_	18	prep	_	_
20	them	_	PRP	PRP	_	19	pobj	_	_
21	rather	_	RB	RB	_	22	advmod	_	_
22	quickly	_	RB	RB	_	18	advmod	_	_
23	.	_	.	.	_	0	erased	_	_
#det(buttons-2, the-1)
#nsubj(small-7, buttons-2)
#det(phone-5, the-4)
#prep_on(buttons-2, phone-5)
#cop(small-7, are-6)
#root(ROOT-0, small-7)
#advmod(small-7, even-9)
#poss(fingertips-13, my-11)
#amod(fingertips-13, small-12)
#prep_for(small-7, fingertips-13)
#nsubjpass(used-18, you-16)
#auxpass(used-18, get-17)
#conj_but(small-7, used-18)
#prep_to(used-18, them-20)
#advmod(quickly-22, rather-21)
#advmod(used-18, quickly-22)
result:
1	the	_	DT	DT	_	3	det	_	_
2	menu	_	NN	NN	_	3	nn	_	_
3	options	_	NNS	NNS	_	5	nsubj	_	_
4	are	_	VBP	VBP	_	5	cop	_	_
5	uncreative	_	JJ	JJ	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	as	_	IN	IN	_	9	mark	_	_
8	you	_	PRP	PRP	_	9	nsubj	_	_
9	can	_	MD	MD	_	5	advcl	_	_
10	'	_	POS	POS	_	0	erased	_	_
11	t	_	NN	NN	_	9	ccomp	_	_
12	see	_	VB	VB	_	11	dep	_	_
13	a	_	DT	DT	_	15	det	_	_
14	full	_	JJ	JJ	_	15	amod	_	_
15	screen	_	NN	NN	_	12	dobj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	menu	_	NN	NN	_	18	nn	_	_
18	items	_	NNS	NNS	_	16	pobj	_	_
19	to	_	TO	TO	_	20	aux	_	_
20	pick	_	VB	VB	_	12	xcomp	_	_
21	from	_	IN	IN	_	20	prep	_	_
22	;	_	:	:	_	0	erased	_	_
23	you	_	PRP	PRP	_	24	nsubj	_	_
24	have	_	VBP	VBP	_	5	parataxis	_	_
25	to	_	TO	TO	_	26	aux	_	_
26	scroll	_	VB	VB	_	24	xcomp	_	_
27	up	_	RP	RP	_	26	prt	_	_
28	and	_	CC	CC	_	27	cc	_	_
29	down	_	RP	RP	_	27	dep	_	_
30	to	_	TO	TO	_	31	aux	_	_
31	find	_	VB	VB	_	26	xcomp	_	_
32	what	_	WP	WP	_	35	dobj	_	_
33	you	_	PRP	PRP	_	35	nsubj	_	_
34	're	_	VBP	VBP	_	35	aux	_	_
35	looking	_	VBG	VBG	_	31	ccomp	_	_
36	for	_	IN	IN	_	35	prep	_	_
37	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
38	yes	_	UH	UH	_	42	discourse	_	_
39	,	_	,	,	_	0	erased	_	_
40	this	_	DT	DT	_	42	nsubj	_	_
41	is	_	VBZ	VBZ	_	42	cop	_	_
42	minor	_	JJ	JJ	_	36	dep	_	_
43	,	_	,	,	_	0	erased	_	_
44	but	_	CC	CC	_	45	cc	_	_
45	not	_	RB	RB	_	42	dep	_	_
46	when	_	WRB	WRB	_	49	advmod	_	_
47	you	_	PRP	PRP	_	49	nsubj	_	_
48	're	_	VBP	VBP	_	49	aux	_	_
49	trying	_	VBG	VBG	_	45	dep	_	_
50	to	_	TO	TO	_	51	aux	_	_
51	keep	_	VB	VB	_	49	xcomp	_	_
52	your	_	PRP$	PRP$	_	53	poss	_	_
53	eye	_	NN	NN	_	51	dobj	_	_
54	on	_	IN	IN	_	51	prep	_	_
55	the	_	DT	DT	_	56	det	_	_
56	road	_	NN	NN	_	54	pobj	_	_
57	!	_	.	.	_	0	erased	_	_
58	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
59	.	_	.	.	_	0	erased	_	_
#det(options-3, the-1)
#nn(options-3, menu-2)
#nsubj(uncreative-5, options-3)
#cop(uncreative-5, are-4)
#root(ROOT-0, uncreative-5)
#mark(can-9, as-7)
#nsubj(can-9, you-8)
#advcl(uncreative-5, can-9)
#ccomp(can-9, t-11)
#dep(t-11, see-12)
#det(screen-15, a-13)
#amod(screen-15, full-14)
#dobj(see-12, screen-15)
#nsubj(pick-20, screen-15)
#nn(items-18, menu-17)
#prep_of(screen-15, items-18)
#aux(pick-20, to-19)
#xcomp(see-12, pick-20)
#prep(pick-20, from-21)
#nsubj(have-24, you-23)
#nsubj(scroll-26, you-23)
#nsubj(find-31, you-23)
#parataxis(uncreative-5, have-24)
#aux(scroll-26, to-25)
#xcomp(have-24, scroll-26)
#prt(scroll-26, up-27)
#cc(up-27, and-28)
#dep(up-27, down-29)
#aux(find-31, to-30)
#xcomp(scroll-26, find-31)
#dobj(looking-35, what-32)
#nsubj(looking-35, you-33)
#aux(looking-35, 're-34)
#ccomp(find-31, looking-35)
#prep(looking-35, for-36)
#discourse(minor-42, yes-38)
#nsubj(minor-42, this-40)
#cop(minor-42, is-41)
#dep(for-36, minor-42)
#cc(not-45, but-44)
#dep(minor-42, not-45)
#advmod(trying-49, when-46)
#nsubj(trying-49, you-47)
#nsubj(keep-51, you-47)
#aux(trying-49, 're-48)
#dep(not-45, trying-49)
#aux(keep-51, to-50)
#xcomp(trying-49, keep-51)
#poss(eye-53, your-52)
#dobj(keep-51, eye-53)
#det(road-56, the-55)
#prep_on(keep-51, road-56)
result:
1	more	_	JJR	JJR	_	2	amod	_	_
2	downside	_	NN	NN	_	0	root	_	_
3	to	_	TO	TO	_	2	prep	_	_
4	this	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	pobj	_	_
6	?	_	.	.	_	0	erased	_	_
#amod(downside-2, more-1)
#root(ROOT-0, downside-2)
#det(phone-5, this-4)
#prep_to(downside-2, phone-5)
result:
1	the	_	DT	DT	_	2	det	_	_
2	volume	_	NN	NN	_	0	root	_	_
3	.	_	.	.	_	0	erased	_	_
#det(volume-2, the-1)
#root(ROOT-0, volume-2)
result:
1	oh	_	UH	UH	_	6	advmod	_	_
2	my	_	PRP$	PRP$	_	3	poss	_	_
3	goodness	_	NN	NN	_	6	nsubj	_	_
4	--	_	:	:	_	0	erased	_	_
5	i	_	FW	FW	_	3	dep	_	_
6	have	_	VBP	VBP	_	0	root	_	_
7	excellent	_	JJ	JJ	_	8	amod	_	_
8	hearing	_	NN	NN	_	6	dobj	_	_
9	but	_	CC	CC	_	6	cc	_	_
10	the	_	DT	DT	_	12	det	_	_
11	volume	_	NN	NN	_	12	nn	_	_
12	level	_	NN	NN	_	18	nsubj	_	_
13	on	_	IN	IN	_	12	prep	_	_
14	this	_	DT	DT	_	15	det	_	_
15	phone	_	NN	NN	_	13	pobj	_	_
16	is	_	VBZ	VBZ	_	18	cop	_	_
17	especially	_	RB	RB	_	18	advmod	_	_
18	quiet	_	JJ	JJ	_	6	conj	_	_
19	.	_	.	.	_	0	erased	_	_
#advmod(have-6, oh-1)
#poss(goodness-3, my-2)
#nsubj(have-6, goodness-3)
#dep(goodness-3, i-5)
#root(ROOT-0, have-6)
#amod(hearing-8, excellent-7)
#dobj(have-6, hearing-8)
#det(level-12, the-10)
#nn(level-12, volume-11)
#nsubj(quiet-18, level-12)
#det(phone-15, this-14)
#prep_on(level-12, phone-15)
#cop(quiet-18, is-16)
#advmod(quiet-18, especially-17)
#conj_but(have-6, quiet-18)
result:
1	forget	_	VBP	VBP	_	0	root	_	_
2	talking	_	VBG	VBG	_	1	xcomp	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	it	_	PRP	PRP	_	3	pobj	_	_
5	in	_	IN	IN	_	2	prep	_	_
6	public	_	NN	NN	_	5	pobj	_	_
7	--	_	:	:	_	0	erased	_	_
8	you	_	PRP	PRP	_	13	nsubj	_	_
9	just	_	RB	RB	_	13	advmod	_	_
10	can	_	MD	MD	_	13	aux	_	_
11	'	_	:	:	_	0	erased	_	_
12	t	_	RB	RB	_	13	dep	_	_
13	hear	_	VB	VB	_	1	parataxis	_	_
14	the	_	DT	DT	_	16	det	_	_
15	other	_	JJ	JJ	_	16	amod	_	_
16	person	_	NN	NN	_	13	dobj	_	_
17	!	_	.	.	_	0	erased	_	_
#root(ROOT-0, forget-1)
#xcomp(forget-1, talking-2)
#prep_on(talking-2, it-4)
#prep_in(talking-2, public-6)
#nsubj(hear-13, you-8)
#advmod(hear-13, just-9)
#aux(hear-13, can-10)
#dep(hear-13, t-12)
#parataxis(forget-1, hear-13)
#det(person-16, the-14)
#amod(person-16, other-15)
#dobj(hear-13, person-16)
result:
1	on	_	IN	IN	_	7	prep	_	_
2	the	_	DT	DT	_	3	det	_	_
3	up-side	_	NN	NN	_	1	pobj	_	_
4	,	_	,	,	_	0	erased	_	_
5	the	_	DT	DT	_	6	det	_	_
6	phone	_	NN	NN	_	7	nsubj	_	_
7	has	_	VBZ	VBZ	_	0	root	_	_
8	amazing	_	JJ	JJ	_	10	amod	_	_
9	battery	_	NN	NN	_	10	nn	_	_
10	life	_	NN	NN	_	7	dobj	_	_
11	.	_	.	.	_	0	erased	_	_
#det(up-side-3, the-2)
#prep_on(has-7, up-side-3)
#det(phone-6, the-5)
#nsubj(has-7, phone-6)
#root(ROOT-0, has-7)
#amod(life-10, amazing-8)
#nn(life-10, battery-9)
#dobj(has-7, life-10)
result:
1	i	_	FW	FW	_	20	nsubj	_	_
2	do	_	VB	VB	_	20	parataxis	_	_
3	like	_	IN	IN	_	2	prep	_	_
4	this	_	DT	DT	_	6	det	_	_
5	phone	_	NN	NN	_	6	nn	_	_
6	overall	_	NN	NN	_	3	pobj	_	_
7	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
8	would	_	MD	MD	_	9	aux	_	_
9	give	_	VB	VB	_	6	rcmod	_	_
10	it	_	PRP	PRP	_	12	nsubj	_	_
11	a	_	DT	DT	_	12	det	_	_
12	3.5	_	CD	CD	_	9	xcomp	_	_
13	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
14	,	_	,	,	_	0	erased	_	_
15	but	_	CC	CC	_	6	cc	_	_
16	unforutnately	_	NN	NN	_	6	conj	_	_
17	,	_	,	,	_	0	erased	_	_
18	i	_	FW	FW	_	16	appos	_	_
19	am	_	VBP	VBP	_	20	aux	_	_
20	returning	_	VBG	VBG	_	0	root	_	_
21	it	_	PRP	PRP	_	20	dobj	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(returning-20, i-1)
#parataxis(returning-20, do-2)
#det(overall-6, this-4)
#nn(overall-6, phone-5)
#prep_like(do-2, overall-6)
#aux(give-9, would-8)
#rcmod(overall-6, give-9)
#nsubj(3.5-12, it-10)
#det(3.5-12, a-11)
#xcomp(give-9, 3.5-12)
#prep_like(do-2, unforutnately-16)
#conj_but(overall-6, unforutnately-16)
#appos(unforutnately-16, i-18)
#aux(returning-20, am-19)
#root(ROOT-0, returning-20)
#dobj(returning-20, it-21)
result:
1	i	_	FW	FW	_	3	nsubjpass	_	_
2	was	_	VBD	VBD	_	3	auxpass	_	_
3	surprised	_	VBN	VBN	_	0	root	_	_
4	by	_	IN	IN	_	3	prep	_	_
5	t-mobile	_	NN	NN	_	7	poss	_	_
6	's	_	POS	POS	_	5	possessive	_	_
7	service	_	NN	NN	_	4	pobj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubjpass(surprised-3, i-1)
#auxpass(surprised-3, was-2)
#root(ROOT-0, surprised-3)
#poss(service-7, t-mobile-5)
#agent(surprised-3, service-7)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	assumed	_	VBD	VBD	_	0	root	_	_
3	they	_	PRP	PRP	_	4	nsubj	_	_
4	had	_	VBD	VBD	_	2	ccomp	_	_
5	exceptional	_	JJ	JJ	_	6	amod	_	_
6	service	_	NN	NN	_	4	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	but	_	CC	CC	_	2	cc	_	_
9	their	_	PRP$	PRP$	_	10	poss	_	_
10	reception	_	NN	NN	_	19	nsubj	_	_
11	in	_	IN	IN	_	10	prep	_	_
12	my	_	PRP$	PRP$	_	13	poss	_	_
13	area	_	NN	NN	_	11	pobj	_	_
14	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
15	los	_	NN	NN	_	16	nn	_	_
16	angeles	_	NNS	NNS	_	10	appos	_	_
17	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
18	is	_	VBZ	VBZ	_	19	cop	_	_
19	horrendous	_	JJ	JJ	_	2	conj	_	_
20	.	_	.	.	_	0	erased	_	_
#nsubj(assumed-2, i-1)
#root(ROOT-0, assumed-2)
#nsubj(had-4, they-3)
#ccomp(assumed-2, had-4)
#amod(service-6, exceptional-5)
#dobj(had-4, service-6)
#poss(reception-10, their-9)
#nsubj(horrendous-19, reception-10)
#poss(area-13, my-12)
#prep_in(reception-10, area-13)
#nn(angeles-16, los-15)
#appos(reception-10, angeles-16)
#cop(horrendous-19, is-18)
#conj_but(assumed-2, horrendous-19)
result:
1	reason	_	NN	NN	_	0	root	_	_
2	?	_	.	.	_	0	erased	_	_
#root(ROOT-0, reason-1)
result:
1	they	_	PRP	PRP	_	2	nsubj	_	_
2	piggy-back	_	VBD	VBD	_	0	root	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	cingular	_	NN	NN	_	6	poss	_	_
5	's	_	POS	POS	_	4	possessive	_	_
6	service	_	NN	NN	_	3	pobj	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(piggy-back-2, they-1)
#root(ROOT-0, piggy-back-2)
#poss(service-6, cingular-4)
#prep_on(piggy-back-2, service-6)
result:
1	also	_	RB	RB	_	15	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	their	_	PRP$	PRP$	_	4	poss	_	_
4	t-zones	_	NN	NN	_	15	nsubj	_	_
5	,	_	,	,	_	0	erased	_	_
6	although	_	IN	IN	_	7	dep	_	_
7	cheap	_	JJ	JJ	_	4	rcmod	_	_
8	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
9	$	_	$	$	_	4	dep	_	_
10	4.99	_	CD	CD	_	9	num	_	_
11	/	_	:	:	_	9	punct	_	_
12	mo.	_	NN	NN	_	9	dep	_	_
13	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
14	never	_	RB	RB	_	15	neg	_	_
15	works	_	VBZ	VBZ	_	0	root	_	_
16	.	_	.	.	_	0	erased	_	_
#advmod(works-15, also-1)
#poss(t-zones-4, their-3)
#nsubj(works-15, t-zones-4)
#dep(cheap-7, although-6)
#rcmod(t-zones-4, cheap-7)
#dep(t-zones-4, $-9)
#num($-9, 4.99-10)
#punct($-9, /-11)
#dep($-9, mo.-12)
#neg(works-15, never-14)
#root(ROOT-0, works-15)
result:
1	since	_	IN	IN	_	3	mark	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	received	_	VBD	VBD	_	8	advcl	_	_
4	the	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	i	_	FW	FW	_	8	nsubj	_	_
8	spent	_	VBD	VBD	_	0	root	_	_
9	countless	_	JJ	JJ	_	10	amod	_	_
10	hours	_	NNS	NNS	_	8	dobj	_	_
11	on	_	IN	IN	_	8	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	phone	_	NN	NN	_	11	pobj	_	_
14	with	_	IN	IN	_	8	prep	_	_
15	customer	_	NN	NN	_	17	nn	_	_
16	service	_	NN	NN	_	17	nn	_	_
17	reps	_	NNS	NNS	_	14	pobj	_	_
18	who	_	WP	WP	_	19	nsubj	_	_
19	promised	_	VBD	VBD	_	17	rcmod	_	_
20	t-zones	_	NNS	NNS	_	22	nsubj	_	_
21	would	_	MD	MD	_	22	aux	_	_
22	work	_	VB	VB	_	19	ccomp	_	_
23	''	_	''	''	_	0	erased	_	_
24	in	_	IN	IN	_	22	prep	_	_
25	24	_	CD	CD	_	26	num	_	_
26	hours	_	NNS	NNS	_	24	pobj	_	_
27	''	_	''	''	_	0	erased	_	_
28	.	_	.	.	_	0	erased	_	_
#mark(received-3, since-1)
#nsubj(received-3, i-2)
#advcl(spent-8, received-3)
#det(phone-5, the-4)
#dobj(received-3, phone-5)
#nsubj(spent-8, i-7)
#root(ROOT-0, spent-8)
#amod(hours-10, countless-9)
#dobj(spent-8, hours-10)
#det(phone-13, the-12)
#prep_on(spent-8, phone-13)
#nn(reps-17, customer-15)
#nn(reps-17, service-16)
#prep_with(spent-8, reps-17)
#nsubj(promised-19, reps-17)
#rcmod(reps-17, promised-19)
#nsubj(work-22, t-zones-20)
#aux(work-22, would-21)
#ccomp(promised-19, work-22)
#num(hours-26, 24-25)
#prep_in(work-22, hours-26)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	must	_	MD	MD	_	4	aux	_	_
3	have	_	VB	VB	_	4	aux	_	_
4	heard	_	VBN	VBN	_	0	root	_	_
5	this	_	DT	DT	_	8	quantmod	_	_
6	about	_	IN	IN	_	8	quantmod	_	_
7	a	_	DT	DT	_	8	quantmod	_	_
8	dozen	_	NN	NN	_	9	num	_	_
9	times	_	NNS	NNS	_	4	dobj	_	_
10	over	_	IN	IN	_	4	prep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	span	_	NN	NN	_	10	pobj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	2	_	CD	CD	_	15	num	_	_
15	weeks	_	NNS	NNS	_	13	pobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	when	_	WRB	WRB	_	20	advmod	_	_
18	t-zones	_	NNS	NNS	_	20	nsubj	_	_
19	never	_	RB	RB	_	20	neg	_	_
20	worked	_	VBD	VBD	_	15	rcmod	_	_
21	.	_	.	.	_	0	erased	_	_
#nsubj(heard-4, i-1)
#aux(heard-4, must-2)
#aux(heard-4, have-3)
#root(ROOT-0, heard-4)
#quantmod(dozen-8, this-5)
#quantmod(dozen-8, about-6)
#quantmod(dozen-8, a-7)
#num(times-9, dozen-8)
#dobj(heard-4, times-9)
#det(span-12, the-11)
#prep_over(heard-4, span-12)
#num(weeks-15, 2-14)
#prep_of(span-12, weeks-15)
#advmod(worked-20, when-17)
#nsubj(worked-20, t-zones-18)
#neg(worked-20, never-19)
#rcmod(weeks-15, worked-20)
result:
1	24	_	CD	CD	_	2	num	_	_
2	hours	_	NNS	NNS	_	0	root	_	_
3	?	_	.	.	_	0	erased	_	_
#num(hours-2, 24-1)
#root(ROOT-0, hours-2)
result:
1	by	_	IN	IN	_	4	prep	_	_
2	what	_	WP	WP	_	1	pobj	_	_
3	time	_	NN	NN	_	4	nn	_	_
4	standards	_	NNS	NNS	_	0	root	_	_
5	--	_	:	:	_	0	erased	_	_
6	martian	_	NN	NN	_	4	dep	_	_
7	?	_	.	.	_	0	erased	_	_
#prep_by(standards-4, what-2)
#nn(standards-4, time-3)
#root(ROOT-0, standards-4)
#dep(standards-4, martian-6)
result:
1	apparently	_	RB	RB	_	6	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	t-mobile	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	heavily	_	RB	RB	_	6	advmod	_	_
6	back-logged	_	JJ	JJ	_	0	root	_	_
7	and	_	CC	CC	_	6	cc	_	_
8	can	_	MD	MD	_	6	conj	_	_
9	'	_	POS	POS	_	0	erased	_	_
10	t	_	NN	NN	_	8	ccomp	_	_
11	keep	_	VB	VB	_	6	dep	_	_
12	up	_	RP	RP	_	11	prt	_	_
13	with	_	IN	IN	_	11	prep	_	_
14	demands	_	NNS	NNS	_	13	pobj	_	_
15	.	_	.	.	_	0	erased	_	_
#advmod(back-logged-6, apparently-1)
#nsubj(back-logged-6, t-mobile-3)
#cop(back-logged-6, is-4)
#advmod(back-logged-6, heavily-5)
#root(ROOT-0, back-logged-6)
#conj_and(back-logged-6, can-8)
#ccomp(can-8, t-10)
#dep(back-logged-6, keep-11)
#prt(keep-11, up-12)
#prep_with(keep-11, demands-14)
result:
1	also	_	RB	RB	_	5	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	they	_	PRP	PRP	_	5	nsubj	_	_
4	'd	_	MD	MD	_	5	aux	_	_
5	forgotten	_	VBN	VBN	_	0	root	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	add	_	VB	VB	_	5	xcomp	_	_
8	''	_	''	''	_	0	erased	_	_
9	wap	_	NN	NN	_	11	nn	_	_
10	''	_	''	''	_	0	erased	_	_
11	capability	_	NN	NN	_	7	dobj	_	_
12	to	_	TO	TO	_	11	prep	_	_
13	my	_	PRP$	PRP$	_	14	poss	_	_
14	service	_	NN	NN	_	12	pobj	_	_
15	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
16	duh	_	NN	NN	_	14	dep	_	_
17	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
18	,	_	,	,	_	0	erased	_	_
19	so	_	RB	RB	_	14	advmod	_	_
20	that	_	WDT	WDT	_	21	nsubj	_	_
21	took	_	VBD	VBD	_	11	rcmod	_	_
22	another	_	DT	DT	_	24	det	_	_
23	4-5	_	CD	CD	_	24	num	_	_
24	days	_	NNS	NNS	_	21	dobj	_	_
25	of	_	IN	IN	_	24	prep	_	_
26	figuring	_	VBG	VBG	_	25	pcomp	_	_
27	out	_	RP	RP	_	26	prt	_	_
28	.	_	.	.	_	0	erased	_	_
#advmod(forgotten-5, also-1)
#nsubj(forgotten-5, they-3)
#nsubj(add-7, they-3)
#aux(forgotten-5, 'd-4)
#root(ROOT-0, forgotten-5)
#aux(add-7, to-6)
#xcomp(forgotten-5, add-7)
#nn(capability-11, wap-9)
#dobj(add-7, capability-11)
#nsubj(took-21, capability-11)
#poss(service-14, my-13)
#prep_to(capability-11, service-14)
#dep(service-14, duh-16)
#advmod(service-14, so-19)
#rcmod(capability-11, took-21)
#det(days-24, another-22)
#num(days-24, 4-5-23)
#dobj(took-21, days-24)
#prepc_of(days-24, figuring-26)
#prt(figuring-26, out-27)
result:
1	in	_	IN	IN	_	9	prep	_	_
2	all	_	DT	DT	_	3	det	_	_
3	fairness	_	NN	NN	_	1	pobj	_	_
4	,	_	,	,	_	0	erased	_	_
5	customer	_	NN	NN	_	6	nn	_	_
6	reps	_	NNS	NNS	_	9	nsubj	_	_
7	are	_	VBP	VBP	_	9	cop	_	_
8	very	_	RB	RB	_	9	advmod	_	_
9	nice	_	JJ	JJ	_	0	root	_	_
10	,	_	,	,	_	0	erased	_	_
11	and	_	CC	CC	_	9	cc	_	_
12	they	_	PRP	PRP	_	18	nsubj	_	_
13	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
14	most	_	JJS	JJS	_	15	advmod	_	_
15	of	_	IN	IN	_	12	prep	_	_
16	them	_	PRP	PRP	_	15	pobj	_	_
17	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
18	try	_	VBP	VBP	_	9	conj	_	_
19	hard	_	JJ	JJ	_	18	acomp	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	answer	_	VB	VB	_	19	xcomp	_	_
22	your	_	PRP$	PRP$	_	23	poss	_	_
23	questions	_	NNS	NNS	_	21	dobj	_	_
24	.	_	.	.	_	0	erased	_	_
#det(fairness-3, all-2)
#prep_in(nice-9, fairness-3)
#nn(reps-6, customer-5)
#nsubj(nice-9, reps-6)
#cop(nice-9, are-7)
#advmod(nice-9, very-8)
#root(ROOT-0, nice-9)
#nsubj(try-18, they-12)
#advmod(they-12, most-14)
#prep_of(they-12, them-16)
#conj_and(nice-9, try-18)
#acomp(try-18, hard-19)
#aux(answer-21, to-20)
#xcomp(hard-19, answer-21)
#poss(questions-23, your-22)
#dobj(answer-21, questions-23)
result:
1	but	_	CC	CC	_	4	cc	_	_
2	they	_	PRP	PRP	_	4	nsubj	_	_
3	do	_	VBP	VBP	_	4	aux	_	_
4	have	_	VB	VB	_	0	root	_	_
5	this	_	DT	DT	_	7	det	_	_
6	annoying	_	JJ	JJ	_	7	amod	_	_
7	habit	_	NN	NN	_	4	dobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	asking	_	VBG	VBG	_	8	pcomp	_	_
10	you	_	PRP	PRP	_	9	dobj	_	_
11	if	_	IN	IN	_	14	mark	_	_
12	they	_	PRP	PRP	_	14	nsubj	_	_
13	've	_	VBP	VBP	_	14	aux	_	_
14	answered	_	VBN	VBN	_	9	advcl	_	_
15	all	_	PDT	PDT	_	17	predet	_	_
16	your	_	PRP$	PRP$	_	17	poss	_	_
17	questions	_	NNS	NNS	_	14	dobj	_	_
18	,	_	,	,	_	0	erased	_	_
19	even	_	RB	RB	_	22	advmod	_	_
20	if	_	IN	IN	_	22	mark	_	_
21	they	_	PRP	PRP	_	22	nsubj	_	_
22	did	_	VBD	VBD	_	14	advcl	_	_
23	n't	_	RB	RB	_	22	neg	_	_
24	,	_	,	,	_	0	erased	_	_
25	to	_	TO	TO	_	22	prep	_	_
26	which	_	WDT	WDT	_	29	dobj	_	_
27	they	_	PRP	PRP	_	29	nsubj	_	_
28	always	_	RB	RB	_	29	advmod	_	_
29	seem	_	VBP	VBP	_	25	pcomp	_	_
30	to	_	TO	TO	_	31	aux	_	_
31	expect	_	VB	VB	_	29	xcomp	_	_
32	a	_	DT	DT	_	31	advmod	_	_
33	''	_	''	''	_	0	erased	_	_
34	yes	_	UH	UH	_	31	advmod	_	_
35	''	_	''	''	_	0	erased	_	_
36	answer	_	VB	VB	_	31	ccomp	_	_
37	from	_	IN	IN	_	36	prep	_	_
38	you	_	PRP	PRP	_	37	pobj	_	_
39	.	_	.	.	_	0	erased	_	_
#cc(have-4, but-1)
#nsubj(have-4, they-2)
#aux(have-4, do-3)
#root(ROOT-0, have-4)
#det(habit-7, this-5)
#amod(habit-7, annoying-6)
#dobj(have-4, habit-7)
#prepc_of(habit-7, asking-9)
#dobj(asking-9, you-10)
#mark(answered-14, if-11)
#nsubj(answered-14, they-12)
#aux(answered-14, 've-13)
#advcl(asking-9, answered-14)
#predet(questions-17, all-15)
#poss(questions-17, your-16)
#dobj(answered-14, questions-17)
#advmod(did-22, even-19)
#mark(did-22, if-20)
#nsubj(did-22, they-21)
#advcl(answered-14, did-22)
#neg(did-22, n't-23)
#dobj(seem-29, which-26)
#nsubj(expect-31, which-26)
#nsubj(seem-29, they-27)
#advmod(seem-29, always-28)
#prepc_to(did-22, seem-29)
#aux(expect-31, to-30)
#xcomp(seem-29, expect-31)
#advmod(expect-31, a-32)
#advmod(expect-31, yes-34)
#ccomp(expect-31, answer-36)
#prep_from(answer-36, you-38)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	realize	_	VBP	VBP	_	34	discourse	_	_
3	this	_	DT	DT	_	4	nsubj	_	_
4	is	_	VBZ	VBZ	_	2	ccomp	_	_
5	for	_	IN	IN	_	4	prep	_	_
6	quality	_	NN	NN	_	8	nn	_	_
7	assurance	_	NN	NN	_	8	nn	_	_
8	purposes	_	NNS	NNS	_	5	pobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	but	_	CC	CC	_	2	cc	_	_
11	i	_	FW	FW	_	13	nsubj	_	_
12	should	_	MD	MD	_	13	aux	_	_
13	have	_	VB	VB	_	2	conj	_	_
14	the	_	DT	DT	_	15	det	_	_
15	right	_	NN	NN	_	13	dobj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	say	_	VB	VB	_	15	vmod	_	_
18	when	_	WRB	WRB	_	24	advmod	_	_
19	my	_	PRP$	PRP$	_	20	poss	_	_
20	questions	_	NNS	NNS	_	24	nsubjpass	_	_
21	have	_	VBP	VBP	_	24	aux	_	_
22	not	_	RB	RB	_	24	neg	_	_
23	been	_	VBN	VBN	_	24	auxpass	_	_
24	answered	_	VBN	VBN	_	17	advcl	_	_
25	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
26	i.e.	_	FW	FW	_	27	nn	_	_
27	me	_	FW	FW	_	15	dep	_	_
28	:	_	:	:	_	0	erased	_	_
29	''	_	''	''	_	0	erased	_	_
30	when	_	WRB	WRB	_	34	advmod	_	_
31	will	_	MD	MD	_	34	dep	_	_
32	my	_	PRP$	PRP$	_	33	poss	_	_
33	t-zones	_	NNS	NNS	_	34	nsubj	_	_
34	work	_	VB	VB	_	0	root	_	_
35	?	_	.	.	_	0	erased	_	_
36	''	_	''	''	_	0	erased	_	_
#nsubj(realize-2, i-1)
#discourse(work-34, realize-2)
#nsubj(is-4, this-3)
#ccomp(realize-2, is-4)
#nn(purposes-8, quality-6)
#nn(purposes-8, assurance-7)
#prep_for(is-4, purposes-8)
#nsubj(have-13, i-11)
#aux(have-13, should-12)
#conj_but(realize-2, have-13)
#discourse(work-34, have-13)
#det(right-15, the-14)
#dobj(have-13, right-15)
#iobj(have-13, right-15)
#aux(say-17, to-16)
#vmod(right-15, say-17)
#advmod(answered-24, when-18)
#poss(questions-20, my-19)
#nsubjpass(answered-24, questions-20)
#aux(answered-24, have-21)
#neg(answered-24, not-22)
#auxpass(answered-24, been-23)
#advcl(say-17, answered-24)
#nn(me-27, i.e.-26)
#dep(right-15, me-27)
#advmod(work-34, when-30)
#dep(work-34, will-31)
#poss(t-zones-33, my-32)
#nsubj(work-34, t-zones-33)
#root(ROOT-0, work-34)
result:
1	,	_	,	,	_	0	erased	_	_
2	csr	_	NN	NN	_	5	dep	_	_
3	:	_	:	:	_	0	erased	_	_
4	''	_	''	''	_	0	erased	_	_
5	i	_	FW	FW	_	8	nsubj	_	_
6	'm	_	VBP	VBP	_	8	aux	_	_
7	not	_	RB	RB	_	8	neg	_	_
8	sure	_	JJ	JJ	_	0	root	_	_
9	''	_	''	''	_	0	erased	_	_
10	.	_	.	.	_	0	erased	_	_
11	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
12	.	_	.	.	_	0	erased	_	_
#dep(i-5, csr-2)
#nsubj(sure-8, i-5)
#aux(sure-8, 'm-6)
#neg(sure-8, not-7)
#root(ROOT-0, sure-8)
result:
1	umm	_	NN	NN	_	5	nsubj	_	_
2	,	_	,	,	_	0	erased	_	_
3	well	_	RB	RB	_	1	advmod	_	_
4	,	_	,	,	_	0	erased	_	_
5	thanks	_	NNS	NNS	_	0	root	_	_
6	for	_	IN	IN	_	5	prep	_	_
7	nothing	_	NN	NN	_	6	pobj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(thanks-5, umm-1)
#advmod(umm-1, well-3)
#root(ROOT-0, thanks-5)
#prep_for(thanks-5, nothing-7)
result:
1	this	_	DT	DT	_	3	det	_	_
2	one	_	CD	CD	_	3	num	_	_
3	csr	_	NN	NN	_	4	nsubj	_	_
4	insisted	_	VBD	VBD	_	0	root	_	_
5	on	_	IN	IN	_	4	prep	_	_
6	trying	_	VBG	VBG	_	5	pcomp	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	get	_	VB	VB	_	6	xcomp	_	_
9	me	_	PRP	PRP	_	8	dobj	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	say	_	VB	VB	_	8	vmod	_	_
12	that	_	IN	IN	_	15	mark	_	_
13	he	_	PRP	PRP	_	15	nsubj	_	_
14	'd	_	MD	MD	_	15	aux	_	_
15	answered	_	VBN	VBN	_	11	ccomp	_	_
16	all	_	PDT	PDT	_	18	predet	_	_
17	my	_	PRP$	PRP$	_	18	poss	_	_
18	questions	_	NNS	NNS	_	15	dobj	_	_
19	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
20	same	_	JJ	JJ	_	21	amod	_	_
21	interaction	_	NN	NN	_	15	dep	_	_
22	as	_	IN	IN	_	21	prep	_	_
23	i	_	FW	FW	_	22	pobj	_	_
24	just	_	RB	RB	_	25	advmod	_	_
25	described	_	VBN	VBN	_	21	amod	_	_
26	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
27	,	_	,	,	_	0	erased	_	_
28	and	_	CC	CC	_	29	cc	_	_
29	well	_	RB	RB	_	4	dobj	_	_
30	.	_	.	.	_	0	erased	_	_
31	.	_	.	.	_	0	erased	_	_
32	.	_	.	.	_	0	erased	_	_
#det(csr-3, this-1)
#num(csr-3, one-2)
#nsubj(insisted-4, csr-3)
#root(ROOT-0, insisted-4)
#prepc_on(insisted-4, trying-6)
#aux(get-8, to-7)
#xcomp(trying-6, get-8)
#dobj(get-8, me-9)
#aux(say-11, to-10)
#vmod(get-8, say-11)
#mark(answered-15, that-12)
#nsubj(answered-15, he-13)
#aux(answered-15, 'd-14)
#ccomp(say-11, answered-15)
#predet(questions-18, all-16)
#poss(questions-18, my-17)
#dobj(answered-15, questions-18)
#amod(interaction-21, same-20)
#dep(answered-15, interaction-21)
#prep_as(interaction-21, i-23)
#advmod(described-25, just-24)
#amod(interaction-21, described-25)
#cc(well-29, and-28)
#dobj(insisted-4, well-29)
result:
1	that	_	DT	DT	_	3	nsubj	_	_
2	was	_	VBD	VBD	_	3	cop	_	_
3	annoying	_	JJ	JJ	_	0	root	_	_
4	.	_	.	.	_	0	erased	_	_
#nsubj(annoying-3, that-1)
#cop(annoying-3, was-2)
#root(ROOT-0, annoying-3)
result:
1	t-mobile	_	NN	NN	_	3	nsubj	_	_
2	is	_	VBZ	VBZ	_	3	aux	_	_
3	trying	_	VBG	VBG	_	0	root	_	_
4	very	_	RB	RB	_	5	advmod	_	_
5	hard	_	RB	RB	_	3	advmod	_	_
6	,	_	,	,	_	0	erased	_	_
7	and	_	CC	CC	_	5	cc	_	_
8	again	_	RB	RB	_	5	conj	_	_
9	--	_	:	:	_	0	erased	_	_
10	they	_	PRP	PRP	_	12	nsubj	_	_
11	do	_	VBP	VBP	_	12	aux	_	_
12	have	_	VB	VB	_	3	parataxis	_	_
13	pretty	_	RB	RB	_	14	quantmod	_	_
14	good	_	JJ	JJ	_	15	num	_	_
15	csr	_	NN	NN	_	12	dobj	_	_
16	's	_	POS	POS	_	15	possessive	_	_
17	.	_	.	.	_	0	erased	_	_
#nsubj(trying-3, t-mobile-1)
#aux(trying-3, is-2)
#root(ROOT-0, trying-3)
#advmod(hard-5, very-4)
#advmod(trying-3, hard-5)
#advmod(trying-3, again-8)
#conj_and(hard-5, again-8)
#nsubj(have-12, they-10)
#aux(have-12, do-11)
#parataxis(trying-3, have-12)
#quantmod(good-14, pretty-13)
#num(csr-15, good-14)
#dobj(have-12, csr-15)
#possessive(csr-15, 's-16)
result:
1	however	_	RB	RB	_	4	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	the	_	DT	DT	_	4	nsubj	_	_
4	calls	_	VBZ	VBZ	_	0	root	_	_
5	constantly	_	RB	RB	_	4	advmod	_	_
6	drop	_	VB	VB	_	4	dep	_	_
7	in	_	IN	IN	_	6	prep	_	_
8	my	_	PRP$	PRP$	_	9	poss	_	_
9	area	_	NN	NN	_	7	pobj	_	_
10	and	_	CC	CC	_	9	cc	_	_
11	i	_	FW	FW	_	13	amod	_	_
12	experince	_	NN	NN	_	13	nn	_	_
13	mega-static	_	NN	NN	_	9	conj	_	_
14	,	_	,	,	_	0	erased	_	_
15	to	_	TO	TO	_	6	prep	_	_
16	the	_	DT	DT	_	17	det	_	_
17	point	_	NN	NN	_	15	pobj	_	_
18	where	_	WRB	WRB	_	21	advmod	_	_
19	i	_	FW	FW	_	21	nsubj	_	_
20	'd	_	MD	MD	_	21	aux	_	_
21	have	_	VB	VB	_	17	rcmod	_	_
22	to	_	TO	TO	_	23	aux	_	_
23	dial	_	VB	VB	_	21	xcomp	_	_
24	numbers	_	NNS	NNS	_	23	iobj	_	_
25	6-7	_	CD	CD	_	26	num	_	_
26	times	_	NNS	NNS	_	23	dobj	_	_
27	to	_	TO	TO	_	28	aux	_	_
28	get	_	VB	VB	_	23	vmod	_	_
29	a	_	DT	DT	_	31	det	_	_
30	clear	_	JJ	JJ	_	31	amod	_	_
31	line	_	NN	NN	_	28	dobj	_	_
32	.	_	.	.	_	0	erased	_	_
#advmod(calls-4, however-1)
#nsubj(calls-4, the-3)
#root(ROOT-0, calls-4)
#advmod(calls-4, constantly-5)
#dep(calls-4, drop-6)
#poss(area-9, my-8)
#prep_in(drop-6, area-9)
#amod(mega-static-13, i-11)
#nn(mega-static-13, experince-12)
#prep_in(drop-6, mega-static-13)
#conj_and(area-9, mega-static-13)
#det(point-17, the-16)
#prep_to(drop-6, point-17)
#advmod(have-21, where-18)
#nsubj(have-21, i-19)
#nsubj(dial-23, i-19)
#aux(have-21, 'd-20)
#rcmod(point-17, have-21)
#aux(dial-23, to-22)
#xcomp(have-21, dial-23)
#iobj(dial-23, numbers-24)
#num(times-26, 6-7-25)
#dobj(dial-23, times-26)
#aux(get-28, to-27)
#vmod(dial-23, get-28)
#det(line-31, a-29)
#amod(line-31, clear-30)
#dobj(get-28, line-31)
result:
1	and	_	CC	CC	_	3	cc	_	_
2	no	_	DT	DT	_	3	nsubj	_	_
3	t-zones	_	VBZ	VBZ	_	0	root	_	_
4	.	_	.	.	_	0	erased	_	_
#cc(t-zones-3, and-1)
#nsubj(t-zones-3, no-2)
#root(ROOT-0, t-zones-3)
result:
1	so	_	RB	RB	_	2	advmod	_	_
2	what	_	WP	WP	_	0	root	_	_
3	's	_	VBZ	VBZ	_	2	cop	_	_
4	the	_	DT	DT	_	5	det	_	_
5	point	_	NN	NN	_	2	nsubj	_	_
6	?	_	.	.	_	0	erased	_	_
#advmod(what-2, so-1)
#root(ROOT-0, what-2)
#cop(what-2, 's-3)
#det(point-5, the-4)
#nsubj(what-2, point-5)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	'm	_	VBP	VBP	_	3	aux	_	_
3	staying	_	VBG	VBG	_	0	root	_	_
4	with	_	IN	IN	_	3	prep	_	_
5	sprint	_	NN	NN	_	4	pobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	and	_	CC	CC	_	3	cc	_	_
8	though	_	IN	IN	_	10	mark	_	_
9	i	_	FW	FW	_	10	nsubj	_	_
10	fear	_	VBP	VBP	_	29	advcl	_	_
11	that	_	IN	IN	_	18	mark	_	_
12	their	_	PRP$	PRP$	_	13	poss	_	_
13	csr	_	NN	NN	_	18	nsubj	_	_
14	is	_	VBZ	VBZ	_	18	cop	_	_
15	n't	_	RB	RB	_	18	neg	_	_
16	nearly	_	RB	RB	_	18	advmod	_	_
17	as	_	RB	RB	_	18	advmod	_	_
18	good	_	JJ	JJ	_	10	ccomp	_	_
19	as	_	IN	IN	_	18	prep	_	_
20	t-mobile	_	NN	NN	_	19	pobj	_	_
21	's	_	POS	POS	_	20	possessive	_	_
22	,	_	,	,	_	0	erased	_	_
23	the	_	DT	DT	_	24	det	_	_
24	clarity	_	NN	NN	_	29	nsubj	_	_
25	of	_	IN	IN	_	24	prep	_	_
26	their	_	PRP$	PRP$	_	27	poss	_	_
27	reception	_	NN	NN	_	25	pobj	_	_
28	is	_	VBZ	VBZ	_	29	cop	_	_
29	exceptional	_	JJ	JJ	_	3	conj	_	_
30	.	_	.	.	_	0	erased	_	_
#nsubj(staying-3, i-1)
#aux(staying-3, 'm-2)
#root(ROOT-0, staying-3)
#prep_with(staying-3, sprint-5)
#mark(fear-10, though-8)
#nsubj(fear-10, i-9)
#advcl(exceptional-29, fear-10)
#mark(good-18, that-11)
#poss(csr-13, their-12)
#nsubj(good-18, csr-13)
#cop(good-18, is-14)
#neg(good-18, n't-15)
#advmod(good-18, nearly-16)
#advmod(good-18, as-17)
#ccomp(fear-10, good-18)
#prep_as(good-18, t-mobile-20)
#possessive(t-mobile-20, 's-21)
#det(clarity-24, the-23)
#nsubj(exceptional-29, clarity-24)
#poss(reception-27, their-26)
#prep_of(clarity-24, reception-27)
#cop(exceptional-29, is-28)
#conj_and(staying-3, exceptional-29)
result:
1	i	_	FW	FW	_	17	nsubj	_	_
2	've	_	VBP	VBP	_	3	aux	_	_
3	bought	_	VBN	VBN	_	17	parataxis	_	_
4	the	_	DT	DT	_	8	det	_	_
5	very	_	RB	RB	_	6	advmod	_	_
6	expensive	_	JJ	JJ	_	8	amod	_	_
7	sanyo	_	NN	NN	_	8	nn	_	_
8	5500/vm4500	_	NNS	NNS	_	3	dobj	_	_
9	--	_	:	:	_	0	erased	_	_
10	which	_	WDT	WDT	_	8	rcmod	_	_
11	i	_	FW	FW	_	3	prep	_	_
12	love	_	NN	NN	_	11	pobj	_	_
13	--	_	:	:	_	0	erased	_	_
14	and	_	CC	CC	_	12	cc	_	_
15	i	_	FW	FW	_	12	conj	_	_
16	'm	_	VBP	VBP	_	17	cop	_	_
17	okay	_	JJ	JJ	_	0	root	_	_
18	with	_	IN	IN	_	17	prep	_	_
19	my	_	PRP$	PRP$	_	20	poss	_	_
20	services	_	NNS	NNS	_	18	pobj	_	_
21	.	_	.	.	_	0	erased	_	_
#nsubj(okay-17, i-1)
#aux(bought-3, 've-2)
#parataxis(okay-17, bought-3)
#det(5500/vm4500-8, the-4)
#advmod(expensive-6, very-5)
#amod(5500/vm4500-8, expensive-6)
#nn(5500/vm4500-8, sanyo-7)
#dobj(bought-3, 5500/vm4500-8)
#rcmod(5500/vm4500-8, which-10)
#prep(bought-3, i-11)
#pobj(i-11, love-12)
#pobj(i-11, i-15)
#conj_and(love-12, i-15)
#cop(okay-17, 'm-16)
#root(ROOT-0, okay-17)
#poss(services-20, my-19)
#prep_with(okay-17, services-20)
result:
1	guess	_	VBP	VBP	_	0	root	_	_
2	all	_	DT	DT	_	7	nsubj	_	_
3	that	_	WDT	WDT	_	4	nsubj	_	_
4	glitters	_	VBZ	VBZ	_	2	rcmod	_	_
5	is	_	VBZ	VBZ	_	7	cop	_	_
6	not	_	RB	RB	_	7	neg	_	_
7	gold	_	NN	NN	_	1	ccomp	_	_
8	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, guess-1)
#nsubj(glitters-4, all-2)
#nsubj(gold-7, all-2)
#rcmod(all-2, glitters-4)
#cop(gold-7, is-5)
#neg(gold-7, not-6)
#ccomp(guess-1, gold-7)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	was	_	VBD	VBD	_	0	root	_	_
3	worth	_	JJ	JJ	_	2	advmod	_	_
4	a	_	DT	DT	_	5	det	_	_
5	shot	_	NN	NN	_	3	dep	_	_
6	--	_	:	:	_	0	erased	_	_
7	too	_	RB	RB	_	8	advmod	_	_
8	bad	_	JJ	JJ	_	3	advmod	_	_
9	it	_	PRP	PRP	_	12	nsubj	_	_
10	did	_	VBD	VBD	_	12	aux	_	_
11	n't	_	RB	RB	_	12	neg	_	_
12	work	_	VB	VB	_	2	ccomp	_	_
13	out	_	RP	RP	_	12	prt	_	_
14	.	_	.	.	_	0	erased	_	_
#nsubj(was-2, it-1)
#root(ROOT-0, was-2)
#advmod(was-2, worth-3)
#det(shot-5, a-4)
#dep(worth-3, shot-5)
#advmod(bad-8, too-7)
#advmod(worth-3, bad-8)
#nsubj(work-12, it-9)
#aux(work-12, did-10)
#neg(work-12, n't-11)
#ccomp(was-2, work-12)
#prt(work-12, out-13)
result:
1	hope	_	NN	NN	_	2	nn	_	_
2	someone	_	NN	NN	_	4	nsubj	_	_
3	else	_	RB	RB	_	2	advmod	_	_
4	has	_	VBZ	VBZ	_	0	root	_	_
5	better	_	JJR	JJR	_	6	amod	_	_
6	luck	_	NN	NN	_	4	dobj	_	_
7	!	_	.	.	_	0	erased	_	_
#nn(someone-2, hope-1)
#nsubj(has-4, someone-2)
#advmod(someone-2, else-3)
#root(ROOT-0, has-4)
#amod(luck-6, better-5)
#dobj(has-4, luck-6)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	bought	_	VBD	VBD	_	0	root	_	_
3	one	_	CD	CD	_	2	dobj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	these	_	DT	DT	_	6	det	_	_
6	phones	_	NNS	NNS	_	4	pobj	_	_
7	in	_	IN	IN	_	2	prep	_	_
8	kuwait	_	JJ	JJ	_	17	amod	_	_
9	to	_	TO	TO	_	10	aux	_	_
10	use	_	VB	VB	_	8	xcomp	_	_
11	with	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	16	det	_	_
13	mtc	_	JJ	JJ	_	16	amod	_	_
14	prepaid	_	JJ	JJ	_	16	amod	_	_
15	telephone	_	NN	NN	_	16	nn	_	_
16	service	_	NN	NN	_	11	pobj	_	_
17	ez	_	NN	NN	_	7	pobj	_	_
18	because	_	IN	IN	_	22	mark	_	_
19	i	_	FW	FW	_	22	nsubj	_	_
20	would	_	MD	MD	_	22	aux	_	_
21	be	_	VB	VB	_	22	cop	_	_
22	able	_	JJ	JJ	_	2	advcl	_	_
23	to	_	TO	TO	_	24	aux	_	_
24	use	_	VB	VB	_	22	xcomp	_	_
25	it	_	PRP	PRP	_	24	dobj	_	_
26	when	_	WRB	WRB	_	28	advmod	_	_
27	i	_	FW	FW	_	28	nsubj	_	_
28	return	_	NN	NN	_	22	advcl	_	_
29	to	_	TO	TO	_	28	prep	_	_
30	the	_	DT	DT	_	31	det	_	_
31	states	_	NNS	NNS	_	29	pobj	_	_
32	with	_	IN	IN	_	28	prep	_	_
33	t-mobile	_	NN	NN	_	32	pobj	_	_
34	.	_	.	.	_	0	erased	_	_
#nsubj(bought-2, i-1)
#root(ROOT-0, bought-2)
#dobj(bought-2, one-3)
#det(phones-6, these-5)
#prep_of(one-3, phones-6)
#amod(ez-17, kuwait-8)
#aux(use-10, to-9)
#xcomp(kuwait-8, use-10)
#det(service-16, the-12)
#amod(service-16, mtc-13)
#amod(service-16, prepaid-14)
#nn(service-16, telephone-15)
#prep_with(use-10, service-16)
#prep_in(bought-2, ez-17)
#mark(able-22, because-18)
#nsubj(able-22, i-19)
#nsubj(use-24, i-19)
#aux(able-22, would-20)
#cop(able-22, be-21)
#advcl(bought-2, able-22)
#aux(use-24, to-23)
#xcomp(able-22, use-24)
#dobj(use-24, it-25)
#advmod(return-28, when-26)
#nsubj(return-28, i-27)
#advcl(able-22, return-28)
#det(states-31, the-30)
#prep_to(return-28, states-31)
#prep_with(return-28, t-mobile-33)
result:
1	recently	_	RB	RB	_	4	nsubj	_	_
2	i	_	FW	FW	_	1	prep	_	_
3	accidently	_	NN	NN	_	2	pobj	_	_
4	washed	_	VBD	VBD	_	0	root	_	_
5	my	_	PRP$	PRP$	_	6	poss	_	_
6	telephone	_	NN	NN	_	4	dobj	_	_
7	with	_	IN	IN	_	4	prep	_	_
8	my	_	PRP$	PRP$	_	9	poss	_	_
9	laundry	_	NN	NN	_	7	pobj	_	_
10	through	_	IN	IN	_	4	prep	_	_
11	two	_	CD	CD	_	16	num	_	_
12	complete	_	JJ	JJ	_	16	amod	_	_
13	18	_	CD	CD	_	16	num	_	_
14	minute	_	JJ	JJ	_	16	amod	_	_
15	wash	_	NN	NN	_	16	nn	_	_
16	cycles	_	NNS	NNS	_	10	pobj	_	_
17	of	_	IN	IN	_	16	prep	_	_
18	a	_	DT	DT	_	20	det	_	_
19	washing	_	VBG	VBG	_	20	amod	_	_
20	machine	_	NN	NN	_	17	pobj	_	_
21	.	_	.	.	_	0	erased	_	_
#nsubj(washed-4, recently-1)
#prep(recently-1, i-2)
#pobj(i-2, accidently-3)
#root(ROOT-0, washed-4)
#poss(telephone-6, my-5)
#dobj(washed-4, telephone-6)
#poss(laundry-9, my-8)
#prep_with(washed-4, laundry-9)
#num(cycles-16, two-11)
#amod(cycles-16, complete-12)
#num(cycles-16, 18-13)
#amod(cycles-16, minute-14)
#nn(cycles-16, wash-15)
#prep_through(washed-4, cycles-16)
#det(machine-20, a-18)
#amod(machine-20, washing-19)
#prep_of(cycles-16, machine-20)
result:
1	disgusted	_	VBN	VBN	_	18	vmod	_	_
2	with	_	IN	IN	_	1	prep	_	_
3	myself	_	PRP	PRP	_	2	pobj	_	_
4	after	_	IN	IN	_	6	mark	_	_
5	i	_	FW	FW	_	6	nsubj	_	_
6	found	_	VBD	VBD	_	1	advcl	_	_
7	the	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	6	dobj	_	_
9	in	_	IN	IN	_	6	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	bottom	_	NN	NN	_	9	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	the	_	DT	DT	_	15	det	_	_
14	washing	_	VBG	VBG	_	15	amod	_	_
15	machine	_	NN	NN	_	12	pobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	i	_	FW	FW	_	18	nsubj	_	_
18	was	_	VBD	VBD	_	0	root	_	_
19	about	_	RB	RB	_	18	advmod	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	throw	_	VB	VB	_	18	xcomp	_	_
22	it	_	PRP	PRP	_	21	dobj	_	_
23	away	_	RB	RB	_	21	advmod	_	_
24	when	_	WRB	WRB	_	30	advmod	_	_
25	one	_	CD	CD	_	30	nsubj	_	_
26	of	_	IN	IN	_	25	prep	_	_
27	my	_	PRP$	PRP$	_	29	poss	_	_
28	fellow	_	JJ	JJ	_	29	amod	_	_
29	soldiers	_	NNS	NNS	_	26	pobj	_	_
30	asked	_	VBD	VBD	_	21	advcl	_	_
31	if	_	IN	IN	_	34	mark	_	_
32	he	_	PRP	PRP	_	34	nsubj	_	_
33	could	_	MD	MD	_	34	aux	_	_
34	dry	_	VB	VB	_	30	advcl	_	_
35	it	_	PRP	PRP	_	34	dobj	_	_
36	out	_	RP	RP	_	34	prt	_	_
37	for	_	IN	IN	_	34	prep	_	_
38	me	_	PRP	PRP	_	37	pobj	_	_
39	in	_	IN	IN	_	34	prep	_	_
40	an	_	DT	DT	_	41	det	_	_
41	effort	_	NN	NN	_	39	pobj	_	_
42	to	_	TO	TO	_	43	aux	_	_
43	revive	_	VB	VB	_	41	vmod	_	_
44	the	_	DT	DT	_	45	det	_	_
45	phone	_	NN	NN	_	43	dobj	_	_
46	.	_	.	.	_	0	erased	_	_
#vmod(was-18, disgusted-1)
#prep_with(disgusted-1, myself-3)
#mark(found-6, after-4)
#nsubj(found-6, i-5)
#advcl(disgusted-1, found-6)
#det(phone-8, the-7)
#dobj(found-6, phone-8)
#det(bottom-11, the-10)
#prep_in(found-6, bottom-11)
#det(machine-15, the-13)
#amod(machine-15, washing-14)
#prep_of(bottom-11, machine-15)
#nsubj(was-18, i-17)
#nsubj(throw-21, i-17)
#root(ROOT-0, was-18)
#advmod(was-18, about-19)
#aux(throw-21, to-20)
#xcomp(was-18, throw-21)
#dobj(throw-21, it-22)
#advmod(throw-21, away-23)
#advmod(asked-30, when-24)
#nsubj(asked-30, one-25)
#poss(soldiers-29, my-27)
#amod(soldiers-29, fellow-28)
#prep_of(one-25, soldiers-29)
#advcl(throw-21, asked-30)
#mark(dry-34, if-31)
#nsubj(dry-34, he-32)
#aux(dry-34, could-33)
#advcl(asked-30, dry-34)
#dobj(dry-34, it-35)
#prt(dry-34, out-36)
#prep_for(dry-34, me-38)
#det(effort-41, an-40)
#prep_in(dry-34, effort-41)
#aux(revive-43, to-42)
#vmod(effort-41, revive-43)
#det(phone-45, the-44)
#dobj(revive-43, phone-45)
result:
1	two	_	CD	CD	_	2	num	_	_
2	days	_	NNS	NNS	_	3	npadvmod	_	_
3	later	_	RB	RB	_	7	advmod	_	_
4	the	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	7	nsubjpass	_	_
6	was	_	VBD	VBD	_	7	auxpass	_	_
7	returned	_	VBN	VBN	_	0	root	_	_
8	to	_	TO	TO	_	7	prep	_	_
9	me	_	PRP	PRP	_	8	pobj	_	_
10	in	_	IN	IN	_	7	prep	_	_
11	complete	_	JJ	JJ	_	13	amod	_	_
12	working	_	JJ	JJ	_	13	amod	_	_
13	order	_	NN	NN	_	10	pobj	_	_
14	.	_	.	.	_	0	erased	_	_
#num(days-2, two-1)
#npadvmod(later-3, days-2)
#advmod(returned-7, later-3)
#det(phone-5, the-4)
#nsubjpass(returned-7, phone-5)
#auxpass(returned-7, was-6)
#root(ROOT-0, returned-7)
#prep_to(returned-7, me-9)
#amod(order-13, complete-11)
#amod(order-13, working-12)
#prep_in(returned-7, order-13)
result:
1	while	_	IN	IN	_	15	prep	_	_
2	i	_	FW	FW	_	1	pobj	_	_
3	like	_	IN	IN	_	15	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	performance	_	NN	NN	_	3	pobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	the	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	6	pobj	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	every	_	DT	DT	_	11	det	_	_
11	regard	_	NN	NN	_	9	pobj	_	_
12	,	_	,	,	_	0	erased	_	_
13	i	_	FW	FW	_	15	nsubj	_	_
14	would	_	MD	MD	_	15	aux	_	_
15	buy	_	VB	VB	_	0	root	_	_
16	another	_	DT	DT	_	17	det	_	_
17	one	_	NN	NN	_	15	dobj	_	_
18	solely	_	RB	RB	_	19	advmod	_	_
19	upon	_	IN	IN	_	15	prep	_	_
20	the	_	DT	DT	_	22	det	_	_
21	apparent	_	JJ	JJ	_	22	amod	_	_
22	indestructibility	_	NN	NN	_	19	pobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	it	_	PRP	PRP	_	23	pobj	_	_
25	.	_	.	.	_	0	erased	_	_
#prep_while(buy-15, i-2)
#det(performance-5, the-4)
#prep_like(buy-15, performance-5)
#det(phone-8, the-7)
#prep_of(performance-5, phone-8)
#det(regard-11, every-10)
#prep_in(phone-8, regard-11)
#nsubj(buy-15, i-13)
#aux(buy-15, would-14)
#root(ROOT-0, buy-15)
#det(one-17, another-16)
#dobj(buy-15, one-17)
#advmod(buy-15, solely-18)
#det(indestructibility-22, the-20)
#amod(indestructibility-22, apparent-21)
#prep_upon(buy-15, indestructibility-22)
#prep_of(indestructibility-22, it-24)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	highly	_	RB	RB	_	3	advmod	_	_
3	recommend	_	VBP	VBP	_	0	root	_	_
4	a	_	DT	DT	_	6	det	_	_
5	nokia	_	NN	NN	_	6	nn	_	_
6	6610	_	NNS	NNS	_	3	dobj	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(recommend-3, i-1)
#advmod(recommend-3, highly-2)
#root(ROOT-0, recommend-3)
#det(6610-6, a-4)
#nn(6610-6, nokia-5)
#dobj(recommend-3, 6610-6)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	've	_	VBP	VBP	_	3	aux	_	_
3	had	_	VBD	VBD	_	27	ccomp	_	_
4	an	_	DT	DT	_	5	det	_	_
5	assortment	_	NN	NN	_	3	dobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	cell	_	NN	NN	_	8	nn	_	_
8	phones	_	NNS	NNS	_	6	pobj	_	_
9	over	_	IN	IN	_	3	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	years	_	NNS	NNS	_	9	pobj	_	_
12	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
13	motorola	_	NN	NN	_	9	dep	_	_
14	,	_	,	,	_	0	erased	_	_
15	sony	_	JJ	JJ	_	16	amod	_	_
16	ericsson	_	NN	NN	_	13	appos	_	_
17	,	_	,	,	_	0	erased	_	_
18	nokia	_	NN	NN	_	13	appos	_	_
19	etc.	_	FW	FW	_	13	dep	_	_
20	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
21	and	_	CC	CC	_	9	cc	_	_
22	in	_	IN	IN	_	9	conj	_	_
23	my	_	PRP$	PRP$	_	24	poss	_	_
24	opinion	_	NN	NN	_	22	pobj	_	_
25	,	_	,	,	_	0	erased	_	_
26	nokia	_	NN	NN	_	27	nsubj	_	_
27	has	_	VBZ	VBZ	_	0	root	_	_
28	the	_	DT	DT	_	30	det	_	_
29	best	_	JJS	JJS	_	30	amod	_	_
30	menus	_	NNS	NNS	_	27	dobj	_	_
31	and	_	CC	CC	_	27	cc	_	_
32	promps	_	VBZ	VBZ	_	27	conj	_	_
33	hands	_	NNS	NNS	_	32	dobj	_	_
34	down	_	RP	RP	_	32	prt	_	_
35	.	_	.	.	_	0	erased	_	_
#nsubj(had-3, i-1)
#nsubj(had-3', i-1)
#aux(had-3, 've-2)
#conj_and(had-3, had-3')
#ccomp(has-27, had-3)
#ccomp(has-27, had-3')
#det(assortment-5, an-4)
#dobj(had-3, assortment-5)
#nn(phones-8, cell-7)
#prep_of(assortment-5, phones-8)
#det(years-11, the-10)
#prep_over(had-3, years-11)
#dep(had-3, motorola-13)
#amod(ericsson-16, sony-15)
#appos(motorola-13, ericsson-16)
#appos(motorola-13, nokia-18)
#dep(motorola-13, etc.-19)
#poss(opinion-24, my-23)
#prep_in(had-3', opinion-24)
#nsubj(has-27, nokia-26)
#nsubj(promps-32, nokia-26)
#root(ROOT-0, has-27)
#det(menus-30, the-28)
#amod(menus-30, best-29)
#dobj(has-27, menus-30)
#conj_and(has-27, promps-32)
#dobj(promps-32, hands-33)
#prt(promps-32, down-34)
result:
1	no	_	DT	DT	_	4	neg	_	_
2	other	_	JJ	JJ	_	4	amod	_	_
3	color	_	NN	NN	_	4	nn	_	_
4	phone	_	NN	NN	_	5	nsubj	_	_
5	has	_	VBZ	VBZ	_	0	root	_	_
6	the	_	DT	DT	_	7	det	_	_
7	combination	_	NN	NN	_	5	dobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	features	_	NNS	NNS	_	8	pobj	_	_
10	that	_	WDT	WDT	_	13	dobj	_	_
11	the	_	DT	DT	_	12	det	_	_
12	6610	_	NNP	NNP	_	13	nsubj	_	_
13	offers	_	VBZ	VBZ	_	7	rcmod	_	_
14	.	_	.	.	_	0	erased	_	_
#neg(phone-4, no-1)
#amod(phone-4, other-2)
#nn(phone-4, color-3)
#nsubj(has-5, phone-4)
#root(ROOT-0, has-5)
#det(combination-7, the-6)
#dobj(has-5, combination-7)
#dobj(offers-13, combination-7)
#prep_of(combination-7, features-9)
#det(6610-12, the-11)
#nsubj(offers-13, 6610-12)
#rcmod(combination-7, offers-13)
result:
1	from	_	IN	IN	_	20	prep	_	_
2	the	_	DT	DT	_	3	det	_	_
3	speakerphone	_	NN	NN	_	1	pobj	_	_
4	that	_	WDT	WDT	_	7	nsubjpass	_	_
5	can	_	MD	MD	_	7	aux	_	_
6	be	_	VB	VB	_	7	auxpass	_	_
7	used	_	VBN	VBN	_	3	rcmod	_	_
8	up	_	RP	RP	_	7	prt	_	_
9	to	_	TO	TO	_	7	prep	_	_
10	15	_	CD	CD	_	11	num	_	_
11	feet	_	NNS	NNS	_	9	pobj	_	_
12	away	_	RB	RB	_	7	advmod	_	_
13	with	_	IN	IN	_	7	prep	_	_
14	clarity	_	NN	NN	_	13	pobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	to	_	TO	TO	_	7	prep	_	_
17	the	_	DT	DT	_	19	det	_	_
18	downloadable	_	JJ	JJ	_	19	amod	_	_
19	poly-graphic	_	NN	NN	_	16	pobj	_	_
20	megatones	_	VBZ	VBZ	_	0	root	_	_
21	that	_	IN	IN	_	22	mark	_	_
22	adds	_	VBZ	VBZ	_	20	dep	_	_
23	a	_	DT	DT	_	25	det	_	_
24	personal	_	JJ	JJ	_	25	amod	_	_
25	touch	_	NN	NN	_	22	dobj	_	_
26	to	_	TO	TO	_	25	prep	_	_
27	this	_	DT	DT	_	29	det	_	_
28	nifty	_	JJ	JJ	_	29	amod	_	_
29	phone	_	NN	NN	_	26	pobj	_	_
30	.	_	.	.	_	0	erased	_	_
#det(speakerphone-3, the-2)
#nsubjpass(used-7, speakerphone-3)
#prep_from(megatones-20, speakerphone-3)
#aux(used-7, can-5)
#auxpass(used-7, be-6)
#rcmod(speakerphone-3, used-7)
#prt(used-7, up-8)
#num(feet-11, 15-10)
#prep_to(used-7, feet-11)
#advmod(used-7, away-12)
#prep_with(used-7, clarity-14)
#det(poly-graphic-19, the-17)
#amod(poly-graphic-19, downloadable-18)
#prep_to(used-7, poly-graphic-19)
#root(ROOT-0, megatones-20)
#mark(adds-22, that-21)
#dep(megatones-20, adds-22)
#det(touch-25, a-23)
#amod(touch-25, personal-24)
#dobj(adds-22, touch-25)
#det(phone-29, this-27)
#amod(phone-29, nifty-28)
#prep_to(touch-25, phone-29)
result:
1	whether	_	IN	IN	_	4	mark	_	_
2	you	_	PRP	PRP	_	4	nsubj	_	_
3	're	_	VBP	VBP	_	4	aux	_	_
4	taking	_	VBG	VBG	_	24	advcl	_	_
5	a	_	DT	DT	_	7	det	_	_
6	brisk	_	JJ	JJ	_	7	amod	_	_
7	jog	_	NN	NN	_	4	dobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	waiting	_	VBG	VBG	_	4	conj	_	_
10	for	_	IN	IN	_	9	prep	_	_
11	a	_	DT	DT	_	12	det	_	_
12	bus	_	NN	NN	_	10	pobj	_	_
13	or	_	CC	CC	_	4	cc	_	_
14	just	_	RB	RB	_	15	advmod	_	_
15	having	_	VBG	VBG	_	4	conj	_	_
16	lunch	_	NN	NN	_	15	dobj	_	_
17	at	_	IN	IN	_	15	prep	_	_
18	the	_	DT	DT	_	19	det	_	_
19	park	_	NN	NN	_	17	pobj	_	_
20	,	_	,	,	_	0	erased	_	_
21	you	_	PRP	PRP	_	24	nsubj	_	_
22	'll	_	MD	MD	_	24	aux	_	_
23	be	_	VB	VB	_	24	cop	_	_
24	glad	_	JJ	JJ	_	26	dep	_	_
25	you	_	PRP	PRP	_	26	nsubj	_	_
26	had	_	VBD	VBD	_	0	root	_	_
27	the	_	DT	DT	_	29	det	_	_
28	fm	_	NN	NN	_	29	nn	_	_
29	radio	_	NN	NN	_	26	dobj	_	_
30	.	_	.	.	_	0	erased	_	_
#mark(taking-4, whether-1)
#nsubj(taking-4, you-2)
#nsubj(waiting-9, you-2)
#nsubj(having-15, you-2)
#aux(taking-4, 're-3)
#advcl(glad-24, taking-4)
#ccomp(glad-24, taking-4)
#det(jog-7, a-5)
#amod(jog-7, brisk-6)
#dobj(taking-4, jog-7)
#conj_or(taking-4, waiting-9)
#advcl(glad-24, waiting-9)
#ccomp(glad-24, waiting-9)
#det(bus-12, a-11)
#prep_for(waiting-9, bus-12)
#advmod(having-15, just-14)
#conj_or(taking-4, having-15)
#advcl(glad-24, having-15)
#ccomp(glad-24, having-15)
#dobj(having-15, lunch-16)
#det(park-19, the-18)
#prep_at(having-15, park-19)
#nsubj(glad-24, you-21)
#aux(glad-24, 'll-22)
#cop(glad-24, be-23)
#dep(had-26, glad-24)
#nsubj(had-26, you-25)
#root(ROOT-0, had-26)
#det(radio-29, the-27)
#nn(radio-29, fm-28)
#dobj(had-26, radio-29)
result:
1	wish	_	VBP	VBP	_	0	root	_	_
2	it	_	PRP	PRP	_	6	nsubj	_	_
3	were	_	VBD	VBD	_	6	cop	_	_
4	a	_	DT	DT	_	6	det	_	_
5	flip	_	JJ	JJ	_	6	amod	_	_
6	phone	_	NN	NN	_	1	ccomp	_	_
7	,	_	,	,	_	0	erased	_	_
8	but	_	CC	CC	_	6	cc	_	_
9	thats	_	VBZ	VBZ	_	6	conj	_	_
10	not	_	RB	RB	_	13	neg	_	_
11	a	_	DT	DT	_	13	det	_	_
12	deal	_	NN	NN	_	13	nn	_	_
13	breaker	_	NN	NN	_	9	dobj	_	_
14	!	_	.	.	_	0	erased	_	_
#root(ROOT-0, wish-1)
#nsubj(phone-6, it-2)
#nsubj(thats-9, it-2)
#cop(phone-6, were-3)
#det(phone-6, a-4)
#amod(phone-6, flip-5)
#ccomp(wish-1, phone-6)
#ccomp(wish-1, thats-9)
#conj_but(phone-6, thats-9)
#neg(breaker-13, not-10)
#det(breaker-13, a-11)
#nn(breaker-13, deal-12)
#dobj(thats-9, breaker-13)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	have	_	VBD	VBD	_	3	aux	_	_
3	had	_	VBN	VBN	_	0	root	_	_
4	this	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	for	_	IN	IN	_	3	prep	_	_
7	about	_	IN	IN	_	8	quantmod	_	_
8	5	_	CD	CD	_	9	num	_	_
9	months	_	NNS	NNS	_	6	pobj	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(had-3, i-1)
#aux(had-3, have-2)
#root(ROOT-0, had-3)
#det(phone-5, this-4)
#dobj(had-3, phone-5)
#quantmod(5-8, about-7)
#num(months-9, 5-8)
#prep_for(had-3, months-9)
result:
1	i	_	FW	FW	_	9	nsubj	_	_
2	treat	_	VB	VB	_	9	parataxis	_	_
3	the	_	DT	DT	_	4	det	_	_
4	battery	_	NN	NN	_	2	dobj	_	_
5	well	_	RB	RB	_	9	advmod	_	_
6	and	_	CC	CC	_	5	cc	_	_
7	it	_	PRP	PRP	_	9	nsubj	_	_
8	has	_	VBZ	VBZ	_	9	aux	_	_
9	lasted	_	VBN	VBN	_	0	root	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(lasted-9, i-1)
#parataxis(lasted-9, treat-2)
#det(battery-4, the-3)
#dobj(treat-2, battery-4)
#advmod(lasted-9, well-5)
#cc(well-5, and-6)
#nsubj(lasted-9, it-7)
#aux(lasted-9, has-8)
#root(ROOT-0, lasted-9)
result:
1	at	_	IN	IN	_	8	prep	_	_
2	my	_	PRP$	PRP$	_	4	poss	_	_
3	heaviest	_	JJS	JJS	_	4	amod	_	_
4	usage	_	NN	NN	_	1	pobj	_	_
5	,	_	,	,	_	0	erased	_	_
6	i	_	FW	FW	_	8	nsubj	_	_
7	must	_	MD	MD	_	8	aux	_	_
8	recharge	_	VB	VB	_	0	root	_	_
9	after	_	IN	IN	_	8	prep	_	_
10	3	_	CD	CD	_	11	num	_	_
11	days	_	NNS	NNS	_	9	pobj	_	_
12	.	_	.	.	_	0	erased	_	_
#poss(usage-4, my-2)
#amod(usage-4, heaviest-3)
#prep_at(recharge-8, usage-4)
#nsubj(recharge-8, i-6)
#aux(recharge-8, must-7)
#root(ROOT-0, recharge-8)
#num(days-11, 3-10)
#prep_after(recharge-8, days-11)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	lasts	_	VBZ	VBZ	_	0	root	_	_
3	about	_	IN	IN	_	4	quantmod	_	_
4	5	_	CD	CD	_	5	num	_	_
5	days	_	NNS	NNS	_	2	tmod	_	_
6	otherwise	_	RB	RB	_	2	advmod	_	_
7	and	_	CC	CC	_	2	cc	_	_
8	has	_	VBZ	VBZ	_	9	aux	_	_
9	lasted	_	VBN	VBN	_	2	conj	_	_
10	up	_	RP	RP	_	9	prt	_	_
11	to	_	TO	TO	_	9	prep	_	_
12	10	_	CD	CD	_	11	pobj	_	_
13	when	_	WRB	WRB	_	16	advmod	_	_
14	i	_	FW	FW	_	16	nsubj	_	_
15	was	_	VBD	VBD	_	16	aux	_	_
16	making	_	VBG	VBG	_	9	advcl	_	_
17	very	_	RB	RB	_	18	advmod	_	_
18	few	_	JJ	JJ	_	19	amod	_	_
19	calls	_	NNS	NNS	_	16	dobj	_	_
20	.	_	.	.	_	0	erased	_	_
#nsubj(lasts-2, it-1)
#nsubj(lasted-9, it-1)
#root(ROOT-0, lasts-2)
#quantmod(5-4, about-3)
#num(days-5, 5-4)
#tmod(lasts-2, days-5)
#advmod(lasts-2, otherwise-6)
#aux(lasted-9, has-8)
#conj_and(lasts-2, lasted-9)
#prt(lasted-9, up-10)
#prep_to(lasted-9, 10-12)
#advmod(making-16, when-13)
#nsubj(making-16, i-14)
#aux(making-16, was-15)
#advcl(lasted-9, making-16)
#advmod(few-18, very-17)
#amod(calls-19, few-18)
#dobj(making-16, calls-19)
result:
1	signal	_	NN	NN	_	2	nn	_	_
2	strength	_	NN	NN	_	4	nsubj	_	_
3	will	_	MD	MD	_	4	aux	_	_
4	affect	_	VB	VB	_	0	root	_	_
5	the	_	DT	DT	_	7	det	_	_
6	battery	_	NN	NN	_	7	nn	_	_
7	life	_	NN	NN	_	4	dobj	_	_
8	.	_	.	.	_	0	erased	_	_
#nn(strength-2, signal-1)
#nsubj(affect-4, strength-2)
#aux(affect-4, will-3)
#root(ROOT-0, affect-4)
#det(life-7, the-5)
#nn(life-7, battery-6)
#dobj(affect-4, life-7)
result:
1	frequent	_	JJ	JJ	_	2	amod	_	_
2	signal	_	NN	NN	_	3	nsubj	_	_
3	searches	_	VBZ	VBZ	_	0	root	_	_
4	eat	_	VB	VB	_	3	xcomp	_	_
5	up	_	RP	RP	_	4	prt	_	_
6	battery	_	NN	NN	_	7	nn	_	_
7	power	_	NN	NN	_	4	dobj	_	_
8	.	_	.	.	_	0	erased	_	_
#amod(signal-2, frequent-1)
#nsubj(searches-3, signal-2)
#root(ROOT-0, searches-3)
#xcomp(searches-3, eat-4)
#prt(eat-4, up-5)
#nn(power-7, battery-6)
#dobj(eat-4, power-7)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	took	_	VBD	VBD	_	0	root	_	_
3	great	_	JJ	JJ	_	4	amod	_	_
4	care	_	NN	NN	_	2	dobj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	screen	_	NN	NN	_	5	pobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	till	_	IN	IN	_	11	mark	_	_
10	i	_	FW	FW	_	11	nsubj	_	_
11	realized	_	VBD	VBD	_	2	advcl	_	_
12	that	_	IN	IN	_	20	mark	_	_
13	the	_	DT	DT	_	14	det	_	_
14	part	_	NN	NN	_	20	nsubj	_	_
15	that	_	WDT	WDT	_	18	nsubjpass	_	_
16	might	_	MD	MD	_	18	aux	_	_
17	get	_	VB	VB	_	18	auxpass	_	_
18	scratched	_	VBN	VBN	_	14	rcmod	_	_
19	is	_	VBZ	VBZ	_	20	cop	_	_
20	part	_	NN	NN	_	11	ccomp	_	_
21	of	_	IN	IN	_	20	prep	_	_
22	the	_	DT	DT	_	23	det	_	_
23	cover	_	NN	NN	_	21	pobj	_	_
24	.	_	.	.	_	0	erased	_	_
#nsubj(took-2, i-1)
#root(ROOT-0, took-2)
#amod(care-4, great-3)
#dobj(took-2, care-4)
#det(screen-7, the-6)
#prep_of(care-4, screen-7)
#mark(realized-11, till-9)
#nsubj(realized-11, i-10)
#advcl(took-2, realized-11)
#mark(part-20, that-12)
#det(part-14, the-13)
#nsubjpass(scratched-18, part-14)
#nsubj(part-20, part-14)
#aux(scratched-18, might-16)
#auxpass(scratched-18, get-17)
#rcmod(part-14, scratched-18)
#cop(part-20, is-19)
#ccomp(realized-11, part-20)
#det(cover-23, the-22)
#prep_of(part-20, cover-23)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	can	_	MD	MD	_	3	aux	_	_
3	replace	_	VB	VB	_	0	root	_	_
4	that	_	DT	DT	_	3	dobj	_	_
5	if	_	IN	IN	_	9	mark	_	_
6	the	_	DT	DT	_	7	det	_	_
7	scratch	_	NN	NN	_	9	nsubj	_	_
8	is	_	VBZ	VBZ	_	9	cop	_	_
9	unbearable	_	JJ	JJ	_	3	advcl	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	look	_	VB	VB	_	9	xcomp	_	_
12	at	_	IN	IN	_	11	prep	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(replace-3, i-1)
#aux(replace-3, can-2)
#root(ROOT-0, replace-3)
#dobj(replace-3, that-4)
#mark(unbearable-9, if-5)
#det(scratch-7, the-6)
#nsubj(unbearable-9, scratch-7)
#nsubj(look-11, scratch-7)
#cop(unbearable-9, is-8)
#advcl(replace-3, unbearable-9)
#aux(look-11, to-10)
#xcomp(unbearable-9, look-11)
#prep(look-11, at-12)
result:
1	the	_	DT	DT	_	3	det	_	_
2	volume	_	NN	NN	_	3	nn	_	_
3	level	_	NN	NN	_	7	nsubj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	6	det	_	_
6	phone	_	NN	NN	_	4	pobj	_	_
7	is	_	VBZ	VBZ	_	0	root	_	_
8	not	_	RB	RB	_	7	neg	_	_
9	all	_	PDT	PDT	_	11	dep	_	_
10	that	_	DT	DT	_	11	det	_	_
11	good	_	JJ	JJ	_	7	advmod	_	_
12	.	_	.	.	_	0	erased	_	_
#det(level-3, the-1)
#nn(level-3, volume-2)
#nsubj(is-7, level-3)
#det(phone-6, the-5)
#prep_of(level-3, phone-6)
#root(ROOT-0, is-7)
#neg(is-7, not-8)
#dep(good-11, all-9)
#det(good-11, that-10)
#advmod(is-7, good-11)
result:
1	some	_	DT	DT	_	9	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	6	det	_	_
4	higher	_	JJR	JJR	_	6	amod	_	_
5	pitched	_	JJ	JJ	_	6	amod	_	_
6	rings	_	NNS	NNS	_	2	pobj	_	_
7	are	_	VBP	VBP	_	9	cop	_	_
8	very	_	RB	RB	_	9	advmod	_	_
9	easy	_	JJ	JJ	_	0	root	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	hear	_	VB	VB	_	9	xcomp	_	_
12	,	_	,	,	_	0	erased	_	_
13	but	_	CC	CC	_	9	cc	_	_
14	not	_	RB	RB	_	15	neg	_	_
15	easy	_	JJ	JJ	_	9	conj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	listen	_	VB	VB	_	15	xcomp	_	_
18	to	_	TO	TO	_	17	prep	_	_
19	.	_	.	.	_	0	erased	_	_
#nsubj(easy-9, some-1)
#nsubj(hear-11, some-1)
#nsubj(easy-15, some-1)
#nsubj(listen-17, some-1)
#det(rings-6, the-3)
#amod(rings-6, higher-4)
#amod(rings-6, pitched-5)
#prep_of(some-1, rings-6)
#cop(easy-9, are-7)
#advmod(easy-9, very-8)
#root(ROOT-0, easy-9)
#aux(hear-11, to-10)
#xcomp(easy-9, hear-11)
#neg(easy-15, not-14)
#conj_but(easy-9, easy-15)
#aux(listen-17, to-16)
#xcomp(easy-15, listen-17)
#prep(listen-17, to-18)
result:
1	the	_	DT	DT	_	4	det	_	_
2	more	_	RBR	RBR	_	3	advmod	_	_
3	subtle	_	JJ	JJ	_	4	amod	_	_
4	tones	_	NNS	NNS	_	12	nsubj	_	_
5	that	_	WDT	WDT	_	7	nsubjpass	_	_
6	were	_	VBD	VBD	_	7	auxpass	_	_
7	included	_	VBN	VBN	_	4	rcmod	_	_
8	with	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	phone	_	NN	NN	_	8	pobj	_	_
11	are	_	VBP	VBP	_	12	cop	_	_
12	hard	_	JJ	JJ	_	0	root	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	hear	_	VB	VB	_	12	xcomp	_	_
15	at	_	IN	IN	_	14	prep	_	_
16	times	_	NNS	NNS	_	15	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#det(tones-4, the-1)
#advmod(subtle-3, more-2)
#amod(tones-4, subtle-3)
#nsubjpass(included-7, tones-4)
#nsubj(hard-12, tones-4)
#nsubj(hear-14, tones-4)
#auxpass(included-7, were-6)
#rcmod(tones-4, included-7)
#det(phone-10, the-9)
#prep_with(included-7, phone-10)
#cop(hard-12, are-11)
#root(ROOT-0, hard-12)
#aux(hear-14, to-13)
#xcomp(hard-12, hear-14)
#prep_at(hear-14, times-16)
result:
1	the	_	DT	DT	_	2	det	_	_
2	vibration	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	not	_	RB	RB	_	5	neg	_	_
5	top	_	JJ	JJ	_	0	root	_	_
6	.	_	.	.	_	0	erased	_	_
#det(vibration-2, the-1)
#nsubj(top-5, vibration-2)
#cop(top-5, is-3)
#neg(top-5, not-4)
#root(ROOT-0, top-5)
result:
1	it	_	PRP	PRP	_	5	nsubj	_	_
2	is	_	VBZ	VBZ	_	5	cop	_	_
3	a	_	DT	DT	_	5	det	_	_
4	teeny	_	JJ	JJ	_	5	amod	_	_
5	phone	_	NN	NN	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	so	_	IN	IN	_	10	mark	_	_
8	it	_	PRP	PRP	_	10	nsubj	_	_
9	is	_	VBZ	VBZ	_	10	cop	_	_
10	hard	_	JJ	JJ	_	5	advcl	_	_
11	to	_	TO	TO	_	12	aux	_	_
12	put	_	VB	VB	_	10	xcomp	_	_
13	a	_	DT	DT	_	15	det	_	_
14	big	_	JJ	JJ	_	15	amod	_	_
15	mechanism	_	NN	NN	_	12	dobj	_	_
16	in	_	IN	IN	_	12	prep	_	_
17	.	_	.	.	_	0	erased	_	_
#nsubj(phone-5, it-1)
#cop(phone-5, is-2)
#det(phone-5, a-3)
#amod(phone-5, teeny-4)
#root(ROOT-0, phone-5)
#mark(hard-10, so-7)
#nsubj(hard-10, it-8)
#nsubj(put-12, it-8)
#cop(hard-10, is-9)
#advcl(phone-5, hard-10)
#aux(put-12, to-11)
#xcomp(hard-10, put-12)
#det(mechanism-15, a-13)
#amod(mechanism-15, big-14)
#dobj(put-12, mechanism-15)
#prep(put-12, in-16)
result:
1	i	_	FW	FW	_	16	nsubj	_	_
2	do	_	VBP	VBP	_	4	aux	_	_
3	n't	_	RB	RB	_	4	neg	_	_
4	use	_	VB	VB	_	16	parataxis	_	_
5	the	_	DT	DT	_	6	det	_	_
6	vibration	_	NN	NN	_	4	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	because	_	IN	IN	_	12	mark	_	_
9	it	_	PRP	PRP	_	12	nsubj	_	_
10	is	_	VBZ	VBZ	_	12	cop	_	_
11	often	_	RB	RB	_	12	advmod	_	_
12	easier	_	JJR	JJR	_	4	advcl	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	hear	_	VB	VB	_	12	xcomp	_	_
15	it	_	PRP	PRP	_	14	dobj	_	_
16	vibrate	_	VBP	VBP	_	0	root	_	_
17	then	_	RB	RB	_	16	advmod	_	_
18	to	_	TO	TO	_	19	aux	_	_
19	feel	_	VB	VB	_	16	xcomp	_	_
20	it	_	PRP	PRP	_	19	dobj	_	_
21	.	_	.	.	_	0	erased	_	_
#nsubj(vibrate-16, i-1)
#nsubj(feel-19, i-1)
#aux(use-4, do-2)
#neg(use-4, n't-3)
#parataxis(vibrate-16, use-4)
#det(vibration-6, the-5)
#dobj(use-4, vibration-6)
#mark(easier-12, because-8)
#nsubj(easier-12, it-9)
#nsubj(hear-14, it-9)
#cop(easier-12, is-10)
#advmod(easier-12, often-11)
#advcl(use-4, easier-12)
#aux(hear-14, to-13)
#xcomp(easier-12, hear-14)
#dobj(hear-14, it-15)
#root(ROOT-0, vibrate-16)
#advmod(vibrate-16, then-17)
#aux(feel-19, to-18)
#xcomp(vibrate-16, feel-19)
#dobj(feel-19, it-20)
result:
1	vibration	_	NN	NN	_	5	nsubj	_	_
2	was	_	VBD	VBD	_	5	cop	_	_
3	not	_	RB	RB	_	5	neg	_	_
4	even	_	RB	RB	_	5	advmod	_	_
5	listed	_	VBN	VBN	_	0	root	_	_
6	as	_	IN	IN	_	5	prep	_	_
7	a	_	DT	DT	_	8	det	_	_
8	feature	_	NN	NN	_	6	pobj	_	_
9	when	_	WRB	WRB	_	11	advmod	_	_
10	i	_	FW	FW	_	11	nsubj	_	_
11	purchased	_	VBD	VBD	_	5	ccomp	_	_
12	this	_	DT	DT	_	11	dobj	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(listed-5, vibration-1)
#cop(listed-5, was-2)
#neg(listed-5, not-3)
#advmod(listed-5, even-4)
#root(ROOT-0, listed-5)
#det(feature-8, a-7)
#prep_as(listed-5, feature-8)
#advmod(purchased-11, when-9)
#nsubj(purchased-11, i-10)
#ccomp(listed-5, purchased-11)
#dobj(purchased-11, this-12)
result:
1	so	_	RB	RB	_	5	advmod	_	_
2	it	_	PRP	PRP	_	5	nsubj	_	_
3	was	_	VBD	VBD	_	5	cop	_	_
4	no	_	DT	DT	_	5	neg	_	_
5	loss	_	NN	NN	_	0	root	_	_
6	.	_	.	.	_	0	erased	_	_
#advmod(loss-5, so-1)
#nsubj(loss-5, it-2)
#cop(loss-5, was-3)
#neg(loss-5, no-4)
#root(ROOT-0, loss-5)
result:
1	overall	_	JJ	JJ	_	11	nsubj	_	_
2	this	_	DT	DT	_	7	nsubj	_	_
3	has	_	VBZ	VBZ	_	7	aux	_	_
4	been	_	VBN	VBN	_	7	cop	_	_
5	my	_	PRP$	PRP$	_	7	poss	_	_
6	favorite	_	JJ	JJ	_	7	amod	_	_
7	phone	_	NN	NN	_	1	rcmod	_	_
8	that	_	IN	IN	_	7	prep	_	_
9	i	_	FW	FW	_	8	pobj	_	_
10	have	_	VBP	VBP	_	11	aux	_	_
11	owned	_	VBN	VBN	_	0	root	_	_
12	.	_	.	.	_	0	erased	_	_
#nsubj(owned-11, overall-1)
#nsubj(phone-7, this-2)
#aux(phone-7, has-3)
#cop(phone-7, been-4)
#poss(phone-7, my-5)
#amod(phone-7, favorite-6)
#rcmod(overall-1, phone-7)
#prep_that(phone-7, i-9)
#aux(owned-11, have-10)
#root(ROOT-0, owned-11)
result:
1	great	_	JJ	JJ	_	3	amod	_	_
2	battery	_	NN	NN	_	3	nn	_	_
3	life	_	NN	NN	_	16	nsubj	_	_
4	,	_	,	,	_	0	erased	_	_
5	perfect	_	JJ	JJ	_	6	amod	_	_
6	size	_	NN	NN	_	3	appos	_	_
7	,	_	,	,	_	0	erased	_	_
8	but	_	CC	CC	_	6	cc	_	_
9	a	_	DT	DT	_	12	det	_	_
10	tid	_	JJ	JJ	_	12	amod	_	_
11	bit	_	NN	NN	_	12	nn	_	_
12	quieter	_	NN	NN	_	6	conj	_	_
13	than	_	IN	IN	_	12	prep	_	_
14	i	_	FW	FW	_	13	pobj	_	_
15	would	_	MD	MD	_	16	aux	_	_
16	like	_	VB	VB	_	0	root	_	_
17	.	_	.	.	_	0	erased	_	_
#amod(life-3, great-1)
#nn(life-3, battery-2)
#nsubj(like-16, life-3)
#amod(size-6, perfect-5)
#appos(life-3, size-6)
#det(quieter-12, a-9)
#amod(quieter-12, tid-10)
#nn(quieter-12, bit-11)
#appos(life-3, quieter-12)
#conj_but(size-6, quieter-12)
#prep_than(quieter-12, i-14)
#aux(like-16, would-15)
#root(ROOT-0, like-16)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	do	_	VB	VB	_	3	advmod	_	_
3	hope	_	VBP	VBP	_	0	root	_	_
4	that	_	IN	IN	_	6	mark	_	_
5	they	_	PRP	PRP	_	6	nsubj	_	_
6	offer	_	VBP	VBP	_	3	ccomp	_	_
7	more	_	JJR	JJR	_	9	amod	_	_
8	faceplate	_	JJ	JJ	_	9	amod	_	_
9	options	_	NNS	NNS	_	6	dobj	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(hope-3, i-1)
#advmod(hope-3, do-2)
#root(ROOT-0, hope-3)
#mark(offer-6, that-4)
#nsubj(offer-6, they-5)
#ccomp(hope-3, offer-6)
#amod(options-9, more-7)
#amod(options-9, faceplate-8)
#dobj(offer-6, options-9)
result:
1	i	_	FW	FW	_	7	nsubj	_	_
2	am	_	VBP	VBP	_	3	auxpass	_	_
3	bored	_	VBN	VBN	_	7	parataxis	_	_
4	with	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	6	det	_	_
6	silver	_	NN	NN	_	4	pobj	_	_
7	look	_	VBP	VBP	_	0	root	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(look-7, i-1)
#auxpass(bored-3, am-2)
#parataxis(look-7, bored-3)
#det(silver-6, the-5)
#prep_with(bored-3, silver-6)
#root(ROOT-0, look-7)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	has	_	VBZ	VBZ	_	0	root	_	_
3	a	_	DT	DT	_	6	det	_	_
4	nice	_	JJ	JJ	_	6	amod	_	_
5	color	_	NN	NN	_	6	nn	_	_
6	screen	_	NN	NN	_	2	dobj	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(has-2, it-1)
#root(ROOT-0, has-2)
#det(screen-6, a-3)
#amod(screen-6, nice-4)
#nn(screen-6, color-5)
#dobj(has-2, screen-6)
result:
1	it	_	PRP	PRP	_	3	nsubj	_	_
2	is	_	VBZ	VBZ	_	3	cop	_	_
3	small	_	JJ	JJ	_	0	root	_	_
4	.	_	.	.	_	0	erased	_	_
#nsubj(small-3, it-1)
#cop(small-3, is-2)
#root(ROOT-0, small-3)
result:
1	radio	_	NN	NN	_	3	nsubj	_	_
2	is	_	VBZ	VBZ	_	3	cop	_	_
3	awsome	_	JJ	JJ	_	0	root	_	_
4	,	_	,	,	_	0	erased	_	_
5	but	_	CC	CC	_	3	cc	_	_
6	it	_	PRP	PRP	_	9	nsubj	_	_
7	does	_	VBZ	VBZ	_	9	aux	_	_
8	n't	_	RB	RB	_	9	neg	_	_
9	work	_	VB	VB	_	3	conj	_	_
10	unless	_	IN	IN	_	12	mark	_	_
11	you	_	PRP	PRP	_	12	nsubj	_	_
12	have	_	VBP	VBP	_	9	advcl	_	_
13	the	_	DT	DT	_	14	det	_	_
14	earpice	_	NN	NN	_	12	dobj	_	_
15	in	_	IN	IN	_	12	prep	_	_
16	.	_	.	.	_	0	erased	_	_
#nsubj(awsome-3, radio-1)
#cop(awsome-3, is-2)
#root(ROOT-0, awsome-3)
#nsubj(work-9, it-6)
#aux(work-9, does-7)
#neg(work-9, n't-8)
#conj_but(awsome-3, work-9)
#mark(have-12, unless-10)
#nsubj(have-12, you-11)
#advcl(work-9, have-12)
#det(earpice-14, the-13)
#dobj(have-12, earpice-14)
#prep(have-12, in-15)
result:
1	that	_	WDT	WDT	_	5	nsubj	_	_
2	is	_	VBZ	VBZ	_	5	cop	_	_
3	a	_	DT	DT	_	5	det	_	_
4	major	_	JJ	JJ	_	5	amod	_	_
5	minus	_	NN	NN	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	but	_	CC	CC	_	5	cc	_	_
8	its	_	PRP$	PRP$	_	11	poss	_	_
9	not	_	RB	RB	_	11	quantmod	_	_
10	that	_	DT	DT	_	11	quantmod	_	_
11	bad	_	JJ	JJ	_	5	conj	_	_
12	.	_	.	.	_	0	erased	_	_
#nsubj(minus-5, that-1)
#nsubj(bad-11, that-1)
#cop(minus-5, is-2)
#det(minus-5, a-3)
#amod(minus-5, major-4)
#root(ROOT-0, minus-5)
#poss(bad-11, its-8)
#quantmod(bad-11, not-9)
#quantmod(bad-11, that-10)
#conj_but(minus-5, bad-11)
result:
1	t-mobile	_	NN	NN	_	6	nsubj	_	_
2	was	_	VBD	VBD	_	6	cop	_	_
3	a	_	DT	DT	_	6	det	_	_
4	pretty	_	RB	RB	_	5	advmod	_	_
5	good	_	JJ	JJ	_	6	amod	_	_
6	server	_	NN	NN	_	0	root	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(server-6, t-mobile-1)
#cop(server-6, was-2)
#det(server-6, a-3)
#advmod(good-5, pretty-4)
#amod(server-6, good-5)
#root(ROOT-0, server-6)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	has	_	VBZ	VBZ	_	0	root	_	_
3	2	_	CD	CD	_	4	num	_	_
4	games	_	NNS	NNS	_	2	dobj	_	_
5	.	_	.	.	_	0	erased	_	_
#nsubj(has-2, it-1)
#root(ROOT-0, has-2)
#num(games-4, 2-3)
#dobj(has-2, games-4)
result:
1	they	_	PRP	PRP	_	5	nsubj	_	_
2	are	_	VBP	VBP	_	5	cop	_	_
3	not	_	RB	RB	_	5	neg	_	_
4	wowable	_	RB	RB	_	5	advmod	_	_
5	good	_	JJ	JJ	_	0	root	_	_
6	.	_	.	.	_	0	erased	_	_
#nsubj(good-5, they-1)
#cop(good-5, are-2)
#neg(good-5, not-3)
#advmod(good-5, wowable-4)
#root(ROOT-0, good-5)
result:
1	you	_	PRP	PRP	_	2	nsubj	_	_
2	have	_	VBP	VBP	_	0	root	_	_
3	to	_	TO	TO	_	4	aux	_	_
4	buy	_	VB	VB	_	2	xcomp	_	_
5	better	_	JJR	JJR	_	6	amod	_	_
6	ones	_	NNS	NNS	_	4	dobj	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(have-2, you-1)
#nsubj(buy-4, you-1)
#root(ROOT-0, have-2)
#aux(buy-4, to-3)
#xcomp(have-2, buy-4)
#amod(ones-6, better-5)
#dobj(buy-4, ones-6)
result:
1	it	_	PRP	PRP	_	5	nsubj	_	_
2	also	_	RB	RB	_	5	advmod	_	_
3	does	_	VBZ	VBZ	_	5	aux	_	_
4	n't	_	RB	RB	_	5	neg	_	_
5	have	_	VB	VB	_	0	root	_	_
6	voice	_	NN	NN	_	5	dobj	_	_
7	activated	_	VBN	VBN	_	5	prep	_	_
8	dialing	_	VBG	VBG	_	7	pcomp	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(have-5, it-1)
#advmod(have-5, also-2)
#aux(have-5, does-3)
#neg(have-5, n't-4)
#root(ROOT-0, have-5)
#dobj(have-5, voice-6)
#prep(have-5, activated-7)
#pcomp(activated-7, dialing-8)
result:
1	big	_	JJ	JJ	_	2	amod	_	_
2	minus	_	NN	NN	_	0	root	_	_
3	!	_	.	.	_	0	erased	_	_
4	!	_	.	.	_	0	erased	_	_
#amod(minus-2, big-1)
#root(ROOT-0, minus-2)
result:
1	this	_	DT	DT	_	6	nsubj	_	_
2	is	_	VBZ	VBZ	_	6	cop	_	_
3	a	_	DT	DT	_	6	det	_	_
4	very	_	RB	RB	_	5	advmod	_	_
5	nice	_	JJ	JJ	_	6	amod	_	_
6	phone	_	NN	NN	_	0	root	_	_
7	,	_	,	,	_	0	erased	_	_
8	but	_	CC	CC	_	6	cc	_	_
9	there	_	EX	EX	_	10	expl	_	_
10	is	_	VBZ	VBZ	_	6	conj	_	_
11	no	_	DT	DT	_	12	neg	_	_
12	warranty	_	NN	NN	_	10	nsubj	_	_
13	on	_	IN	IN	_	12	prep	_	_
14	it	_	PRP	PRP	_	13	pobj	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(phone-6, this-1)
#cop(phone-6, is-2)
#det(phone-6, a-3)
#advmod(nice-5, very-4)
#amod(phone-6, nice-5)
#root(ROOT-0, phone-6)
#expl(is-10, there-9)
#conj_but(phone-6, is-10)
#neg(warranty-12, no-11)
#nsubj(is-10, warranty-12)
#prep_on(warranty-12, it-14)
result:
1	nokia	_	NN	NN	_	4	nsubj	_	_
2	will	_	MD	MD	_	4	aux	_	_
3	not	_	RB	RB	_	4	neg	_	_
4	cover	_	VB	VB	_	0	root	_	_
5	phones	_	NNS	NNS	_	4	dobj	_	_
6	bought	_	VBN	VBN	_	5	vmod	_	_
7	from	_	IN	IN	_	6	prep	_	_
8	amazon	_	NN	NN	_	7	pobj	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(cover-4, nokia-1)
#aux(cover-4, will-2)
#neg(cover-4, not-3)
#root(ROOT-0, cover-4)
#dobj(cover-4, phones-5)
#vmod(phones-5, bought-6)
#prep_from(bought-6, amazon-8)
result:
1	we	_	PRP	PRP	_	2	nsubj	_	_
2	got	_	VBD	VBD	_	0	root	_	_
3	two	_	CD	CD	_	4	num	_	_
4	phones	_	NNS	NNS	_	2	dobj	_	_
5	for	_	IN	IN	_	2	prep	_	_
6	the	_	DT	DT	_	9	det	_	_
7	t-mobile	_	JJ	JJ	_	9	amod	_	_
8	family	_	NN	NN	_	9	nn	_	_
9	plan	_	NN	NN	_	5	pobj	_	_
10	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
11	indeed	_	RB	RB	_	2	dep	_	_
12	very	_	RB	RB	_	11	dep	_	_
13	easy	_	JJ	JJ	_	11	dep	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	switch	_	VB	VB	_	13	xcomp	_	_
16	to	_	TO	TO	_	15	prep	_	_
17	the	_	DT	DT	_	19	det	_	_
18	family	_	NN	NN	_	19	nn	_	_
19	plan	_	NN	NN	_	16	pobj	_	_
20	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
21	and	_	CC	CC	_	2	cc	_	_
22	one	_	CD	CD	_	23	advmod	_	_
23	came	_	VBD	VBD	_	2	conj	_	_
24	with	_	IN	IN	_	23	prep	_	_
25	a	_	DT	DT	_	27	det	_	_
26	broken	_	JJ	JJ	_	27	amod	_	_
27	headphone	_	NN	NN	_	24	pobj	_	_
28	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
29	can	_	MD	MD	_	30	aux	_	_
30	hear	_	VB	VB	_	2	dep	_	_
31	but	_	CC	CC	_	30	cc	_	_
32	can	_	MD	MD	_	35	aux	_	_
33	not	_	RB	RB	_	35	neg	_	_
34	be	_	VB	VB	_	35	auxpass	_	_
35	heard	_	VBN	VBN	_	30	conj	_	_
36	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
37	and	_	CC	CC	_	2	cc	_	_
38	one	_	CD	CD	_	39	nsubj	_	_
39	died	_	VBD	VBD	_	2	conj	_	_
40	today	_	NN	NN	_	39	tmod	_	_
41	after	_	IN	IN	_	39	prep	_	_
42	less	_	JJR	JJR	_	43	mwe	_	_
43	than	_	IN	IN	_	44	quantmod	_	_
44	two	_	CD	CD	_	45	num	_	_
45	weeks	_	NNS	NNS	_	41	pobj	_	_
46	of	_	IN	IN	_	45	prep	_	_
47	use	_	NN	NN	_	46	pobj	_	_
48	.	_	.	.	_	0	erased	_	_
#nsubj(got-2, we-1)
#nsubj(came-23, we-1)
#root(ROOT-0, got-2)
#num(phones-4, two-3)
#dobj(got-2, phones-4)
#det(plan-9, the-6)
#amod(plan-9, t-mobile-7)
#nn(plan-9, family-8)
#prep_for(got-2, plan-9)
#dep(got-2, indeed-11)
#dep(indeed-11, very-12)
#dep(indeed-11, easy-13)
#aux(switch-15, to-14)
#xcomp(easy-13, switch-15)
#det(plan-19, the-17)
#nn(plan-19, family-18)
#prep_to(switch-15, plan-19)
#advmod(came-23, one-22)
#conj_and(got-2, came-23)
#det(headphone-27, a-25)
#amod(headphone-27, broken-26)
#prep_with(came-23, headphone-27)
#aux(hear-30, can-29)
#dep(got-2, hear-30)
#aux(heard-35, can-32)
#neg(heard-35, not-33)
#auxpass(heard-35, be-34)
#dep(got-2, heard-35)
#conj_but(hear-30, heard-35)
#nsubj(died-39, one-38)
#conj_and(got-2, died-39)
#tmod(died-39, today-40)
#mwe(than-43, less-42)
#quantmod(two-44, than-43)
#num(weeks-45, two-44)
#prep_after(died-39, weeks-45)
#prep_of(weeks-45, use-47)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	'll	_	MD	MD	_	3	aux	_	_
3	see	_	VB	VB	_	0	root	_	_
4	how	_	WRB	WRB	_	5	advmod	_	_
5	much	_	JJ	JJ	_	9	advmod	_	_
6	help	_	NN	NN	_	5	dep	_	_
7	i	_	FW	FW	_	9	nsubj	_	_
8	can	_	MD	MD	_	9	aux	_	_
9	get	_	VB	VB	_	3	ccomp	_	_
10	from	_	IN	IN	_	9	prep	_	_
11	amazon	_	NN	NN	_	10	pobj	_	_
12	and	_	CC	CC	_	9	cc	_	_
13	report	_	VB	VB	_	9	conj	_	_
14	back	_	RB	RB	_	13	advmod	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(see-3, i-1)
#aux(see-3, 'll-2)
#root(ROOT-0, see-3)
#advmod(much-5, how-4)
#advmod(get-9, much-5)
#dep(much-5, help-6)
#nsubj(get-9, i-7)
#nsubj(report-13, i-7)
#aux(get-9, can-8)
#ccomp(see-3, get-9)
#prep_from(get-9, amazon-11)
#ccomp(see-3, report-13)
#conj_and(get-9, report-13)
#advmod(report-13, back-14)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	upgraded	_	VBD	VBD	_	0	root	_	_
3	to	_	TO	TO	_	2	prep	_	_
4	a	_	DT	DT	_	5	det	_	_
5	6610	_	NN	NN	_	3	pobj	_	_
6	at	_	IN	IN	_	5	prep	_	_
7	my	_	PRP$	PRP$	_	10	poss	_	_
8	local	_	JJ	JJ	_	10	amod	_	_
9	t-mobile	_	JJ	JJ	_	10	amod	_	_
10	store	_	NN	NN	_	6	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#nsubj(upgraded-2, i-1)
#root(ROOT-0, upgraded-2)
#det(6610-5, a-4)
#prep_to(upgraded-2, 6610-5)
#poss(store-10, my-7)
#amod(store-10, local-8)
#amod(store-10, t-mobile-9)
#prep_at(6610-5, store-10)
result:
1	when	_	WRB	WRB	_	3	advmod	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	got	_	VBD	VBD	_	8	advcl	_	_
4	it	_	PRP	PRP	_	3	dobj	_	_
5	home	_	RB	RB	_	3	advmod	_	_
6	,	_	,	,	_	0	erased	_	_
7	i	_	FW	FW	_	8	nsubj	_	_
8	discovered	_	VBD	VBD	_	0	root	_	_
9	that	_	IN	IN	_	22	mark	_	_
10	the	_	DT	DT	_	12	det	_	_
11	menu	_	NN	NN	_	12	nn	_	_
12	options	_	NNS	NNS	_	22	nsubj	_	_
13	for	_	IN	IN	_	12	prep	_	_
14	sending	_	VBG	VBG	_	13	pcomp	_	_
15	messages	_	NNS	NNS	_	14	dobj	_	_
16	via	_	IN	IN	_	15	prep	_	_
17	either	_	DT	DT	_	18	preconj	_	_
18	text	_	NN	NN	_	16	pobj	_	_
19	or	_	CC	CC	_	18	cc	_	_
20	email	_	NN	NN	_	18	conj	_	_
21	simply	_	RB	RB	_	14	advmod	_	_
22	were	_	VBD	VBD	_	8	ccomp	_	_
23	n't	_	RB	RB	_	22	neg	_	_
24	there	_	EX	EX	_	27	expl	_	_
25	:	_	:	:	_	0	erased	_	_
26	it	_	PRP	PRP	_	27	nsubj	_	_
27	defaulted	_	VBD	VBD	_	22	ccomp	_	_
28	to	_	TO	TO	_	29	aux	_	_
29	unchangeable	_	VB	VB	_	27	xcomp	_	_
30	email	_	NN	NN	_	29	dobj	_	_
31	.	_	.	.	_	0	erased	_	_
#advmod(got-3, when-1)
#nsubj(got-3, i-2)
#advcl(discovered-8, got-3)
#dobj(got-3, it-4)
#advmod(got-3, home-5)
#nsubj(discovered-8, i-7)
#root(ROOT-0, discovered-8)
#mark(were-22, that-9)
#det(options-12, the-10)
#nn(options-12, menu-11)
#nsubj(were-22, options-12)
#prepc_for(options-12, sending-14)
#dobj(sending-14, messages-15)
#preconj(text-18, either-17)
#prep_via(messages-15, text-18)
#prep_via(messages-15, email-20)
#conj_or(text-18, email-20)
#advmod(sending-14, simply-21)
#ccomp(discovered-8, were-22)
#neg(were-22, n't-23)
#expl(defaulted-27, there-24)
#nsubj(defaulted-27, it-26)
#nsubj(unchangeable-29, it-26)
#ccomp(were-22, defaulted-27)
#aux(unchangeable-29, to-28)
#xcomp(defaulted-27, unchangeable-29)
#dobj(unchangeable-29, email-30)
result:
1	so	_	RB	RB	_	30	advmod	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	spent	_	VBD	VBD	_	30	parataxis	_	_
4	half	_	PDT	PDT	_	6	predet	_	_
5	an	_	DT	DT	_	6	det	_	_
6	hour	_	NN	NN	_	3	dobj	_	_
7	on	_	IN	IN	_	3	prep	_	_
8	the	_	DT	DT	_	9	det	_	_
9	phone	_	NN	NN	_	7	pobj	_	_
10	with	_	IN	IN	_	3	prep	_	_
11	tech	_	NN	NN	_	12	nn	_	_
12	support	_	NN	NN	_	10	pobj	_	_
13	,	_	,	,	_	0	erased	_	_
14	only	_	RB	RB	_	16	advmod	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	have	_	VB	VB	_	3	vmod	_	_
17	the	_	DT	DT	_	20	det	_	_
18	online	_	JJ	JJ	_	20	amod	_	_
19	tech	_	NN	NN	_	20	nn	_	_
20	person	_	NN	NN	_	21	nsubj	_	_
21	pull	_	VB	VB	_	16	ccomp	_	_
22	one	_	CD	CD	_	21	dobj	_	_
23	off	_	IN	IN	_	21	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	shelf	_	NN	NN	_	23	pobj	_	_
26	and	_	CC	CC	_	21	cc	_	_
27	tell	_	VB	VB	_	21	conj	_	_
28	me	_	PRP	PRP	_	27	dobj	_	_
29	he	_	PRP	PRP	_	30	nsubj	_	_
30	had	_	VBD	VBD	_	0	root	_	_
31	the	_	DT	DT	_	33	det	_	_
32	same	_	JJ	JJ	_	33	amod	_	_
33	problem	_	NN	NN	_	30	dobj	_	_
34	.	_	.	.	_	0	erased	_	_
#advmod(had-30, so-1)
#nsubj(spent-3, i-2)
#parataxis(had-30, spent-3)
#predet(hour-6, half-4)
#det(hour-6, an-5)
#dobj(spent-3, hour-6)
#det(phone-9, the-8)
#prep_on(spent-3, phone-9)
#nn(support-12, tech-11)
#prep_with(spent-3, support-12)
#advmod(have-16, only-14)
#aux(have-16, to-15)
#vmod(spent-3, have-16)
#det(person-20, the-17)
#amod(person-20, online-18)
#nn(person-20, tech-19)
#nsubj(pull-21, person-20)
#nsubj(tell-27, person-20)
#ccomp(have-16, pull-21)
#dobj(pull-21, one-22)
#det(shelf-25, the-24)
#prep_off(pull-21, shelf-25)
#ccomp(have-16, tell-27)
#conj_and(pull-21, tell-27)
#dobj(tell-27, me-28)
#nsubj(had-30, he-29)
#root(ROOT-0, had-30)
#det(problem-33, the-31)
#amod(problem-33, same-32)
#dobj(had-30, problem-33)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	returned	_	VBD	VBD	_	10	ccomp	_	_
3	to	_	TO	TO	_	2	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	store	_	NN	NN	_	3	pobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	whereupon	_	JJ	JJ	_	9	amod	_	_
8	the	_	DT	DT	_	9	det	_	_
9	clerk	_	NN	NN	_	10	nsubj	_	_
10	insisted	_	VBD	VBD	_	0	root	_	_
11	that	_	IN	IN	_	14	mark	_	_
12	he	_	PRP	PRP	_	14	nsubj	_	_
13	could	_	MD	MD	_	14	aux	_	_
14	make	_	VB	VB	_	10	ccomp	_	_
15	it	_	PRP	PRP	_	16	nsubj	_	_
16	work	_	VB	VB	_	14	ccomp	_	_
17	;	_	:	:	_	0	erased	_	_
18	he	_	PRP	PRP	_	19	nsubj	_	_
19	could	_	MD	MD	_	14	parataxis	_	_
20	n't	_	RB	RB	_	19	neg	_	_
21	.	_	.	.	_	0	erased	_	_
#nsubj(returned-2, i-1)
#ccomp(insisted-10, returned-2)
#det(store-5, the-4)
#prep_to(returned-2, store-5)
#amod(clerk-9, whereupon-7)
#det(clerk-9, the-8)
#nsubj(insisted-10, clerk-9)
#root(ROOT-0, insisted-10)
#mark(make-14, that-11)
#nsubj(make-14, he-12)
#aux(make-14, could-13)
#ccomp(insisted-10, make-14)
#nsubj(work-16, it-15)
#ccomp(make-14, work-16)
#nsubj(could-19, he-18)
#parataxis(make-14, could-19)
#neg(could-19, n't-20)
result:
1	he	_	PRP	PRP	_	2	nsubj	_	_
2	spent	_	VBD	VBD	_	0	root	_	_
3	another	_	DT	DT	_	5	det	_	_
4	half	_	JJ	JJ	_	5	amod	_	_
5	hour	_	NN	NN	_	2	dobj	_	_
6	on	_	IN	IN	_	2	prep	_	_
7	the	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	6	pobj	_	_
9	with	_	IN	IN	_	2	prep	_	_
10	tech	_	NN	NN	_	11	nn	_	_
11	support	_	NN	NN	_	9	pobj	_	_
12	,	_	,	,	_	0	erased	_	_
13	to	_	TO	TO	_	2	prep	_	_
14	no	_	DT	DT	_	15	neg	_	_
15	avail	_	NN	NN	_	13	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#nsubj(spent-2, he-1)
#root(ROOT-0, spent-2)
#det(hour-5, another-3)
#amod(hour-5, half-4)
#dobj(spent-2, hour-5)
#det(phone-8, the-7)
#prep_on(spent-2, phone-8)
#nn(support-11, tech-10)
#prep_with(spent-2, support-11)
#neg(avail-15, no-14)
#prep_to(spent-2, avail-15)
result:
1	so	_	RB	RB	_	3	advmod	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	had	_	VBD	VBD	_	0	root	_	_
4	to	_	TO	TO	_	5	aux	_	_
5	give	_	VB	VB	_	3	xcomp	_	_
6	up	_	RP	RP	_	5	prt	_	_
7	and	_	CC	CC	_	5	cc	_	_
8	return	_	VB	VB	_	5	conj	_	_
9	it	_	PRP	PRP	_	8	dobj	_	_
10	,	_	,	,	_	0	erased	_	_
11	having	_	VBG	VBG	_	12	aux	_	_
12	lost	_	VBN	VBN	_	8	vmod	_	_
13	about	_	IN	IN	_	14	quantmod	_	_
14	4	_	CD	CD	_	15	num	_	_
15	hours	_	NNS	NNS	_	12	dobj	_	_
16	.	_	.	.	_	0	erased	_	_
#advmod(had-3, so-1)
#nsubj(had-3, i-2)
#nsubj(give-5, i-2)
#nsubj(return-8, i-2)
#root(ROOT-0, had-3)
#aux(give-5, to-4)
#xcomp(had-3, give-5)
#prt(give-5, up-6)
#xcomp(had-3, return-8)
#conj_and(give-5, return-8)
#dobj(return-8, it-9)
#aux(lost-12, having-11)
#vmod(return-8, lost-12)
#quantmod(4-14, about-13)
#num(hours-15, 4-14)
#dobj(lost-12, hours-15)
result:
1	while	_	IN	IN	_	3	mark	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	had	_	VBD	VBD	_	14	advcl	_	_
4	the	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	the	_	DT	DT	_	9	det	_	_
8	positive	_	JJ	JJ	_	9	amod	_	_
9	features	_	NNS	NNS	_	14	nsubj	_	_
10	were	_	VBD	VBD	_	14	cop	_	_
11	:	_	:	:	_	0	erased	_	_
12	good	_	JJ	JJ	_	14	amod	_	_
13	sound	_	JJ	JJ	_	14	amod	_	_
14	quality	_	NN	NN	_	0	root	_	_
15	and	_	CC	CC	_	14	cc	_	_
16	an	_	DT	DT	_	19	det	_	_
17	excellent	_	JJ	JJ	_	19	amod	_	_
18	fm	_	NN	NN	_	19	nn	_	_
19	phone	_	NN	NN	_	14	conj	_	_
20	and	_	CC	CC	_	14	cc	_	_
21	earpiece	_	NN	NN	_	14	conj	_	_
22	.	_	.	.	_	0	erased	_	_
#mark(had-3, while-1)
#nsubj(had-3, i-2)
#advcl(quality-14, had-3)
#det(phone-5, the-4)
#dobj(had-3, phone-5)
#det(features-9, the-7)
#amod(features-9, positive-8)
#nsubj(quality-14, features-9)
#cop(quality-14, were-10)
#amod(quality-14, good-12)
#amod(quality-14, sound-13)
#root(ROOT-0, quality-14)
#det(phone-19, an-16)
#amod(phone-19, excellent-17)
#nn(phone-19, fm-18)
#conj_and(quality-14, phone-19)
#conj_and(quality-14, earpiece-21)
result:
1	negative	_	JJ	JJ	_	0	root	_	_
2	:	_	:	:	_	0	erased	_	_
3	impossibly	_	RB	RB	_	4	advmod	_	_
4	tiny	_	JJ	JJ	_	14	amod	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	difficult	_	JJ	JJ	_	4	conj	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	operate	_	VB	VB	_	6	xcomp	_	_
9	,	_	,	,	_	0	erased	_	_
10	barely	_	RB	RB	_	11	advmod	_	_
11	visible	_	JJ	JJ	_	4	dep	_	_
12	,	_	,	,	_	0	erased	_	_
13	power	_	NN	NN	_	14	nn	_	_
14	button	_	NN	NN	_	1	dep	_	_
15	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, negative-1)
#advmod(tiny-4, impossibly-3)
#amod(button-14, tiny-4)
#conj_and(tiny-4, difficult-6)
#amod(button-14, difficult-6)
#aux(operate-8, to-7)
#xcomp(difficult-6, operate-8)
#advmod(visible-11, barely-10)
#dep(tiny-4, visible-11)
#nn(button-14, power-13)
#dep(negative-1, button-14)
result:
1	poor	_	JJ	JJ	_	2	amod	_	_
2	visibility	_	NN	NN	_	0	root	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	keys	_	NNS	NNS	_	3	pobj	_	_
6	.	_	.	.	_	0	erased	_	_
#amod(visibility-2, poor-1)
#root(ROOT-0, visibility-2)
#det(keys-5, the-4)
#prep_on(visibility-2, keys-5)
result:
1	you	_	PRP	PRP	_	2	nsubj	_	_
2	have	_	VBP	VBP	_	0	root	_	_
3	to	_	TO	TO	_	4	aux	_	_
4	tilt	_	VB	VB	_	2	xcomp	_	_
5	the	_	DT	DT	_	6	det	_	_
6	phone	_	NN	NN	_	4	dobj	_	_
7	around	_	RP	RP	_	4	prt	_	_
8	to	_	TO	TO	_	9	aux	_	_
9	catch	_	VB	VB	_	4	vmod	_	_
10	the	_	DT	DT	_	11	det	_	_
11	light	_	NN	NN	_	9	dobj	_	_
12	on	_	IN	IN	_	9	prep	_	_
13	them	_	PRP	PRP	_	12	pobj	_	_
14	.	_	.	.	_	0	erased	_	_
#nsubj(have-2, you-1)
#nsubj(tilt-4, you-1)
#root(ROOT-0, have-2)
#aux(tilt-4, to-3)
#xcomp(have-2, tilt-4)
#det(phone-6, the-5)
#dobj(tilt-4, phone-6)
#prt(tilt-4, around-7)
#aux(catch-9, to-8)
#vmod(tilt-4, catch-9)
#det(light-11, the-10)
#dobj(catch-9, light-11)
#prep_on(catch-9, them-13)
result:
1	the	_	DT	DT	_	2	det	_	_
2	title	_	NN	NN	_	3	nsubj	_	_
3	says	_	VBZ	VBZ	_	0	root	_	_
4	it	_	PRP	PRP	_	5	nsubj	_	_
5	all	_	PDT	PDT	_	3	xcomp	_	_
6	...	_	:	:	_	0	erased	_	_
7	the	_	DT	DT	_	10	det	_	_
8	two	_	CD	CD	_	10	num	_	_
9	biggest	_	JJS	JJS	_	10	amod	_	_
10	things	_	NNS	NNS	_	5	dep	_	_
11	is	_	VBZ	VBZ	_	15	cop	_	_
12	the	_	DT	DT	_	15	det	_	_
13	excellent	_	JJ	JJ	_	15	amod	_	_
14	working	_	VBG	VBG	_	15	amod	_	_
15	speakerphone	_	NN	NN	_	10	rcmod	_	_
16	''	_	''	''	_	0	erased	_	_
17	unlike	_	IN	IN	_	41	prep	_	_
18	the	_	DT	DT	_	19	dep	_	_
19	nokia	_	NN	NN	_	17	pobj	_	_
20	3650	_	CD	CD	_	19	num	_	_
21	''	_	''	''	_	0	erased	_	_
22	and	_	CC	CC	_	19	cc	_	_
23	the	_	DT	DT	_	26	det	_	_
24	superb	_	JJ	JJ	_	26	amod	_	_
25	reception	_	NN	NN	_	26	nn	_	_
26	nokia	_	NN	NN	_	19	conj	_	_
27	is	_	VBZ	VBZ	_	28	auxpass	_	_
28	known	_	VBN	VBN	_	26	rcmod	_	_
29	for	_	IN	IN	_	28	prep	_	_
30	in	_	IN	IN	_	29	pcomp	_	_
31	the	_	DT	DT	_	33	det	_	_
32	gsm	_	NN	NN	_	33	nn	_	_
33	phones	_	NNS	NNS	_	30	pobj	_	_
34	they	_	PRP	PRP	_	35	nsubj	_	_
35	make	_	VB	VB	_	28	ccomp	_	_
36	...	_	:	:	_	0	erased	_	_
37	only	_	RB	RB	_	38	advmod	_	_
38	con	_	RB	RB	_	35	advmod	_	_
39	i	_	FW	FW	_	41	nsubj	_	_
40	can	_	MD	MD	_	41	aux	_	_
41	think	_	VB	VB	_	15	dep	_	_
42	of	_	IN	IN	_	10	prep	_	_
43	is	_	VBZ	VBZ	_	42	pobj	_	_
44	no	_	DT	DT	_	45	neg	_	_
45	camera	_	NN	NN	_	43	dep	_	_
46	...	_	:	:	_	0	erased	_	_
47	.	_	.	.	_	0	erased	_	_
#det(title-2, the-1)
#nsubj(says-3, title-2)
#root(ROOT-0, says-3)
#nsubj(all-5, it-4)
#xcomp(says-3, all-5)
#det(things-10, the-7)
#num(things-10, two-8)
#amod(things-10, biggest-9)
#dep(all-5, things-10)
#cop(speakerphone-15, is-11)
#det(speakerphone-15, the-12)
#amod(speakerphone-15, excellent-13)
#amod(speakerphone-15, working-14)
#rcmod(things-10, speakerphone-15)
#dep(nokia-19, the-18)
#prep_unlike(think-41, nokia-19)
#num(nokia-19, 3650-20)
#det(nokia-26, the-23)
#amod(nokia-26, superb-24)
#nn(nokia-26, reception-25)
#conj_and(nokia-19, nokia-26)
#prep_unlike(think-41, nokia-26)
#auxpass(known-28, is-27)
#rcmod(nokia-26, known-28)
#prep(known-28, for-29)
#pcomp(for-29, in-30)
#det(phones-33, the-31)
#nn(phones-33, gsm-32)
#pobj(in-30, phones-33)
#nsubj(make-35, they-34)
#ccomp(known-28, make-35)
#advmod(con-38, only-37)
#advmod(make-35, con-38)
#nsubj(think-41, i-39)
#aux(think-41, can-40)
#dep(speakerphone-15, think-41)
#prep_of(things-10, is-43)
#neg(camera-45, no-44)
#dep(is-43, camera-45)
result:
1	no	_	DT	DT	_	3	neg	_	_
2	big	_	JJ	JJ	_	3	amod	_	_
3	deal	_	NN	NN	_	0	root	_	_
4	for	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	6	det	_	_
6	size	_	NN	NN	_	4	dep	_	_
7	.	_	.	.	_	0	erased	_	_
8	.	_	.	.	_	0	erased	_	_
#neg(deal-3, no-1)
#amod(deal-3, big-2)
#root(ROOT-0, deal-3)
#prep(deal-3, for-4)
#det(size-6, the-5)
#dep(for-4, size-6)
result:
1	this	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	a	_	DT	DT	_	5	det	_	_
5	winner	_	NN	NN	_	13	ccomp	_	_
6	...	_	:	:	_	0	erased	_	_
7	anything	_	NN	NN	_	5	parataxis	_	_
8	this	_	DT	DT	_	9	det	_	_
9	phone	_	NN	NN	_	10	nsubj	_	_
10	does	_	VBZ	VBZ	_	7	rcmod	_	_
11	,	_	,	,	_	0	erased	_	_
12	it	_	PRP	PRP	_	13	nsubj	_	_
13	does	_	VBZ	VBZ	_	0	root	_	_
14	perfectly	_	RB	RB	_	13	advmod	_	_
15	.	_	.	.	_	0	erased	_	_
#det(phone-2, this-1)
#nsubj(winner-5, phone-2)
#cop(winner-5, is-3)
#det(winner-5, a-4)
#ccomp(does-13, winner-5)
#parataxis(winner-5, anything-7)
#det(phone-9, this-8)
#nsubj(does-10, phone-9)
#rcmod(anything-7, does-10)
#nsubj(does-13, it-12)
#root(ROOT-0, does-13)
#advmod(does-13, perfectly-14)
result:
1	the	_	DT	DT	_	2	det	_	_
2	speakerphone	_	NN	NN	_	9	nsubj	_	_
3	,	_	,	,	_	0	erased	_	_
4	the	_	DT	DT	_	5	det	_	_
5	radio	_	NN	NN	_	2	appos	_	_
6	,	_	,	,	_	0	erased	_	_
7	all	_	DT	DT	_	8	det	_	_
8	features	_	NNS	NNS	_	9	nsubj	_	_
9	work	_	VBP	VBP	_	0	root	_	_
10	perfectly	_	RB	RB	_	9	advmod	_	_
11	.	_	.	.	_	0	erased	_	_
#det(speakerphone-2, the-1)
#nsubj(work-9, speakerphone-2)
#det(radio-5, the-4)
#appos(speakerphone-2, radio-5)
#det(features-8, all-7)
#nsubj(work-9, features-8)
#root(ROOT-0, work-9)
#advmod(work-9, perfectly-10)
result:
1	the	_	DT	DT	_	2	det	_	_
2	speakerphone	_	NN	NN	_	0	root	_	_
3	:	_	:	:	_	0	erased	_	_
4	this	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	6	nsubj	_	_
6	has	_	VBZ	VBZ	_	2	dep	_	_
7	a	_	DT	DT	_	12	det	_	_
8	very	_	RB	RB	_	9	advmod	_	_
9	cool	_	JJ	JJ	_	12	amod	_	_
10	and	_	CC	CC	_	9	cc	_	_
11	useful	_	JJ	JJ	_	9	conj	_	_
12	feature	_	NN	NN	_	6	dobj	_	_
13	--	_	:	:	_	0	erased	_	_
14	the	_	DT	DT	_	15	det	_	_
15	speakerphone	_	NN	NN	_	12	dep	_	_
16	.	_	.	.	_	0	erased	_	_
#det(speakerphone-2, the-1)
#root(ROOT-0, speakerphone-2)
#det(phone-5, this-4)
#nsubj(has-6, phone-5)
#dep(speakerphone-2, has-6)
#det(feature-12, a-7)
#advmod(cool-9, very-8)
#amod(feature-12, cool-9)
#conj_and(cool-9, useful-11)
#amod(feature-12, useful-11)
#dobj(has-6, feature-12)
#det(speakerphone-15, the-14)
#dep(feature-12, speakerphone-15)
result:
1	as	_	RB	RB	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	before	_	IN	IN	_	5	mark	_	_
4	this	_	DT	DT	_	5	nsubj	_	_
5	works	_	VBZ	VBZ	_	2	advcl	_	_
6	perfectly	_	RB	RB	_	5	advmod	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(said-2, as-1)
#root(ROOT-0, said-2)
#mark(works-5, before-3)
#nsubj(works-5, this-4)
#advcl(said-2, works-5)
#advmod(works-5, perfectly-6)
result:
1	you	_	PRP	PRP	_	3	nsubj	_	_
2	can	_	MD	MD	_	3	aux	_	_
3	adjust	_	VB	VB	_	0	root	_	_
4	the	_	DT	DT	_	5	det	_	_
5	volume	_	NN	NN	_	3	dobj	_	_
6	to	_	TO	TO	_	8	aux	_	_
7	be	_	VB	VB	_	8	auxpass	_	_
8	heard	_	VBN	VBN	_	5	vmod	_	_
9	anywhere	_	RB	RB	_	8	advmod	_	_
10	or	_	CC	CC	_	9	cc	_	_
11	so	_	RB	RB	_	9	conj	_	_
12	that	_	IN	IN	_	16	mark	_	_
13	it	_	PRP	PRP	_	16	nsubj	_	_
14	does	_	VBZ	VBZ	_	16	aux	_	_
15	n't	_	RB	RB	_	16	neg	_	_
16	make	_	VB	VB	_	8	ccomp	_	_
17	that	_	DT	DT	_	18	det	_	_
18	big	_	JJ	JJ	_	16	dobj	_	_
19	of	_	IN	IN	_	18	prep	_	_
20	a	_	DT	DT	_	21	det	_	_
21	disturbance	_	NN	NN	_	19	pobj	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(adjust-3, you-1)
#aux(adjust-3, can-2)
#root(ROOT-0, adjust-3)
#det(volume-5, the-4)
#dobj(adjust-3, volume-5)
#aux(heard-8, to-6)
#auxpass(heard-8, be-7)
#vmod(volume-5, heard-8)
#advmod(heard-8, anywhere-9)
#advmod(heard-8, so-11)
#conj_or(anywhere-9, so-11)
#mark(make-16, that-12)
#nsubj(make-16, it-13)
#aux(make-16, does-14)
#neg(make-16, n't-15)
#ccomp(heard-8, make-16)
#det(big-18, that-17)
#dobj(make-16, big-18)
#det(disturbance-21, a-20)
#prep_of(big-18, disturbance-21)
result:
1	the	_	DT	DT	_	2	det	_	_
2	person	_	NN	NN	_	11	nsubj	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	6	det	_	_
5	other	_	JJ	JJ	_	6	amod	_	_
6	end	_	NN	NN	_	3	pobj	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	the	_	DT	DT	_	9	det	_	_
9	call	_	NN	NN	_	7	pobj	_	_
10	can	_	MD	MD	_	11	aux	_	_
11	hear	_	VB	VB	_	0	root	_	_
12	you	_	PRP	PRP	_	11	dobj	_	_
13	perfectly	_	RB	RB	_	11	advmod	_	_
14	.	_	.	.	_	0	erased	_	_
#det(person-2, the-1)
#nsubj(hear-11, person-2)
#det(end-6, the-4)
#amod(end-6, other-5)
#prep_on(person-2, end-6)
#det(call-9, the-8)
#prep_of(end-6, call-9)
#aux(hear-11, can-10)
#root(ROOT-0, hear-11)
#dobj(hear-11, you-12)
#advmod(hear-11, perfectly-13)
result:
1	you	_	PRP	PRP	_	3	nsubj	_	_
2	can	_	MD	MD	_	3	aux	_	_
3	be	_	VB	VB	_	0	root	_	_
4	up	_	RP	RP	_	3	prt	_	_
5	to	_	TO	TO	_	3	prep	_	_
6	about	_	IN	IN	_	7	quantmod	_	_
7	3	_	CD	CD	_	8	num	_	_
8	feet	_	NNS	NNS	_	5	pobj	_	_
9	away	_	RB	RB	_	3	advmod	_	_
10	from	_	IN	IN	_	9	prep	_	_
11	it	_	PRP	PRP	_	10	pobj	_	_
12	and	_	CC	CC	_	3	cc	_	_
13	it	_	PRP	PRP	_	16	nsubj	_	_
14	will	_	MD	MD	_	16	aux	_	_
15	still	_	RB	RB	_	16	advmod	_	_
16	work	_	VB	VB	_	3	conj	_	_
17	perfectly	_	RB	RB	_	16	advmod	_	_
18	.	_	.	.	_	0	erased	_	_
#nsubj(be-3, you-1)
#aux(be-3, can-2)
#root(ROOT-0, be-3)
#prt(be-3, up-4)
#quantmod(3-7, about-6)
#num(feet-8, 3-7)
#prep_to(be-3, feet-8)
#prep_away_from(be-3, it-11)
#nsubj(work-16, it-13)
#aux(work-16, will-14)
#advmod(work-16, still-15)
#conj_and(be-3, work-16)
#advmod(work-16, perfectly-17)
result:
1	only	_	RB	RB	_	2	quantmod	_	_
2	one	_	CD	CD	_	3	num	_	_
3	complaint	_	NN	NN	_	21	nsubj	_	_
4	about	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	6	det	_	_
6	speakerphone	_	NN	NN	_	4	pobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	you	_	PRP	PRP	_	11	nsubj	_	_
9	can	_	MD	MD	_	11	aux	_	_
10	only	_	RB	RB	_	11	advmod	_	_
11	activate	_	VBP	VBP	_	6	rcmod	_	_
12	the	_	DT	DT	_	14	det	_	_
13	speakerphone	_	JJ	JJ	_	14	amod	_	_
14	feature	_	NN	NN	_	11	dobj	_	_
15	once	_	RB	RB	_	21	advmod	_	_
16	the	_	DT	DT	_	17	det	_	_
17	person	_	NN	NN	_	21	advmod	_	_
18	you	_	PRP	PRP	_	20	nsubj	_	_
19	are	_	VBP	VBP	_	20	aux	_	_
20	calling	_	VBG	VBG	_	17	dep	_	_
21	answers	_	VBZ	VBZ	_	0	root	_	_
22	the	_	DT	DT	_	23	det	_	_
23	phone	_	NN	NN	_	21	dobj	_	_
24	,	_	,	,	_	0	erased	_	_
25	not	_	RB	RB	_	29	dep	_	_
26	while	_	IN	IN	_	29	mark	_	_
27	it	_	PRP	PRP	_	29	nsubj	_	_
28	is	_	VBZ	VBZ	_	29	aux	_	_
29	ringing	_	VBG	VBG	_	21	advcl	_	_
30	.	_	.	.	_	0	erased	_	_
#quantmod(one-2, only-1)
#num(complaint-3, one-2)
#nsubj(answers-21, complaint-3)
#det(speakerphone-6, the-5)
#prep_about(complaint-3, speakerphone-6)
#nsubj(activate-11, you-8)
#aux(activate-11, can-9)
#advmod(activate-11, only-10)
#rcmod(speakerphone-6, activate-11)
#det(feature-14, the-12)
#amod(feature-14, speakerphone-13)
#dobj(activate-11, feature-14)
#advmod(answers-21, once-15)
#det(person-17, the-16)
#advmod(answers-21, person-17)
#nsubj(calling-20, you-18)
#aux(calling-20, are-19)
#dep(person-17, calling-20)
#root(ROOT-0, answers-21)
#det(phone-23, the-22)
#dobj(answers-21, phone-23)
#dep(ringing-29, not-25)
#mark(ringing-29, while-26)
#nsubj(ringing-29, it-27)
#aux(ringing-29, is-28)
#advcl(answers-21, ringing-29)
result:
1	the	_	DT	DT	_	2	det	_	_
2	radio	_	NN	NN	_	0	root	_	_
3	:	_	:	:	_	0	erased	_	_
4	this	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	7	nsubj	_	_
6	is	_	VBZ	VBZ	_	7	cop	_	_
7	one	_	CD	CD	_	2	dep	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	11	det	_	_
10	few	_	JJ	JJ	_	11	amod	_	_
11	phones	_	NNS	NNS	_	8	pobj	_	_
12	that	_	WDT	WDT	_	13	nsubj	_	_
13	have	_	VBP	VBP	_	7	rcmod	_	_
14	an	_	DT	DT	_	17	det	_	_
15	fm	_	JJ	JJ	_	17	amod	_	_
16	radio	_	NN	NN	_	17	nn	_	_
17	tuner	_	NN	NN	_	13	dobj	_	_
18	built	_	VBN	VBN	_	17	vmod	_	_
19	in	_	IN	IN	_	18	prep	_	_
20	.	_	.	.	_	0	erased	_	_
#det(radio-2, the-1)
#root(ROOT-0, radio-2)
#det(phone-5, this-4)
#nsubj(one-7, phone-5)
#cop(one-7, is-6)
#dep(radio-2, one-7)
#nsubj(have-13, one-7)
#det(phones-11, the-9)
#amod(phones-11, few-10)
#prep_of(one-7, phones-11)
#rcmod(one-7, have-13)
#det(tuner-17, an-14)
#amod(tuner-17, fm-15)
#nn(tuner-17, radio-16)
#dobj(have-13, tuner-17)
#vmod(tuner-17, built-18)
#prep(built-18, in-19)
result:
1	this	_	DT	DT	_	2	det	_	_
2	radio	_	NN	NN	_	3	nsubj	_	_
3	receives	_	VBZ	VBZ	_	0	root	_	_
4	fairly	_	RB	RB	_	5	advmod	_	_
5	decent	_	JJ	JJ	_	6	amod	_	_
6	reception	_	NN	NN	_	3	dobj	_	_
7	but	_	CC	CC	_	3	cc	_	_
8	not	_	RB	RB	_	11	neg	_	_
9	nearly	_	RB	RB	_	11	advmod	_	_
10	as	_	RB	RB	_	11	advmod	_	_
11	good	_	JJ	JJ	_	3	conj	_	_
12	as	_	IN	IN	_	11	prep	_	_
13	a	_	DT	DT	_	15	det	_	_
14	normal	_	JJ	JJ	_	15	amod	_	_
15	radio	_	NN	NN	_	12	pobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	but	_	CC	CC	_	3	cc	_	_
18	as	_	RB	RB	_	19	advmod	_	_
19	long	_	RB	RB	_	32	advmod	_	_
20	as	_	IN	IN	_	24	mark	_	_
21	the	_	DT	DT	_	22	det	_	_
22	stations	_	NNS	NNS	_	24	nsubj	_	_
23	are	_	VBP	VBP	_	24	aux	_	_
24	coming	_	VBG	VBG	_	19	ccomp	_	_
25	in	_	RP	RP	_	24	prt	_	_
26	clearly	_	RB	RB	_	24	advmod	_	_
27	the	_	DT	DT	_	28	det	_	_
28	phone	_	NN	NN	_	30	poss	_	_
29	's	_	POS	POS	_	28	possessive	_	_
30	radio	_	NN	NN	_	32	nsubj	_	_
31	should	_	MD	MD	_	32	aux	_	_
32	work	_	VB	VB	_	3	conj	_	_
33	perfectly	_	RB	RB	_	32	advmod	_	_
34	.	_	.	.	_	0	erased	_	_
#det(radio-2, this-1)
#nsubj(receives-3, radio-2)
#nsubj(good-11, radio-2)
#root(ROOT-0, receives-3)
#advmod(decent-5, fairly-4)
#amod(reception-6, decent-5)
#dobj(receives-3, reception-6)
#neg(good-11, not-8)
#advmod(good-11, nearly-9)
#advmod(good-11, as-10)
#conj_but(receives-3, good-11)
#det(radio-15, a-13)
#amod(radio-15, normal-14)
#prep_as(good-11, radio-15)
#advmod(long-19, as-18)
#advmod(work-32, long-19)
#mark(coming-24, as-20)
#det(stations-22, the-21)
#nsubj(coming-24, stations-22)
#aux(coming-24, are-23)
#ccomp(long-19, coming-24)
#prt(coming-24, in-25)
#advmod(coming-24, clearly-26)
#det(phone-28, the-27)
#poss(radio-30, phone-28)
#nsubj(work-32, radio-30)
#aux(work-32, should-31)
#conj_but(receives-3, work-32)
#advmod(work-32, perfectly-33)
result:
1	tri-band	_	JJ	JJ	_	6	amod	_	_
2	:	_	:	:	_	0	erased	_	_
3	one	_	CD	CD	_	6	dep	_	_
4	highly	_	RB	RB	_	5	advmod	_	_
5	beneficial	_	JJ	JJ	_	6	amod	_	_
6	feature	_	NN	NN	_	16	nsubj	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	this	_	DT	DT	_	9	det	_	_
9	phone	_	NN	NN	_	7	pobj	_	_
10	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
11	at	_	IN	IN	_	6	dep	_	_
12	least	_	JJS	JJS	_	11	pobj	_	_
13	to	_	TO	TO	_	11	prep	_	_
14	me	_	PRP	PRP	_	13	pobj	_	_
15	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
16	is	_	VBZ	VBZ	_	0	root	_	_
17	that	_	IN	IN	_	21	mark	_	_
18	it	_	PRP	PRP	_	21	nsubjpass	_	_
19	can	_	MD	MD	_	21	aux	_	_
20	be	_	VB	VB	_	21	auxpass	_	_
21	used	_	VBN	VBN	_	16	ccomp	_	_
22	anywhere	_	RB	RB	_	23	advmod	_	_
23	in	_	IN	IN	_	21	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	world	_	NN	NN	_	23	pobj	_	_
26	except	_	IN	IN	_	25	prep	_	_
27	a	_	DT	DT	_	29	det	_	_
28	few	_	JJ	JJ	_	29	amod	_	_
29	countries	_	NNS	NNS	_	26	pobj	_	_
30	that	_	WDT	WDT	_	33	nsubj	_	_
31	do	_	VBP	VBP	_	33	aux	_	_
32	not	_	RB	RB	_	33	neg	_	_
33	use	_	VB	VB	_	29	rcmod	_	_
34	gsm	_	NN	NN	_	33	dobj	_	_
35	,	_	,	,	_	0	erased	_	_
36	a	_	DT	DT	_	37	det	_	_
37	few	_	JJ	JJ	_	34	appos	_	_
38	in	_	IN	IN	_	33	prep	_	_
39	asia	_	NN	NN	_	38	pobj	_	_
40	.	_	.	.	_	0	erased	_	_
#amod(feature-6, tri-band-1)
#dep(feature-6, one-3)
#advmod(beneficial-5, highly-4)
#amod(feature-6, beneficial-5)
#nsubj(is-16, feature-6)
#det(phone-9, this-8)
#prep_of(feature-6, phone-9)
#dep(feature-6, at-11)
#pobj(at-11, least-12)
#prep_to(at-11, me-14)
#root(ROOT-0, is-16)
#mark(used-21, that-17)
#nsubjpass(used-21, it-18)
#aux(used-21, can-19)
#auxpass(used-21, be-20)
#ccomp(is-16, used-21)
#advmod(used-21, anywhere-22)
#det(world-25, the-24)
#prep_in(used-21, world-25)
#det(countries-29, a-27)
#amod(countries-29, few-28)
#prep_except(world-25, countries-29)
#nsubj(use-33, countries-29)
#aux(use-33, do-31)
#neg(use-33, not-32)
#rcmod(countries-29, use-33)
#dobj(use-33, gsm-34)
#det(few-37, a-36)
#appos(gsm-34, few-37)
#prep_in(use-33, asia-39)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	bought	_	VBD	VBD	_	0	root	_	_
3	this	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	2	dobj	_	_
5	for	_	IN	IN	_	2	prep	_	_
6	my	_	PRP$	PRP$	_	7	poss	_	_
7	trip	_	NN	NN	_	5	pobj	_	_
8	to	_	TO	TO	_	7	prep	_	_
9	south	_	JJ	JJ	_	10	amod	_	_
10	africa	_	NN	NN	_	8	pobj	_	_
11	and	_	CC	CC	_	2	cc	_	_
12	it	_	PRP	PRP	_	13	nsubj	_	_
13	worked	_	VBD	VBD	_	2	conj	_	_
14	almost	_	RB	RB	_	15	advmod	_	_
15	perfectly	_	RB	RB	_	13	advmod	_	_
16	.	_	.	.	_	0	erased	_	_
#nsubj(bought-2, i-1)
#root(ROOT-0, bought-2)
#det(phone-4, this-3)
#dobj(bought-2, phone-4)
#poss(trip-7, my-6)
#prep_for(bought-2, trip-7)
#amod(africa-10, south-9)
#prep_to(trip-7, africa-10)
#nsubj(worked-13, it-12)
#conj_and(bought-2, worked-13)
#advmod(perfectly-15, almost-14)
#advmod(worked-13, perfectly-15)
result:
1	the	_	DT	DT	_	3	det	_	_
2	only	_	JJ	JJ	_	3	amod	_	_
3	problem	_	NN	NN	_	5	nsubj	_	_
4	i	_	FW	FW	_	3	dep	_	_
5	had	_	VBD	VBD	_	0	root	_	_
6	was	_	VBD	VBD	_	9	cop	_	_
7	a	_	DT	DT	_	9	det	_	_
8	small	_	JJ	JJ	_	9	amod	_	_
9	glitch	_	NN	NN	_	5	ccomp	_	_
10	with	_	IN	IN	_	9	prep	_	_
11	t-mobile	_	NN	NN	_	10	pobj	_	_
12	.	_	.	.	_	0	erased	_	_
#det(problem-3, the-1)
#amod(problem-3, only-2)
#nsubj(had-5, problem-3)
#dep(problem-3, i-4)
#root(ROOT-0, had-5)
#cop(glitch-9, was-6)
#det(glitch-9, a-7)
#amod(glitch-9, small-8)
#ccomp(had-5, glitch-9)
#prep_with(glitch-9, t-mobile-11)
result:
1	anywhere	_	RB	RB	_	3	advmod	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	went	_	VBD	VBD	_	0	root	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	south	_	JJ	JJ	_	6	amod	_	_
6	africa	_	NN	NN	_	4	pobj	_	_
7	this	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	9	nsubj	_	_
9	received	_	VBD	VBD	_	3	ccomp	_	_
10	full	_	JJ	JJ	_	12	amod	_	_
11	bar	_	NN	NN	_	12	nn	_	_
12	reception	_	NN	NN	_	9	dobj	_	_
13	.	_	.	.	_	0	erased	_	_
#advmod(went-3, anywhere-1)
#nsubj(went-3, i-2)
#root(ROOT-0, went-3)
#amod(africa-6, south-5)
#prep_in(went-3, africa-6)
#det(phone-8, this-7)
#nsubj(received-9, phone-8)
#ccomp(went-3, received-9)
#amod(reception-12, full-10)
#nn(reception-12, bar-11)
#dobj(received-9, reception-12)
result:
1	if	_	IN	IN	_	3	mark	_	_
2	it	_	PRP	PRP	_	3	nsubj	_	_
3	worked	_	VBD	VBD	_	15	advcl	_	_
4	like	_	IN	IN	_	3	advmod	_	_
5	that	_	DT	DT	_	4	dep	_	_
6	in	_	IN	IN	_	3	prep	_	_
7	south	_	JJ	JJ	_	8	amod	_	_
8	africa	_	NN	NN	_	6	pobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	i	_	FW	FW	_	8	appos	_	_
11	imagine	_	VB	VB	_	3	ccomp	_	_
12	it	_	PRP	PRP	_	15	nsubj	_	_
13	would	_	MD	MD	_	15	aux	_	_
14	just	_	RB	RB	_	15	advmod	_	_
15	work	_	VB	VB	_	0	root	_	_
16	without	_	IN	IN	_	15	prep	_	_
17	a	_	DT	DT	_	18	det	_	_
18	hitch	_	NN	NN	_	16	pobj	_	_
19	in	_	IN	IN	_	15	prep	_	_
20	europe	_	NN	NN	_	19	pobj	_	_
21	.	_	.	.	_	0	erased	_	_
#mark(worked-3, if-1)
#nsubj(worked-3, it-2)
#advcl(work-15, worked-3)
#advmod(worked-3, like-4)
#dep(like-4, that-5)
#amod(africa-8, south-7)
#prep_in(worked-3, africa-8)
#appos(africa-8, i-10)
#ccomp(worked-3, imagine-11)
#nsubj(work-15, it-12)
#aux(work-15, would-13)
#advmod(work-15, just-14)
#root(ROOT-0, work-15)
#det(hitch-18, a-17)
#prep_without(work-15, hitch-18)
#prep_in(work-15, europe-20)
result:
1	sold	_	VBN	VBN	_	14	prep	_	_
2	in	_	IN	IN	_	1	pcomp	_	_
3	other	_	JJ	JJ	_	4	amod	_	_
4	parts	_	NNS	NNS	_	2	pobj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	world	_	NN	NN	_	5	pobj	_	_
8	:	_	:	:	_	0	erased	_	_
9	another	_	DT	DT	_	10	det	_	_
10	benefit	_	NN	NN	_	14	nsubj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	this	_	DT	DT	_	13	det	_	_
13	phone	_	NN	NN	_	11	pobj	_	_
14	is	_	VBZ	VBZ	_	0	root	_	_
15	that	_	IN	IN	_	21	mark	_	_
16	it	_	PRP	PRP	_	21	nsubj	_	_
17	is	_	VBZ	VBZ	_	21	cop	_	_
18	truly	_	RB	RB	_	21	advmod	_	_
19	an	_	DT	DT	_	21	det	_	_
20	international	_	JJ	JJ	_	21	amod	_	_
21	phone	_	NN	NN	_	14	ccomp	_	_
22	;	_	:	:	_	0	erased	_	_
23	the	_	DT	DT	_	24	det	_	_
24	6610	_	CD	CD	_	26	nsubjpass	_	_
25	is	_	VBZ	VBZ	_	26	auxpass	_	_
26	sold	_	VBN	VBN	_	14	parataxis	_	_
27	in	_	IN	IN	_	26	prep	_	_
28	almost	_	RB	RB	_	29	advmod	_	_
29	everywhere	_	RB	RB	_	27	pcomp	_	_
30	in	_	IN	IN	_	26	prep	_	_
31	the	_	DT	DT	_	32	det	_	_
32	world	_	NN	NN	_	30	pobj	_	_
33	.	_	.	.	_	0	erased	_	_
#prep(is-14, sold-1)
#pcomp(sold-1, in-2)
#amod(parts-4, other-3)
#pobj(in-2, parts-4)
#det(world-7, the-6)
#prep_of(parts-4, world-7)
#det(benefit-10, another-9)
#nsubj(is-14, benefit-10)
#det(phone-13, this-12)
#prep_of(benefit-10, phone-13)
#root(ROOT-0, is-14)
#mark(phone-21, that-15)
#nsubj(phone-21, it-16)
#cop(phone-21, is-17)
#advmod(phone-21, truly-18)
#det(phone-21, an-19)
#amod(phone-21, international-20)
#ccomp(is-14, phone-21)
#det(6610-24, the-23)
#nsubjpass(sold-26, 6610-24)
#auxpass(sold-26, is-25)
#parataxis(is-14, sold-26)
#prep(sold-26, in-27)
#advmod(everywhere-29, almost-28)
#pcomp(in-27, everywhere-29)
#det(world-32, the-31)
#prep_in(sold-26, world-32)
result:
1	this	_	DT	DT	_	2	nsubj	_	_
2	means	_	VBZ	VBZ	_	0	root	_	_
3	that	_	IN	IN	_	5	mark	_	_
4	there	_	EX	EX	_	5	expl	_	_
5	is	_	VBZ	VBZ	_	2	ccomp	_	_
6	a	_	DT	DT	_	8	det	_	_
7	good	_	JJ	JJ	_	8	amod	_	_
8	chance	_	NN	NN	_	5	nsubj	_	_
9	that	_	IN	IN	_	14	mark	_	_
10	this	_	DT	DT	_	11	det	_	_
11	phone	_	NN	NN	_	14	nsubj	_	_
12	will	_	MD	MD	_	14	aux	_	_
13	not	_	RB	RB	_	14	neg	_	_
14	break	_	VB	VB	_	8	dep	_	_
15	easily	_	RB	RB	_	14	advmod	_	_
16	like	_	IN	IN	_	14	prep	_	_
17	typical	_	JJ	JJ	_	19	amod	_	_
18	american	_	NN	NN	_	19	nn	_	_
19	phones	_	NNS	NNS	_	16	pobj	_	_
20	.	_	.	.	_	0	erased	_	_
#nsubj(means-2, this-1)
#root(ROOT-0, means-2)
#mark(is-5, that-3)
#expl(is-5, there-4)
#ccomp(means-2, is-5)
#det(chance-8, a-6)
#amod(chance-8, good-7)
#nsubj(is-5, chance-8)
#mark(break-14, that-9)
#det(phone-11, this-10)
#nsubj(break-14, phone-11)
#aux(break-14, will-12)
#neg(break-14, not-13)
#dep(chance-8, break-14)
#advmod(break-14, easily-15)
#amod(phones-19, typical-17)
#nn(phones-19, american-18)
#prep_like(break-14, phones-19)
result:
1	or	_	CC	CC	_	7	cc	_	_
2	on	_	IN	IN	_	7	prep	_	_
3	the	_	DT	DT	_	5	det	_	_
4	rare	_	JJ	JJ	_	5	amod	_	_
5	occasion	_	NN	NN	_	2	pobj	_	_
6	it	_	PRP	PRP	_	7	nsubj	_	_
7	does	_	VBZ	VBZ	_	0	root	_	_
8	you	_	PRP	PRP	_	10	nsubj	_	_
9	can	_	MD	MD	_	10	aux	_	_
10	bring	_	VB	VB	_	7	ccomp	_	_
11	it	_	PRP	PRP	_	10	dobj	_	_
12	into	_	IN	IN	_	10	prep	_	_
13	any	_	DT	DT	_	15	det	_	_
14	t-mobile	_	JJ	JJ	_	15	amod	_	_
15	store	_	NN	NN	_	12	pobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	which	_	WDT	WDT	_	19	nsubjpass	_	_
18	are	_	VBP	VBP	_	19	auxpass	_	_
19	located	_	VBN	VBN	_	15	rcmod	_	_
20	in	_	IN	IN	_	19	prep	_	_
21	many	_	JJ	JJ	_	22	amod	_	_
22	countries	_	NNS	NNS	_	20	pobj	_	_
23	in	_	IN	IN	_	19	prep	_	_
24	europe	_	NN	NN	_	23	pobj	_	_
25	.	_	.	.	_	0	erased	_	_
#cc(does-7, or-1)
#det(occasion-5, the-3)
#amod(occasion-5, rare-4)
#prep_on(does-7, occasion-5)
#nsubj(does-7, it-6)
#root(ROOT-0, does-7)
#nsubj(bring-10, you-8)
#aux(bring-10, can-9)
#ccomp(does-7, bring-10)
#dobj(bring-10, it-11)
#det(store-15, any-13)
#amod(store-15, t-mobile-14)
#prep_into(bring-10, store-15)
#nsubjpass(located-19, store-15)
#auxpass(located-19, are-18)
#rcmod(store-15, located-19)
#amod(countries-22, many-21)
#prep_in(located-19, countries-22)
#prep_in(located-19, europe-24)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	can	_	MD	MD	_	4	aux	_	_
3	not	_	RB	RB	_	4	neg	_	_
4	stress	_	VB	VB	_	0	root	_	_
5	enough	_	RB	RB	_	7	advmod	_	_
6	how	_	WRB	WRB	_	7	advmod	_	_
7	big	_	JJ	JJ	_	8	dep	_	_
8	of	_	IN	IN	_	12	dep	_	_
9	a	_	DT	DT	_	10	det	_	_
10	benefit	_	NN	NN	_	8	pobj	_	_
11	it	_	PRP	PRP	_	12	nsubj	_	_
12	is	_	VBZ	VBZ	_	4	ccomp	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	have	_	VB	VB	_	12	xcomp	_	_
15	a	_	DT	DT	_	17	det	_	_
16	european	_	NN	NN	_	17	nn	_	_
17	phone	_	NN	NN	_	14	dobj	_	_
18	and	_	CC	CC	_	17	cc	_	_
19	a	_	DT	DT	_	21	det	_	_
20	european	_	JJ	JJ	_	21	amod	_	_
21	company	_	NN	NN	_	17	conj	_	_
22	providing	_	VBG	VBG	_	14	xcomp	_	_
23	your	_	PRP$	PRP$	_	26	poss	_	_
24	cell	_	NN	NN	_	26	nn	_	_
25	phone	_	NN	NN	_	26	nn	_	_
26	service	_	NN	NN	_	22	dobj	_	_
27	.	_	.	.	_	0	erased	_	_
#nsubj(stress-4, i-1)
#aux(stress-4, can-2)
#neg(stress-4, not-3)
#root(ROOT-0, stress-4)
#advmod(big-7, enough-5)
#advmod(big-7, how-6)
#dep(of-8, big-7)
#dep(is-12, of-8)
#det(benefit-10, a-9)
#pobj(of-8, benefit-10)
#nsubj(is-12, it-11)
#nsubj(have-14, it-11)
#ccomp(stress-4, is-12)
#aux(have-14, to-13)
#xcomp(is-12, have-14)
#det(phone-17, a-15)
#nn(phone-17, european-16)
#dobj(have-14, phone-17)
#det(company-21, a-19)
#amod(company-21, european-20)
#dobj(have-14, company-21)
#conj_and(phone-17, company-21)
#xcomp(have-14, providing-22)
#poss(service-26, your-23)
#nn(service-26, cell-24)
#nn(service-26, phone-25)
#dobj(providing-22, service-26)
result:
1	able	_	JJ	JJ	_	27	ccomp	_	_
2	to	_	TO	TO	_	3	aux	_	_
3	use	_	VB	VB	_	1	xcomp	_	_
4	service	_	NN	NN	_	3	dobj	_	_
5	in	_	IN	IN	_	3	prep	_	_
6	another	_	DT	DT	_	7	det	_	_
7	country	_	NN	NN	_	5	pobj	_	_
8	:	_	:	:	_	0	erased	_	_
9	if	_	IN	IN	_	11	mark	_	_
10	you	_	PRP	PRP	_	11	nsubj	_	_
11	decide	_	VBP	VBP	_	3	advcl	_	_
12	to	_	TO	TO	_	13	aux	_	_
13	go	_	VB	VB	_	11	xcomp	_	_
14	to	_	TO	TO	_	13	prep	_	_
15	another	_	DT	DT	_	16	det	_	_
16	country	_	NN	NN	_	14	pobj	_	_
17	for	_	IN	IN	_	13	prep	_	_
18	an	_	DT	DT	_	20	det	_	_
19	extended	_	JJ	JJ	_	20	amod	_	_
20	period	_	NN	NN	_	17	pobj	_	_
21	of	_	IN	IN	_	20	prep	_	_
22	time	_	NN	NN	_	21	pobj	_	_
23	,	_	,	,	_	0	erased	_	_
24	you	_	PRP	PRP	_	27	nsubj	_	_
25	can	_	MD	MD	_	27	aux	_	_
26	just	_	RB	RB	_	27	advmod	_	_
27	buy	_	VB	VB	_	0	root	_	_
28	a	_	DT	DT	_	30	det	_	_
29	sim	_	NN	NN	_	30	nn	_	_
30	card	_	NN	NN	_	27	dobj	_	_
31	from	_	IN	IN	_	27	prep	_	_
32	a	_	DT	DT	_	34	det	_	_
33	service	_	NN	NN	_	34	nn	_	_
34	provider	_	NN	NN	_	31	pobj	_	_
35	in	_	IN	IN	_	34	prep	_	_
36	that	_	DT	DT	_	37	det	_	_
37	country	_	NN	NN	_	35	pobj	_	_
38	.	_	.	.	_	0	erased	_	_
#ccomp(buy-27, able-1)
#aux(use-3, to-2)
#xcomp(able-1, use-3)
#dobj(use-3, service-4)
#det(country-7, another-6)
#prep_in(use-3, country-7)
#mark(decide-11, if-9)
#nsubj(decide-11, you-10)
#nsubj(go-13, you-10)
#advcl(use-3, decide-11)
#parataxis(use-3, decide-11)
#aux(go-13, to-12)
#xcomp(decide-11, go-13)
#det(country-16, another-15)
#prep_to(go-13, country-16)
#det(period-20, an-18)
#amod(period-20, extended-19)
#prep_for(go-13, period-20)
#prep_of(period-20, time-22)
#nsubj(buy-27, you-24)
#aux(buy-27, can-25)
#advmod(buy-27, just-26)
#root(ROOT-0, buy-27)
#det(card-30, a-28)
#nn(card-30, sim-29)
#dobj(buy-27, card-30)
#det(provider-34, a-32)
#nn(provider-34, service-33)
#prep_from(buy-27, provider-34)
#det(country-37, that-36)
#prep_in(provider-34, country-37)
result:
1	you	_	PRP	PRP	_	4	nsubj	_	_
2	would	_	MD	MD	_	4	aux	_	_
3	then	_	RB	RB	_	4	advmod	_	_
4	have	_	VB	VB	_	0	root	_	_
5	a	_	DT	DT	_	7	det	_	_
6	phone	_	NN	NN	_	7	nn	_	_
7	number	_	NN	NN	_	4	dobj	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	that	_	DT	DT	_	10	det	_	_
10	country	_	NN	NN	_	8	pobj	_	_
11	and	_	CC	CC	_	4	cc	_	_
12	not	_	RB	RB	_	13	neg	_	_
13	have	_	VB	VB	_	4	conj	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	pay	_	VB	VB	_	13	xcomp	_	_
16	for	_	IN	IN	_	15	prep	_	_
17	international	_	JJ	JJ	_	18	amod	_	_
18	roaming	_	NN	NN	_	16	pobj	_	_
19	in	_	IN	IN	_	18	prep	_	_
20	that	_	DT	DT	_	21	det	_	_
21	country	_	NN	NN	_	19	pobj	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(have-4, you-1)
#nsubj(have-13, you-1)
#nsubj(pay-15, you-1)
#aux(have-4, would-2)
#advmod(have-4, then-3)
#root(ROOT-0, have-4)
#det(number-7, a-5)
#nn(number-7, phone-6)
#dobj(have-4, number-7)
#det(country-10, that-9)
#prep_in(number-7, country-10)
#neg(have-13, not-12)
#conj_and(have-4, have-13)
#aux(pay-15, to-14)
#xcomp(have-13, pay-15)
#amod(roaming-18, international-17)
#prep_for(pay-15, roaming-18)
#det(country-21, that-20)
#prep_in(roaming-18, country-21)
result:
1	size	_	NN	NN	_	16	nsubj	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	weight	_	NN	NN	_	1	conj	_	_
4	:	_	:	:	_	0	erased	_	_
5	when	_	WRB	WRB	_	7	advmod	_	_
6	you	_	PRP	PRP	_	7	nsubj	_	_
7	put	_	VBP	VBP	_	1	conj	_	_
8	this	_	DT	DT	_	9	det	_	_
9	phone	_	NN	NN	_	7	dobj	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	your	_	PRP$	PRP$	_	12	poss	_	_
12	pocket	_	NN	NN	_	10	pobj	_	_
13	you	_	PRP	PRP	_	14	nsubj	_	_
14	forget	_	VB	VB	_	7	dep	_	_
15	it	_	PRP	PRP	_	14	dobj	_	_
16	is	_	VBZ	VBZ	_	0	root	_	_
17	there	_	RB	RB	_	16	advmod	_	_
18	;	_	:	:	_	0	erased	_	_
19	it	_	PRP	PRP	_	22	nsubj	_	_
20	is	_	VBZ	VBZ	_	22	cop	_	_
21	unbelievably	_	RB	RB	_	22	advmod	_	_
22	small	_	JJ	JJ	_	16	parataxis	_	_
23	and	_	CC	CC	_	22	cc	_	_
24	oh	_	UH	UH	_	27	discourse	_	_
25	,	_	,	,	_	0	erased	_	_
26	so	_	RB	RB	_	27	advmod	_	_
27	light	_	JJ	JJ	_	22	conj	_	_
28	.	_	.	.	_	0	erased	_	_
#nsubj(is-16, size-1)
#conj_and(size-1, weight-3)
#nsubj(is-16, weight-3)
#advmod(put-7, when-5)
#nsubj(put-7, you-6)
#conj_and(size-1, put-7)
#rcmod(size-1, put-7)
#nsubj(is-16, put-7)
#det(phone-9, this-8)
#dobj(put-7, phone-9)
#poss(pocket-12, your-11)
#prep_in(phone-9, pocket-12)
#nsubj(forget-14, you-13)
#dep(put-7, forget-14)
#dobj(forget-14, it-15)
#root(ROOT-0, is-16)
#advmod(is-16, there-17)
#nsubj(small-22, it-19)
#nsubj(light-27, it-19)
#cop(small-22, is-20)
#advmod(small-22, unbelievably-21)
#parataxis(is-16, small-22)
#discourse(light-27, oh-24)
#advmod(light-27, so-26)
#parataxis(is-16, light-27)
#conj_and(small-22, light-27)
result:
1	this	_	DT	DT	_	4	nsubj	_	_
2	is	_	VBZ	VBZ	_	4	cop	_	_
3	a	_	DT	DT	_	4	det	_	_
4	benefit	_	NN	NN	_	0	root	_	_
5	for	_	IN	IN	_	4	prep	_	_
6	many	_	JJ	JJ	_	7	amod	_	_
7	reasons	_	NNS	NNS	_	5	pobj	_	_
8	;	_	:	:	_	0	erased	_	_
9	one	_	CD	CD	_	10	advmod	_	_
10	being	_	VBG	VBG	_	20	vmod	_	_
11	just	_	RB	RB	_	10	advmod	_	_
12	for	_	IN	IN	_	10	prep	_	_
13	appearance	_	NN	NN	_	12	pobj	_	_
14	,	_	,	,	_	0	erased	_	_
15	your	_	PRP$	PRP$	_	16	poss	_	_
16	pants	_	NNS	NNS	_	20	nsubj	_	_
17	wo	_	MD	MD	_	20	aux	_	_
18	n't	_	RB	RB	_	20	neg	_	_
19	be	_	VB	VB	_	20	aux	_	_
20	bulging	_	VBG	VBG	_	4	parataxis	_	_
21	with	_	IN	IN	_	20	prep	_	_
22	this	_	DT	DT	_	23	det	_	_
23	phone	_	NN	NN	_	21	pobj	_	_
24	in	_	IN	IN	_	23	prep	_	_
25	your	_	PRP$	PRP$	_	26	poss	_	_
26	pocket	_	NN	NN	_	24	pobj	_	_
27	.	_	.	.	_	0	erased	_	_
#nsubj(benefit-4, this-1)
#cop(benefit-4, is-2)
#det(benefit-4, a-3)
#root(ROOT-0, benefit-4)
#amod(reasons-7, many-6)
#prep_for(benefit-4, reasons-7)
#advmod(being-10, one-9)
#vmod(bulging-20, being-10)
#advmod(being-10, just-11)
#prep_for(being-10, appearance-13)
#poss(pants-16, your-15)
#nsubj(bulging-20, pants-16)
#aux(bulging-20, wo-17)
#neg(bulging-20, n't-18)
#aux(bulging-20, be-19)
#parataxis(benefit-4, bulging-20)
#det(phone-23, this-22)
#prep_with(bulging-20, phone-23)
#poss(pocket-26, your-25)
#prep_in(phone-23, pocket-26)
result:
1	battery	_	NN	NN	_	2	nn	_	_
2	life	_	NN	NN	_	11	nsubj	_	_
3	:	_	:	:	_	0	erased	_	_
4	the	_	DT	DT	_	6	det	_	_
5	battery	_	NN	NN	_	6	nn	_	_
6	life	_	NN	NN	_	2	dep	_	_
7	on	_	IN	IN	_	6	prep	_	_
8	this	_	DT	DT	_	9	det	_	_
9	phone	_	NN	NN	_	7	pobj	_	_
10	is	_	VBZ	VBZ	_	11	cop	_	_
11	surreal	_	JJ	JJ	_	0	root	_	_
12	.	_	.	.	_	0	erased	_	_
#nn(life-2, battery-1)
#nsubj(surreal-11, life-2)
#det(life-6, the-4)
#nn(life-6, battery-5)
#dep(life-2, life-6)
#det(phone-9, this-8)
#prep_on(life-6, phone-9)
#cop(surreal-11, is-10)
#root(ROOT-0, surreal-11)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	lasts	_	VBZ	VBZ	_	0	root	_	_
3	,	_	,	,	_	0	erased	_	_
4	truly	_	RB	RB	_	2	advmod	_	_
5	,	_	,	,	_	0	erased	_	_
6	7	_	CD	CD	_	7	num	_	_
7	days	_	NNS	NNS	_	2	dobj	_	_
8	on	_	IN	IN	_	7	prep	_	_
9	standby	_	NN	NN	_	8	pobj	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(lasts-2, it-1)
#root(ROOT-0, lasts-2)
#advmod(lasts-2, truly-4)
#num(days-7, 7-6)
#dobj(lasts-2, days-7)
#prep_on(days-7, standby-9)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	've	_	VBP	VBP	_	3	aux	_	_
3	used	_	VBN	VBN	_	0	root	_	_
4	the	_	DT	DT	_	5	det	_	_
5	speakerphone	_	NN	NN	_	3	dobj	_	_
6	for	_	IN	IN	_	3	advmod	_	_
7	almost	_	RB	RB	_	6	advmod	_	_
8	two	_	CD	CD	_	9	num	_	_
9	hours	_	NNS	NNS	_	3	dobj	_	_
10	once	_	RB	RB	_	9	advmod	_	_
11	and	_	CC	CC	_	3	cc	_	_
12	the	_	DT	DT	_	13	det	_	_
13	battery	_	NN	NN	_	17	nsubj	_	_
14	did	_	VBD	VBD	_	17	aux	_	_
15	not	_	RB	RB	_	17	neg	_	_
16	even	_	RB	RB	_	17	advmod	_	_
17	go	_	VB	VB	_	3	conj	_	_
18	down	_	RP	RP	_	17	prt	_	_
19	one	_	CD	CD	_	21	num	_	_
20	single	_	JJ	JJ	_	21	amod	_	_
21	bar	_	NN	NN	_	17	dobj	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(used-3, i-1)
#aux(used-3, 've-2)
#root(ROOT-0, used-3)
#det(speakerphone-5, the-4)
#dobj(used-3, speakerphone-5)
#advmod(used-3, for-6)
#advmod(for-6, almost-7)
#num(hours-9, two-8)
#dobj(used-3, hours-9)
#advmod(hours-9, once-10)
#det(battery-13, the-12)
#nsubj(go-17, battery-13)
#aux(go-17, did-14)
#neg(go-17, not-15)
#advmod(go-17, even-16)
#conj_and(used-3, go-17)
#prt(go-17, down-18)
#num(bar-21, one-19)
#amod(bar-21, single-20)
#dobj(go-17, bar-21)
result:
1	it	_	PRP	PRP	_	3	nsubj	_	_
2	is	_	VBZ	VBZ	_	3	cop	_	_
3	amazing	_	JJ	JJ	_	0	root	_	_
4	that	_	IN	IN	_	7	mark	_	_
5	the	_	DT	DT	_	6	det	_	_
6	battery	_	NN	NN	_	7	nsubj	_	_
7	lasts	_	VBZ	VBZ	_	3	ccomp	_	_
8	so	_	RB	RB	_	9	advmod	_	_
9	long	_	RB	RB	_	7	advmod	_	_
10	when	_	WRB	WRB	_	15	advmod	_	_
11	the	_	DT	DT	_	12	det	_	_
12	phone	_	NN	NN	_	15	nsubj	_	_
13	is	_	VBZ	VBZ	_	15	cop	_	_
14	so	_	RB	RB	_	15	advmod	_	_
15	small	_	JJ	JJ	_	7	advcl	_	_
16	and	_	CC	CC	_	15	cc	_	_
17	light	_	JJ	JJ	_	15	conj	_	_
18	.	_	.	.	_	0	erased	_	_
#nsubj(amazing-3, it-1)
#cop(amazing-3, is-2)
#root(ROOT-0, amazing-3)
#mark(lasts-7, that-4)
#det(battery-6, the-5)
#nsubj(lasts-7, battery-6)
#ccomp(amazing-3, lasts-7)
#advmod(long-9, so-8)
#advmod(lasts-7, long-9)
#advmod(small-15, when-10)
#det(phone-12, the-11)
#nsubj(small-15, phone-12)
#nsubj(light-17, phone-12)
#cop(small-15, is-13)
#advmod(small-15, so-14)
#advcl(lasts-7, small-15)
#advcl(lasts-7, light-17)
#conj_and(small-15, light-17)
result:
1	this	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	3	nsubj	_	_
3	has	_	VBZ	VBZ	_	20	ccomp	_	_
4	many	_	JJ	JJ	_	6	amod	_	_
5	other	_	JJ	JJ	_	6	amod	_	_
6	features	_	NNS	NNS	_	3	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	ir	_	NN	NN	_	6	appos	_	_
9	,	_	,	,	_	0	erased	_	_
10	;	_	:	:	_	0	erased	_	_
11	just	_	RB	RB	_	13	advmod	_	_
12	to	_	TO	TO	_	13	aux	_	_
13	name	_	VB	VB	_	6	vmod	_	_
14	one	_	CD	CD	_	13	dobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	the	_	DT	DT	_	17	det	_	_
17	features	_	NNS	NNS	_	20	nsubj	_	_
18	above	_	IN	IN	_	17	prep	_	_
19	i	_	FW	FW	_	18	pobj	_	_
20	view	_	VBP	VBP	_	0	root	_	_
21	as	_	IN	IN	_	20	prep	_	_
22	the	_	DT	DT	_	24	det	_	_
23	most	_	RBS	RBS	_	24	advmod	_	_
24	beneficial	_	JJ	JJ	_	21	pobj	_	_
25	.	_	.	.	_	0	erased	_	_
#det(phone-2, this-1)
#nsubj(has-3, phone-2)
#ccomp(view-20, has-3)
#amod(features-6, many-4)
#amod(features-6, other-5)
#dobj(has-3, features-6)
#appos(features-6, ir-8)
#advmod(name-13, just-11)
#aux(name-13, to-12)
#vmod(features-6, name-13)
#dobj(name-13, one-14)
#det(features-17, the-16)
#nsubj(view-20, features-17)
#prep_above(features-17, i-19)
#root(ROOT-0, view-20)
#det(beneficial-24, the-22)
#advmod(beneficial-24, most-23)
#prep_as(view-20, beneficial-24)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	3	nsubj	_	_
3	has	_	VBZ	VBZ	_	0	root	_	_
4	a	_	DT	DT	_	7	det	_	_
5	few	_	JJ	JJ	_	7	amod	_	_
6	minor	_	JJ	JJ	_	7	amod	_	_
7	inconveniences	_	NNS	NNS	_	3	dep	_	_
8	,	_	,	,	_	0	erased	_	_
9	but	_	CC	CC	_	3	cc	_	_
10	only	_	RB	RB	_	13	advmod	_	_
11	because	_	IN	IN	_	13	mark	_	_
12	it	_	PRP	PRP	_	13	nsubj	_	_
13	lacks	_	VBZ	VBZ	_	3	advcl	_	_
14	those	_	DT	DT	_	15	det	_	_
15	features	_	NNS	NNS	_	13	dobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	bluetooth	_	JJ	JJ	_	15	amod	_	_
18	and	_	CC	CC	_	17	cc	_	_
19	high	_	JJ	JJ	_	17	conj	_	_
20	spend	_	VB	VB	_	13	dep	_	_
21	internet	_	NN	NN	_	20	dobj	_	_
22	,	_	,	,	_	0	erased	_	_
23	but	_	CC	CC	_	3	cc	_	_
24	there	_	EX	EX	_	25	expl	_	_
25	are	_	VBP	VBP	_	3	conj	_	_
26	very	_	RB	RB	_	27	advmod	_	_
27	few	_	JJ	JJ	_	28	amod	_	_
28	problems	_	NNS	NNS	_	25	nsubj	_	_
29	with	_	IN	IN	_	28	prep	_	_
30	things	_	NNS	NNS	_	29	pobj	_	_
31	that	_	IN	IN	_	33	mark	_	_
32	you	_	PRP	PRP	_	33	nsubj	_	_
33	expected	_	VBD	VBD	_	25	ccomp	_	_
34	this	_	DT	DT	_	35	det	_	_
35	phone	_	NN	NN	_	33	dobj	_	_
36	to	_	TO	TO	_	37	aux	_	_
37	do	_	VB	VB	_	33	xcomp	_	_
38	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(has-3, phone-2)
#root(ROOT-0, has-3)
#det(inconveniences-7, a-4)
#amod(inconveniences-7, few-5)
#amod(inconveniences-7, minor-6)
#dep(has-3, inconveniences-7)
#advmod(lacks-13, only-10)
#mark(lacks-13, because-11)
#nsubj(lacks-13, it-12)
#advcl(has-3, lacks-13)
#det(features-15, those-14)
#dobj(lacks-13, features-15)
#amod(features-15, bluetooth-17)
#amod(features-15, high-19)
#conj_and(bluetooth-17, high-19)
#dep(lacks-13, spend-20)
#dobj(spend-20, internet-21)
#expl(are-25, there-24)
#conj_but(has-3, are-25)
#advmod(few-27, very-26)
#amod(problems-28, few-27)
#nsubj(are-25, problems-28)
#prep_with(problems-28, things-30)
#mark(expected-33, that-31)
#nsubj(expected-33, you-32)
#ccomp(are-25, expected-33)
#det(phone-35, this-34)
#dobj(expected-33, phone-35)
#nsubj(do-37, phone-35)
#aux(do-37, to-36)
#xcomp(expected-33, do-37)
result:
1	overall	_	RB	RB	_	5	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	i	_	FW	FW	_	5	nsubj	_	_
4	highly	_	RB	RB	_	5	advmod	_	_
5	recommend	_	VBP	VBP	_	0	root	_	_
6	this	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	5	dobj	_	_
8	.	_	.	.	_	0	erased	_	_
#advmod(recommend-5, overall-1)
#nsubj(recommend-5, i-3)
#advmod(recommend-5, highly-4)
#root(ROOT-0, recommend-5)
#det(phone-7, this-6)
#dobj(recommend-5, phone-7)
result:
1	it	_	PRP	PRP	_	5	nsubj	_	_
2	is	_	VBZ	VBZ	_	5	cop	_	_
3	a	_	DT	DT	_	5	det	_	_
4	perfect	_	JJ	JJ	_	5	amod	_	_
5	phone	_	NN	NN	_	0	root	_	_
6	in	_	IN	IN	_	5	prep	_	_
7	such	_	PDT	PDT	_	9	dep	_	_
8	a	_	DT	DT	_	9	det	_	_
9	small	_	JJ	JJ	_	6	pobj	_	_
10	and	_	CC	CC	_	9	cc	_	_
11	appealing	_	JJ	JJ	_	12	amod	_	_
12	package	_	NN	NN	_	9	conj	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(phone-5, it-1)
#cop(phone-5, is-2)
#det(phone-5, a-3)
#amod(phone-5, perfect-4)
#root(ROOT-0, phone-5)
#dep(small-9, such-7)
#det(small-9, a-8)
#prep_in(phone-5, small-9)
#amod(package-12, appealing-11)
#prep_in(phone-5, package-12)
#conj_and(small-9, package-12)
result:
1	i	_	FW	FW	_	4	dep	_	_
2	love	_	NN	NN	_	1	pobj	_	_
3	the	_	DT	DT	_	4	det	_	_
4	pros	_	NNS	NNS	_	11	dep	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	cons	_	NNS	NNS	_	4	conj	_	_
7	reviews	_	NNS	NNS	_	4	dep	_	_
8	so	_	RB	RB	_	9	advmod	_	_
9	here	_	RB	RB	_	11	dep	_	_
10	ya	_	PRP	PRP	_	11	nsubj	_	_
11	go	_	VBP	VBP	_	0	root	_	_
12	:	_	:	:	_	0	erased	_	_
13	pros	_	NNS	NNS	_	11	dobj	_	_
14	:	_	:	:	_	0	erased	_	_
15	size	_	NN	NN	_	22	nsubj	_	_
16	-	_	:	:	_	0	erased	_	_
17	extremely	_	RB	RB	_	18	advmod	_	_
18	small	_	JJ	JJ	_	15	dep	_	_
19	and	_	CC	CC	_	18	cc	_	_
20	convenient	_	JJ	JJ	_	18	conj	_	_
21	will	_	MD	MD	_	22	aux	_	_
22	fit	_	VB	VB	_	11	parataxis	_	_
23	in	_	IN	IN	_	22	prep	_	_
24	your	_	PRP$	PRP$	_	25	poss	_	_
25	pocket	_	NN	NN	_	23	pobj	_	_
26	and	_	CC	CC	_	22	cc	_	_
27	not	_	RB	RB	_	28	neg	_	_
28	bother	_	VB	VB	_	22	conj	_	_
29	you	_	PRP	PRP	_	28	dobj	_	_
30	.	_	.	.	_	0	erased	_	_
#dep(pros-4, i-1)
#pobj(i-1, love-2)
#det(pros-4, the-3)
#dep(go-11, pros-4)
#conj_and(pros-4, cons-6)
#dep(go-11, cons-6)
#dep(pros-4, reviews-7)
#advmod(here-9, so-8)
#dep(go-11, here-9)
#nsubj(go-11, ya-10)
#root(ROOT-0, go-11)
#dobj(go-11, pros-13)
#parataxis(go-11, pros-13)
#nsubj(fit-22, size-15)
#nsubj(bother-28, size-15)
#advmod(small-18, extremely-17)
#dep(size-15, small-18)
#dep(size-15, convenient-20)
#conj_and(small-18, convenient-20)
#aux(fit-22, will-21)
#parataxis(go-11, fit-22)
#poss(pocket-25, your-24)
#prep_in(fit-22, pocket-25)
#neg(bother-28, not-27)
#parataxis(go-11, bother-28)
#conj_and(fit-22, bother-28)
#dobj(bother-28, you-29)
result:
1	sound	_	JJ	JJ	_	9	dep	_	_
2	-	_	:	:	_	0	erased	_	_
3	excellent	_	JJ	JJ	_	6	amod	_	_
4	polyphonic	_	JJ	JJ	_	6	amod	_	_
5	ringing	_	VBG	VBG	_	6	amod	_	_
6	tones	_	NNS	NNS	_	9	nsubj	_	_
7	are	_	VBP	VBP	_	9	cop	_	_
8	very	_	RB	RB	_	9	advmod	_	_
9	nice	_	JJ	JJ	_	0	root	_	_
10	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
11	check	_	VB	VB	_	9	parataxis	_	_
12	cons	_	NNS	NNS	_	11	dobj	_	_
13	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
14	it	_	PRP	PRP	_	16	nsubj	_	_
15	also	_	RB	RB	_	16	advmod	_	_
16	doubles	_	VBZ	VBZ	_	9	ccomp	_	_
17	as	_	IN	IN	_	16	prep	_	_
18	a	_	DT	DT	_	19	det	_	_
19	radio	_	NN	NN	_	17	pobj	_	_
20	,	_	,	,	_	0	erased	_	_
21	which	_	WDT	WDT	_	25	nsubj	_	_
22	is	_	VBZ	VBZ	_	25	cop	_	_
23	a	_	DT	DT	_	25	det	_	_
24	nice	_	JJ	JJ	_	25	amod	_	_
25	feature	_	NN	NN	_	19	rcmod	_	_
26	when	_	WRB	WRB	_	29	advmod	_	_
27	you	_	PRP	PRP	_	29	nsubjpass	_	_
28	are	_	VBP	VBP	_	29	auxpass	_	_
29	bored	_	VBN	VBN	_	25	rcmod	_	_
30	.	_	.	.	_	0	erased	_	_
#dep(nice-9, sound-1)
#amod(tones-6, excellent-3)
#amod(tones-6, polyphonic-4)
#amod(tones-6, ringing-5)
#nsubj(nice-9, tones-6)
#cop(nice-9, are-7)
#advmod(nice-9, very-8)
#root(ROOT-0, nice-9)
#parataxis(nice-9, check-11)
#dobj(check-11, cons-12)
#nsubj(doubles-16, it-14)
#advmod(doubles-16, also-15)
#ccomp(nice-9, doubles-16)
#det(radio-19, a-18)
#prep_as(doubles-16, radio-19)
#nsubj(feature-25, radio-19)
#cop(feature-25, is-22)
#det(feature-25, a-23)
#amod(feature-25, nice-24)
#rcmod(radio-19, feature-25)
#tmod(bored-29, feature-25)
#advmod(bored-29, when-26)
#nsubjpass(bored-29, you-27)
#auxpass(bored-29, are-28)
#rcmod(feature-25, bored-29)
result:
1	speakerphone	_	NN	NN	_	6	nsubj	_	_
2	-	_	:	:	_	0	erased	_	_
3	loud	_	JJ	JJ	_	1	dep	_	_
4	and	_	CC	CC	_	3	cc	_	_
5	clear	_	JJ	JJ	_	3	conj	_	_
6	has	_	VBZ	VBZ	_	0	root	_	_
7	some	_	DT	DT	_	10	det	_	_
8	nice	_	JJ	JJ	_	10	amod	_	_
9	extra	_	JJ	JJ	_	10	amod	_	_
10	features	_	NNS	NNS	_	6	dobj	_	_
11	like	_	IN	IN	_	10	prep	_	_
12	currency	_	NN	NN	_	13	nn	_	_
13	converter	_	NN	NN	_	11	pobj	_	_
14	and	_	CC	CC	_	13	cc	_	_
15	a	_	DT	DT	_	16	det	_	_
16	stopwatch	_	NN	NN	_	13	conj	_	_
17	.	_	.	.	_	0	erased	_	_
#nsubj(has-6, speakerphone-1)
#dep(speakerphone-1, loud-3)
#dep(speakerphone-1, clear-5)
#conj_and(loud-3, clear-5)
#root(ROOT-0, has-6)
#det(features-10, some-7)
#amod(features-10, nice-8)
#amod(features-10, extra-9)
#dobj(has-6, features-10)
#nn(converter-13, currency-12)
#prep_like(features-10, converter-13)
#det(stopwatch-16, a-15)
#prep_like(features-10, stopwatch-16)
#conj_and(converter-13, stopwatch-16)
result:
1	surfing	_	VBG	VBG	_	13	vmod	_	_
2	the	_	DT	DT	_	3	det	_	_
3	web	_	NN	NN	_	1	dobj	_	_
4	on	_	IN	IN	_	1	prep	_	_
5	it	_	PRP	PRP	_	7	nsubj	_	_
6	is	_	VBZ	VBZ	_	7	cop	_	_
7	nice	_	JJ	JJ	_	4	pcomp	_	_
8	as	_	IN	IN	_	7	prep	_	_
9	well	_	RB	RB	_	8	pcomp	_	_
10	,	_	,	,	_	0	erased	_	_
11	i	_	FW	FW	_	13	nsubj	_	_
12	just	_	RB	RB	_	13	advmod	_	_
13	wish	_	VBP	VBP	_	0	root	_	_
14	there	_	EX	EX	_	15	expl	_	_
15	were	_	VBD	VBD	_	13	ccomp	_	_
16	more	_	JJR	JJR	_	18	amod	_	_
17	wap	_	NN	NN	_	18	nn	_	_
18	pages	_	NNS	NNS	_	15	nsubj	_	_
19	available	_	JJ	JJ	_	15	dep	_	_
20	.	_	.	.	_	0	erased	_	_
#vmod(wish-13, surfing-1)
#det(web-3, the-2)
#dobj(surfing-1, web-3)
#nsubj(nice-7, it-5)
#cop(nice-7, is-6)
#prepc_on(surfing-1, nice-7)
#prep(nice-7, as-8)
#pcomp(as-8, well-9)
#nsubj(wish-13, i-11)
#advmod(wish-13, just-12)
#root(ROOT-0, wish-13)
#expl(were-15, there-14)
#ccomp(wish-13, were-15)
#amod(pages-18, more-16)
#nn(pages-18, wap-17)
#nsubj(were-15, pages-18)
#dep(were-15, available-19)
result:
1	cons	_	NNS	NNS	_	4	dep	_	_
2	:	_	:	:	_	0	erased	_	_
3	ring	_	NN	NN	_	4	nn	_	_
4	tones	_	NNS	NNS	_	15	ccomp	_	_
5	only	_	RB	RB	_	6	advmod	_	_
6	come	_	VBN	VBN	_	4	vmod	_	_
7	with	_	IN	IN	_	6	prep	_	_
8	crazy	_	JJ	JJ	_	9	amod	_	_
9	songs	_	NNS	NNS	_	7	pobj	_	_
10	and	_	CC	CC	_	9	cc	_	_
11	annoying	_	JJ	JJ	_	12	amod	_	_
12	rings	_	NNS	NNS	_	9	conj	_	_
13	,	_	,	,	_	0	erased	_	_
14	there	_	EX	EX	_	15	expl	_	_
15	is	_	VBZ	VBZ	_	0	root	_	_
16	only	_	RB	RB	_	17	quantmod	_	_
17	one	_	CD	CD	_	18	num	_	_
18	ring	_	NN	NN	_	15	nsubj	_	_
19	that	_	WDT	WDT	_	20	nsubj	_	_
20	sounds	_	VBZ	VBZ	_	18	rcmod	_	_
21	close	_	JJ	JJ	_	20	acomp	_	_
22	to	_	TO	TO	_	21	prep	_	_
23	a	_	DT	DT	_	25	det	_	_
24	regular	_	JJ	JJ	_	25	amod	_	_
25	ring	_	NN	NN	_	22	pobj	_	_
26	.	_	.	.	_	0	erased	_	_
#dep(tones-4, cons-1)
#nn(tones-4, ring-3)
#ccomp(is-15, tones-4)
#advmod(come-6, only-5)
#vmod(tones-4, come-6)
#amod(songs-9, crazy-8)
#prep_with(come-6, songs-9)
#amod(rings-12, annoying-11)
#prep_with(come-6, rings-12)
#conj_and(songs-9, rings-12)
#expl(is-15, there-14)
#root(ROOT-0, is-15)
#quantmod(one-17, only-16)
#num(ring-18, one-17)
#nsubj(is-15, ring-18)
#nsubj(sounds-20, ring-18)
#rcmod(ring-18, sounds-20)
#acomp(sounds-20, close-21)
#det(ring-25, a-23)
#amod(ring-25, regular-24)
#prep_to(close-21, ring-25)
result:
1	the	_	DT	DT	_	2	det	_	_
2	screen	_	NN	NN	_	5	nsubjpass	_	_
3	is	_	VBZ	VBZ	_	5	auxpass	_	_
4	easily	_	RB	RB	_	5	advmod	_	_
5	scratched	_	VBN	VBN	_	0	root	_	_
6	but	_	CC	CC	_	5	cc	_	_
7	if	_	IN	IN	_	9	mark	_	_
8	you	_	PRP	PRP	_	9	nsubj	_	_
9	have	_	VBP	VBP	_	15	advcl	_	_
10	the	_	DT	DT	_	11	det	_	_
11	warranty	_	NN	NN	_	9	dobj	_	_
12	you	_	PRP	PRP	_	15	nsubj	_	_
13	should	_	MD	MD	_	15	aux	_	_
14	be	_	VB	VB	_	15	cop	_	_
15	able	_	JJ	JJ	_	5	conj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	swap	_	VB	VB	_	15	xcomp	_	_
18	it	_	PRP	PRP	_	17	dobj	_	_
19	out	_	RP	RP	_	17	prt	_	_
20	.	_	.	.	_	0	erased	_	_
#det(screen-2, the-1)
#nsubjpass(scratched-5, screen-2)
#auxpass(scratched-5, is-3)
#advmod(scratched-5, easily-4)
#root(ROOT-0, scratched-5)
#mark(have-9, if-7)
#nsubj(have-9, you-8)
#advcl(able-15, have-9)
#det(warranty-11, the-10)
#dobj(have-9, warranty-11)
#nsubj(able-15, you-12)
#nsubj(swap-17, you-12)
#aux(able-15, should-13)
#cop(able-15, be-14)
#conj_but(scratched-5, able-15)
#aux(swap-17, to-16)
#xcomp(able-15, swap-17)
#dobj(swap-17, it-18)
#prt(swap-17, out-19)
result:
1	games	_	NNS	NNS	_	2	nn	_	_
2	kind	_	NN	NN	_	4	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	stink	_	VBP	VBP	_	0	root	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	you	_	PRP	PRP	_	8	nsubj	_	_
7	cant	_	NN	NN	_	8	dep	_	_
8	download	_	VB	VB	_	4	conj	_	_
9	them	_	PRP	PRP	_	8	dobj	_	_
10	you	_	PRP	PRP	_	11	nsubj	_	_
11	have	_	VBP	VBP	_	8	dep	_	_
12	to	_	TO	TO	_	13	aux	_	_
13	get	_	VB	VB	_	11	xcomp	_	_
14	the	_	DT	DT	_	16	det	_	_
15	link	_	NN	NN	_	16	nn	_	_
16	cable	_	NN	NN	_	13	dobj	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	get	_	VB	VB	_	13	vmod	_	_
19	additional	_	JJ	JJ	_	20	amod	_	_
20	games	_	NNS	NNS	_	18	dobj	_	_
21	.	_	.	.	_	0	erased	_	_
#nn(kind-2, games-1)
#nsubj(stink-4, kind-2)
#prep(kind-2, of-3)
#root(ROOT-0, stink-4)
#nsubj(download-8, you-6)
#dep(download-8, cant-7)
#conj_and(stink-4, download-8)
#dobj(download-8, them-9)
#nsubj(have-11, you-10)
#nsubj(get-13, you-10)
#dep(download-8, have-11)
#aux(get-13, to-12)
#xcomp(have-11, get-13)
#det(cable-16, the-14)
#nn(cable-16, link-15)
#dobj(get-13, cable-16)
#aux(get-18, to-17)
#vmod(get-13, get-18)
#amod(games-20, additional-19)
#dobj(get-18, games-20)
result:
1	nice	_	JJ	JJ	_	3	amod	_	_
2	little	_	JJ	JJ	_	3	amod	_	_
3	phone	_	NN	NN	_	0	root	_	_
4	...	_	:	:	_	0	erased	_	_
5	light	_	JJ	JJ	_	6	amod	_	_
6	compact	_	NN	NN	_	3	dep	_	_
7	.	_	.	.	_	0	erased	_	_
8	.	_	.	.	_	0	erased	_	_
#amod(phone-3, nice-1)
#amod(phone-3, little-2)
#root(ROOT-0, phone-3)
#amod(compact-6, light-5)
#dep(phone-3, compact-6)
result:
1	great	_	JJ	JJ	_	2	nsubj	_	_
2	features	_	VBZ	VBZ	_	0	root	_	_
3	.	_	.	.	_	0	erased	_	_
4	.	_	.	.	_	0	erased	_	_
#nsubj(features-2, great-1)
#root(ROOT-0, features-2)
result:
1	buttons	_	NNS	NNS	_	3	nsubj	_	_
2	do	_	VBP	VBP	_	3	aux	_	_
3	seem	_	VB	VB	_	0	root	_	_
4	a	_	DT	DT	_	7	det	_	_
5	little	_	JJ	JJ	_	7	amod	_	_
6	sticky	_	JJ	JJ	_	7	amod	_	_
7	tho	_	NN	NN	_	3	xcomp	_	_
8	.	_	.	.	_	0	erased	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(seem-3, buttons-1)
#aux(seem-3, do-2)
#root(ROOT-0, seem-3)
#det(tho-7, a-4)
#amod(tho-7, little-5)
#amod(tho-7, sticky-6)
#xcomp(seem-3, tho-7)
result:
1	and	_	CC	CC	_	11	cc	_	_
2	the	_	DT	DT	_	3	det	_	_
3	hands	_	NNS	NNS	_	11	nsubj	_	_
4	free	_	JJ	JJ	_	5	amod	_	_
5	kits	_	NNS	NNS	_	7	poss	_	_
6	'	_	POS	POS	_	0	erased	_	_
7	connector	_	NN	NN	_	3	dep	_	_
8	might	_	MD	MD	_	11	aux	_	_
9	be	_	VB	VB	_	11	cop	_	_
10	a	_	DT	DT	_	11	det	_	_
11	problem	_	NN	NN	_	0	root	_	_
12	.	_	.	.	_	0	erased	_	_
13	.	_	.	.	_	0	erased	_	_
#cc(problem-11, and-1)
#det(hands-3, the-2)
#nsubj(problem-11, hands-3)
#amod(kits-5, free-4)
#poss(connector-7, kits-5)
#dep(hands-3, connector-7)
#aux(problem-11, might-8)
#cop(problem-11, be-9)
#det(problem-11, a-10)
#root(ROOT-0, problem-11)
result:
1	perhaps	_	RB	RB	_	3	advmod	_	_
2	there	_	EX	EX	_	3	expl	_	_
3	is	_	VBZ	VBZ	_	0	root	_	_
4	a	_	DT	DT	_	5	det	_	_
5	tone	_	NN	NN	_	3	nsubj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	irony	_	NN	NN	_	6	pobj	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	title	_	NN	NN	_	8	pobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	my	_	PRP$	PRP$	_	13	poss	_	_
13	review	_	NN	NN	_	11	pobj	_	_
14	,	_	,	,	_	0	erased	_	_
15	but	_	CC	CC	_	3	cc	_	_
16	i	_	FW	FW	_	18	nsubj	_	_
17	actually	_	RB	RB	_	18	advmod	_	_
18	mean	_	VBP	VBP	_	3	conj	_	_
19	it	_	PRP	PRP	_	18	dobj	_	_
20	in	_	IN	IN	_	18	prep	_	_
21	earnest	_	NN	NN	_	20	pobj	_	_
22	.	_	.	.	_	0	erased	_	_
#advmod(is-3, perhaps-1)
#expl(is-3, there-2)
#root(ROOT-0, is-3)
#det(tone-5, a-4)
#nsubj(is-3, tone-5)
#prep_of(tone-5, irony-7)
#det(title-10, the-9)
#prep_in(irony-7, title-10)
#poss(review-13, my-12)
#prep_of(title-10, review-13)
#nsubj(mean-18, i-16)
#advmod(mean-18, actually-17)
#conj_but(is-3, mean-18)
#dobj(mean-18, it-19)
#prep_in(mean-18, earnest-21)
result:
1	after	_	IN	IN	_	6	prep	_	_
2	having	_	VBG	VBG	_	1	pobj	_	_
3	had	_	VBD	VBD	_	6	aux	_	_
4	my	_	PRP$	PRP$	_	5	poss	_	_
5	heart	_	NN	NN	_	6	nsubj	_	_
6	broken	_	VBN	VBN	_	0	root	_	_
7	by	_	IN	IN	_	6	prep	_	_
8	a	_	DT	DT	_	10	det	_	_
9	sexy	_	JJ	JJ	_	10	amod	_	_
10	piece	_	NN	NN	_	7	pobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	hardware	_	NN	NN	_	11	pobj	_	_
13	that	_	WDT	WDT	_	17	nsubj	_	_
14	simply	_	RB	RB	_	17	advmod	_	_
15	would	_	MD	MD	_	17	aux	_	_
16	n't	_	RB	RB	_	17	neg	_	_
17	perform	_	VB	VB	_	12	rcmod	_	_
18	.	_	.	.	_	0	erased	_	_
#prep_after(broken-6, having-2)
#aux(broken-6, had-3)
#poss(heart-5, my-4)
#nsubj(broken-6, heart-5)
#root(ROOT-0, broken-6)
#det(piece-10, a-8)
#amod(piece-10, sexy-9)
#prep_by(broken-6, piece-10)
#prep_of(piece-10, hardware-12)
#nsubj(perform-17, hardware-12)
#advmod(perform-17, simply-14)
#aux(perform-17, would-15)
#neg(perform-17, n't-16)
#rcmod(hardware-12, perform-17)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	replaced	_	VBD	VBD	_	0	root	_	_
3	it	_	PRP	PRP	_	2	dobj	_	_
4	with	_	IN	IN	_	2	prep	_	_
5	this	_	DT	DT	_	6	det	_	_
6	not-quite-so-dazzling	_	NN	NN	_	4	pobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	but	_	CC	CC	_	2	cc	_	_
9	definitely	_	RB	RB	_	12	advmod	_	_
10	more	_	RBR	RBR	_	12	advmod	_	_
11	functional	_	JJ	JJ	_	12	amod	_	_
12	device	_	NN	NN	_	2	conj	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(replaced-2, i-1)
#root(ROOT-0, replaced-2)
#dobj(replaced-2, it-3)
#det(not-quite-so-dazzling-6, this-5)
#prep_with(replaced-2, not-quite-so-dazzling-6)
#advmod(device-12, definitely-9)
#advmod(device-12, more-10)
#amod(device-12, functional-11)
#conj_but(replaced-2, device-12)
#dobj(replaced-2, device-12)
result:
1	although	_	IN	IN	_	12	mark	_	_
2	the	_	DT	DT	_	3	det	_	_
3	nokia	_	NN	NN	_	12	nsubj	_	_
4	6610	_	CD	CD	_	3	dep	_	_
5	is	_	VBZ	VBZ	_	12	cop	_	_
6	a	_	DT	DT	_	12	det	_	_
7	little	_	RB	RB	_	8	advmod	_	_
8	short	_	JJ	JJ	_	12	amod	_	_
9	on	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	features	_	NNS	NNS	_	9	pobj	_	_
12	department	_	NN	NN	_	18	advcl	_	_
13	,	_	,	,	_	0	erased	_	_
14	it	_	PRP	PRP	_	18	nsubj	_	_
15	is	_	VBZ	VBZ	_	18	cop	_	_
16	an	_	DT	DT	_	18	det	_	_
17	outstanding	_	JJ	JJ	_	18	amod	_	_
18	piece	_	NN	NN	_	0	root	_	_
19	of	_	IN	IN	_	18	prep	_	_
20	hardware	_	NN	NN	_	19	pobj	_	_
21	for	_	IN	IN	_	20	prep	_	_
22	doing	_	VBG	VBG	_	21	pcomp	_	_
23	what	_	WP	WP	_	27	dobj	_	_
24	it	_	PRP	PRP	_	27	nsubjpass	_	_
25	was	_	VBD	VBD	_	27	auxpass	_	_
26	primarily	_	RB	RB	_	27	advmod	_	_
27	meant	_	VBN	VBN	_	22	ccomp	_	_
28	to	_	TO	TO	_	29	aux	_	_
29	do	_	VB	VB	_	27	xcomp	_	_
30	:	_	:	:	_	0	erased	_	_
31	to	_	TO	TO	_	35	aux	_	_
32	be	_	VB	VB	_	35	cop	_	_
33	a	_	DT	DT	_	35	det	_	_
34	wireless	_	JJ	JJ	_	35	amod	_	_
35	telephone	_	NN	NN	_	20	vmod	_	_
36	.	_	.	.	_	0	erased	_	_
#mark(department-12, although-1)
#det(nokia-3, the-2)
#nsubj(department-12, nokia-3)
#dep(nokia-3, 6610-4)
#cop(department-12, is-5)
#det(department-12, a-6)
#advmod(short-8, little-7)
#amod(department-12, short-8)
#det(features-11, the-10)
#prep_on(short-8, features-11)
#advcl(piece-18, department-12)
#nsubj(piece-18, it-14)
#cop(piece-18, is-15)
#det(piece-18, an-16)
#amod(piece-18, outstanding-17)
#root(ROOT-0, piece-18)
#prep_of(piece-18, hardware-20)
#prepc_for(hardware-20, doing-22)
#dobj(meant-27, what-23)
#nsubj(do-29, what-23)
#nsubjpass(meant-27, it-24)
#auxpass(meant-27, was-25)
#advmod(meant-27, primarily-26)
#ccomp(doing-22, meant-27)
#aux(do-29, to-28)
#xcomp(meant-27, do-29)
#aux(telephone-35, to-31)
#cop(telephone-35, be-32)
#det(telephone-35, a-33)
#amod(telephone-35, wireless-34)
#vmod(hardware-20, telephone-35)
result:
1	the	_	DT	DT	_	2	det	_	_
2	reception	_	NN	NN	_	7	nsubj	_	_
3	and	_	CC	CC	_	2	cc	_	_
4	sound	_	JJ	JJ	_	5	amod	_	_
5	quality	_	NN	NN	_	2	conj	_	_
6	are	_	VBP	VBP	_	7	cop	_	_
7	top-notch	_	JJ	JJ	_	0	root	_	_
8	.	_	.	.	_	0	erased	_	_
#det(reception-2, the-1)
#nsubj(top-notch-7, reception-2)
#amod(quality-5, sound-4)
#conj_and(reception-2, quality-5)
#nsubj(top-notch-7, quality-5)
#cop(top-notch-7, are-6)
#root(ROOT-0, top-notch-7)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	can	_	MD	MD	_	4	aux	_	_
3	routinely	_	RB	RB	_	4	advmod	_	_
4	talk	_	VB	VB	_	0	root	_	_
5	on	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	5	pobj	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	my	_	PRP$	PRP$	_	10	poss	_	_
10	house	_	NN	NN	_	8	pobj	_	_
11	in	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	suburbs	_	NNS	NNS	_	11	pobj	_	_
14	,	_	,	,	_	0	erased	_	_
15	which	_	WDT	WDT	_	19	nsubj	_	_
16	is	_	VBZ	VBZ	_	19	cop	_	_
17	an	_	DT	DT	_	19	det	_	_
18	unaccustomed	_	JJ	JJ	_	19	amod	_	_
19	luxury	_	NN	NN	_	13	rcmod	_	_
20	,	_	,	,	_	0	erased	_	_
21	even	_	RB	RB	_	22	advmod	_	_
22	with	_	IN	IN	_	4	prep	_	_
23	t-mobile	_	JJ	JJ	_	24	amod	_	_
24	service	_	NN	NN	_	22	pobj	_	_
25	.	_	.	.	_	0	erased	_	_
#nsubj(talk-4, i-1)
#aux(talk-4, can-2)
#advmod(talk-4, routinely-3)
#root(ROOT-0, talk-4)
#det(phone-7, the-6)
#prep_on(talk-4, phone-7)
#poss(house-10, my-9)
#prep_in(phone-7, house-10)
#det(suburbs-13, the-12)
#prep_in(house-10, suburbs-13)
#nsubj(luxury-19, suburbs-13)
#cop(luxury-19, is-16)
#det(luxury-19, an-17)
#amod(luxury-19, unaccustomed-18)
#rcmod(suburbs-13, luxury-19)
#advmod(talk-4, even-21)
#amod(service-24, t-mobile-23)
#prep_with(talk-4, service-24)
result:
1	i	_	FW	FW	_	0	root	_	_
2	like	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	4	det	_	_
4	size	_	NN	NN	_	2	pobj	_	_
5	and	_	CC	CC	_	1	cc	_	_
6	weight	_	NN	NN	_	1	dep	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	this	_	DT	DT	_	10	det	_	_
9	little	_	JJ	JJ	_	10	amod	_	_
10	critter	_	NN	NN	_	7	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, i-1)
#det(size-4, the-3)
#prep_like(i-1, size-4)
#cc(i-1, and-5)
#dep(i-1, weight-6)
#det(critter-10, this-8)
#amod(critter-10, little-9)
#prep_of(weight-6, critter-10)
result:
1	i	_	FW	FW	_	7	nsubj	_	_
2	am	_	VBP	VBP	_	3	cop	_	_
3	able	_	JJ	JJ	_	7	advcl	_	_
4	to	_	TO	TO	_	5	aux	_	_
5	carry	_	VB	VB	_	3	xcomp	_	_
6	it	_	PRP	PRP	_	7	nsubj	_	_
7	close	_	VBP	VBP	_	0	root	_	_
8	to	_	TO	TO	_	7	prep	_	_
9	my	_	PRP$	PRP$	_	10	poss	_	_
10	body	_	NN	NN	_	8	pobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	in	_	IN	IN	_	7	prep	_	_
13	places	_	NNS	NNS	_	12	pobj	_	_
14	where	_	WRB	WRB	_	21	advmod	_	_
15	other	_	JJ	JJ	_	16	amod	_	_
16	phones	_	NNS	NNS	_	21	nsubjpass	_	_
17	are	_	VBP	VBP	_	21	auxpass	_	_
18	not	_	RB	RB	_	21	neg	_	_
19	so	_	RB	RB	_	20	advmod	_	_
20	easily	_	RB	RB	_	21	advmod	_	_
21	concealed	_	VBN	VBN	_	13	rcmod	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(close-7, i-1)
#cop(able-3, am-2)
#advcl(close-7, able-3)
#aux(carry-5, to-4)
#xcomp(able-3, carry-5)
#nsubj(close-7, it-6)
#root(ROOT-0, close-7)
#poss(body-10, my-9)
#prep_to(close-7, body-10)
#prep_in(close-7, places-13)
#advmod(concealed-21, where-14)
#amod(phones-16, other-15)
#nsubjpass(concealed-21, phones-16)
#auxpass(concealed-21, are-17)
#neg(concealed-21, not-18)
#advmod(easily-20, so-19)
#advmod(concealed-21, easily-20)
#rcmod(places-13, concealed-21)
result:
1	the	_	DT	DT	_	2	det	_	_
2	keys	_	NNS	NNS	_	3	nsubj	_	_
3	are	_	VBP	VBP	_	0	root	_	_
4	close	_	RB	RB	_	5	advmod	_	_
5	together	_	RB	RB	_	3	advmod	_	_
6	,	_	,	,	_	0	erased	_	_
7	and	_	CC	CC	_	3	cc	_	_
8	the	_	DT	DT	_	9	det	_	_
9	layout	_	NN	NN	_	12	nsubj	_	_
10	is	_	VBZ	VBZ	_	12	cop	_	_
11	a	_	DT	DT	_	12	det	_	_
12	bit	_	NN	NN	_	3	conj	_	_
13	funky	_	RB	RB	_	14	advmod	_	_
14	in	_	IN	IN	_	12	prep	_	_
15	relation	_	NN	NN	_	14	pobj	_	_
16	to	_	TO	TO	_	15	prep	_	_
17	standard	_	JJ	JJ	_	20	amod	_	_
18	rectangular	_	JJ	JJ	_	20	amod	_	_
19	layout	_	NN	NN	_	20	nn	_	_
20	keypads	_	NNS	NNS	_	16	pobj	_	_
21	,	_	,	,	_	0	erased	_	_
22	but	_	CC	CC	_	3	cc	_	_
23	it	_	PRP	PRP	_	27	nsubj	_	_
24	's	_	VBZ	VBZ	_	27	cop	_	_
25	not	_	RB	RB	_	27	neg	_	_
26	too	_	RB	RB	_	27	advmod	_	_
27	weird	_	JJ	JJ	_	3	conj	_	_
28	.	_	.	.	_	0	erased	_	_
#det(keys-2, the-1)
#nsubj(are-3, keys-2)
#root(ROOT-0, are-3)
#advmod(together-5, close-4)
#advmod(are-3, together-5)
#det(layout-9, the-8)
#nsubj(bit-12, layout-9)
#cop(bit-12, is-10)
#det(bit-12, a-11)
#conj_and(are-3, bit-12)
#advmod(bit-12, funky-13)
#prep_in(bit-12, relation-15)
#amod(keypads-20, standard-17)
#amod(keypads-20, rectangular-18)
#nn(keypads-20, layout-19)
#prep_to(relation-15, keypads-20)
#nsubj(weird-27, it-23)
#cop(weird-27, 's-24)
#neg(weird-27, not-25)
#advmod(weird-27, too-26)
#conj_but(are-3, weird-27)
result:
1	the	_	DT	DT	_	2	det	_	_
2	fact	_	NN	NN	_	24	nsubj	_	_
3	that	_	IN	IN	_	16	mark	_	_
4	the	_	DT	DT	_	16	nsubj	_	_
5	''	_	''	''	_	0	erased	_	_
6	0	_	CD	CD	_	16	advmod	_	_
7	''	_	''	''	_	0	erased	_	_
8	key	_	JJ	JJ	_	11	nsubj	_	_
9	is	_	VBZ	VBZ	_	11	cop	_	_
10	the	_	DT	DT	_	11	det	_	_
11	space	_	NN	NN	_	6	advcl	_	_
12	key	_	JJ	JJ	_	13	dep	_	_
13	for	_	IN	IN	_	11	prep	_	_
14	text	_	NN	NN	_	15	nn	_	_
15	input	_	NN	NN	_	13	pobj	_	_
16	is	_	VBZ	VBZ	_	2	dep	_	_
17	a	_	DT	DT	_	18	det	_	_
18	bit	_	NN	NN	_	19	nsubj	_	_
19	confusing	_	JJ	JJ	_	16	xcomp	_	_
20	,	_	,	,	_	0	erased	_	_
21	as	_	IN	IN	_	16	prep	_	_
22	many	_	JJ	JJ	_	23	amod	_	_
23	phones	_	NNS	NNS	_	21	pobj	_	_
24	use	_	VBP	VBP	_	0	root	_	_
25	the	_	DT	DT	_	29	nn	_	_
26	''	_	''	''	_	0	erased	_	_
27	#	_	#	#	_	28	number	_	_
28	''	_	CD	CD	_	0	erased	_	_
29	key	_	NN	NN	_	24	dep	_	_
30	instead	_	RB	RB	_	29	advmod	_	_
31	.	_	.	.	_	0	erased	_	_
#det(fact-2, the-1)
#nsubj(use-24, fact-2)
#mark(is-16, that-3)
#nsubj(is-16, the-4)
#advmod(is-16, 0-6)
#nsubj(space-11, key-8)
#cop(space-11, is-9)
#det(space-11, the-10)
#advcl(0-6, space-11)
#dep(space-11, key-12)
#nn(input-15, text-14)
#prep_for(space-11, input-15)
#dep(fact-2, is-16)
#det(bit-18, a-17)
#nsubj(confusing-19, bit-18)
#xcomp(is-16, confusing-19)
#amod(phones-23, many-22)
#prep_as(is-16, phones-23)
#root(ROOT-0, use-24)
#nn(key-29, the-25)
#number(''-28, #-27)
#dep(use-24, key-29)
#advmod(key-29, instead-30)
result:
1	but	_	CC	CC	_	7	cc	_	_
2	that	_	DT	DT	_	7	nsubj	_	_
3	's	_	VBZ	VBZ	_	7	cop	_	_
4	not	_	RB	RB	_	7	neg	_	_
5	an	_	DT	DT	_	7	det	_	_
6	insurmoutable	_	JJ	JJ	_	7	amod	_	_
7	obstacle	_	NN	NN	_	0	root	_	_
8	.	_	.	.	_	0	erased	_	_
#cc(obstacle-7, but-1)
#nsubj(obstacle-7, that-2)
#cop(obstacle-7, 's-3)
#neg(obstacle-7, not-4)
#det(obstacle-7, an-5)
#amod(obstacle-7, insurmoutable-6)
#root(ROOT-0, obstacle-7)
result:
1	the	_	DT	DT	_	2	det	_	_
2	screen	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	bright	_	JJ	JJ	_	0	root	_	_
5	,	_	,	,	_	0	erased	_	_
6	easy	_	JJ	JJ	_	4	dep	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	see	_	VB	VB	_	6	xcomp	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	daylight	_	NN	NN	_	9	pobj	_	_
12	,	_	,	,	_	0	erased	_	_
13	with	_	IN	IN	_	8	prep	_	_
14	nice	_	JJ	JJ	_	15	amod	_	_
15	colors	_	NNS	NNS	_	13	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#det(screen-2, the-1)
#nsubj(bright-4, screen-2)
#cop(bright-4, is-3)
#root(ROOT-0, bright-4)
#dep(bright-4, easy-6)
#aux(see-8, to-7)
#xcomp(easy-6, see-8)
#det(daylight-11, the-10)
#prep_in(see-8, daylight-11)
#amod(colors-15, nice-14)
#prep_with(see-8, colors-15)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	receives	_	VBZ	VBZ	_	0	root	_	_
3	very	_	RB	RB	_	4	advmod	_	_
4	nice	_	JJ	JJ	_	6	amod	_	_
5	mms	_	NN	NN	_	6	nn	_	_
6	pictures	_	NNS	NNS	_	2	dobj	_	_
7	from	_	IN	IN	_	2	prep	_	_
8	other	_	JJ	JJ	_	10	amod	_	_
9	gsm	_	NN	NN	_	10	nn	_	_
10	phones	_	NNS	NNS	_	7	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#nsubj(receives-2, it-1)
#root(ROOT-0, receives-2)
#advmod(nice-4, very-3)
#amod(pictures-6, nice-4)
#nn(pictures-6, mms-5)
#dobj(receives-2, pictures-6)
#amod(phones-10, other-8)
#nn(phones-10, gsm-9)
#prep_from(receives-2, phones-10)
result:
1	there	_	EX	EX	_	2	expl	_	_
2	are	_	VBP	VBP	_	0	root	_	_
3	some	_	DT	DT	_	4	det	_	_
4	features	_	NNS	NNS	_	11	nsubj	_	_
5	in	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	8	det	_	_
7	user	_	NN	NN	_	8	nn	_	_
8	interface	_	NN	NN	_	5	pobj	_	_
9	that	_	DT	DT	_	10	det	_	_
10	i	_	FW	FW	_	8	dep	_	_
11	find	_	VBP	VBP	_	2	ccomp	_	_
12	a	_	DT	DT	_	13	det	_	_
13	little	_	RB	RB	_	14	npadvmod	_	_
14	inconvenient	_	JJ	JJ	_	11	acomp	_	_
15	.	_	.	.	_	0	erased	_	_
#expl(are-2, there-1)
#root(ROOT-0, are-2)
#det(features-4, some-3)
#nsubj(find-11, features-4)
#det(interface-8, the-6)
#nn(interface-8, user-7)
#prep_in(features-4, interface-8)
#det(i-10, that-9)
#dep(interface-8, i-10)
#ccomp(are-2, find-11)
#det(little-13, a-12)
#npadvmod(inconvenient-14, little-13)
#acomp(find-11, inconvenient-14)
result:
1	the	_	DT	DT	_	3	det	_	_
2	menu	_	NN	NN	_	3	nn	_	_
3	options	_	NNS	NNS	_	4	nsubj	_	_
4	appear	_	VBP	VBP	_	0	root	_	_
5	one	_	CD	CD	_	4	dobj	_	_
6	at	_	IN	IN	_	4	prep	_	_
7	a	_	DT	DT	_	8	det	_	_
8	time	_	NN	NN	_	6	pobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	taking	_	VBG	VBG	_	4	vmod	_	_
11	up	_	RP	RP	_	10	prt	_	_
12	the	_	DT	DT	_	14	det	_	_
13	whole	_	JJ	JJ	_	14	amod	_	_
14	screen	_	NN	NN	_	10	dobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	and	_	CC	CC	_	4	cc	_	_
17	one	_	PRP	PRP	_	18	nsubj	_	_
18	has	_	VBZ	VBZ	_	4	conj	_	_
19	to	_	TO	TO	_	20	aux	_	_
20	scroll	_	VB	VB	_	18	xcomp	_	_
21	down	_	RP	RP	_	20	prt	_	_
22	one	_	CD	CD	_	20	dobj	_	_
23	by	_	IN	IN	_	20	prep	_	_
24	one	_	CD	CD	_	23	pobj	_	_
25	,	_	,	,	_	0	erased	_	_
26	or	_	CC	CC	_	18	cc	_	_
27	have	_	VBP	VBP	_	28	aux	_	_
28	memorized	_	VBN	VBN	_	18	conj	_	_
29	where	_	WRB	WRB	_	31	advmod	_	_
30	they	_	PRP	PRP	_	31	nsubj	_	_
31	are	_	VBP	VBP	_	28	advcl	_	_
32	in	_	IN	IN	_	31	prep	_	_
33	the	_	DT	DT	_	35	det	_	_
34	menu	_	NN	NN	_	35	nn	_	_
35	order	_	NN	NN	_	32	pobj	_	_
36	,	_	,	,	_	0	erased	_	_
37	to	_	TO	TO	_	38	aux	_	_
38	select	_	VB	VB	_	28	xcomp	_	_
39	them	_	PRP	PRP	_	38	dobj	_	_
40	by	_	IN	IN	_	38	prep	_	_
41	using	_	VBG	VBG	_	40	pcomp	_	_
42	the	_	DT	DT	_	43	det	_	_
43	number	_	NN	NN	_	41	dobj	_	_
44	keypad	_	VBN	VBN	_	43	vmod	_	_
45	.	_	.	.	_	0	erased	_	_
#det(options-3, the-1)
#nn(options-3, menu-2)
#nsubj(appear-4, options-3)
#root(ROOT-0, appear-4)
#dobj(appear-4, one-5)
#det(time-8, a-7)
#prep_at(appear-4, time-8)
#vmod(appear-4, taking-10)
#prt(taking-10, up-11)
#det(screen-14, the-12)
#amod(screen-14, whole-13)
#dobj(taking-10, screen-14)
#nsubj(has-18, one-17)
#nsubj(scroll-20, one-17)
#nsubj(memorized-28, one-17)
#nsubj(select-38, one-17)
#conj_and(appear-4, has-18)
#aux(scroll-20, to-19)
#xcomp(has-18, scroll-20)
#prt(scroll-20, down-21)
#dobj(scroll-20, one-22)
#prep_by(scroll-20, one-24)
#aux(memorized-28, have-27)
#conj_and(appear-4, memorized-28)
#conj_or(has-18, memorized-28)
#advmod(are-31, where-29)
#nsubj(are-31, they-30)
#advcl(memorized-28, are-31)
#det(order-35, the-33)
#nn(order-35, menu-34)
#prep_in(are-31, order-35)
#aux(select-38, to-37)
#xcomp(memorized-28, select-38)
#dobj(select-38, them-39)
#prepc_by(select-38, using-41)
#det(number-43, the-42)
#dobj(using-41, number-43)
#vmod(number-43, keypad-44)
result:
1	thumbs	_	VBZ	VBZ	_	0	root	_	_
2	down	_	RP	RP	_	1	prt	_	_
3	on	_	IN	IN	_	1	prep	_	_
4	that	_	DT	DT	_	5	det	_	_
5	one	_	CD	CD	_	3	pobj	_	_
6	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, thumbs-1)
#prt(thumbs-1, down-2)
#det(one-5, that-4)
#prep_on(thumbs-1, one-5)
result:
1	the	_	DT	DT	_	3	det	_	_
2	vibrate	_	JJ	JJ	_	3	amod	_	_
3	setting	_	NN	NN	_	5	nsubj	_	_
4	is	_	VBZ	VBZ	_	5	cop	_	_
5	loud	_	JJ	JJ	_	0	root	_	_
6	!	_	.	.	_	0	erased	_	_
#det(setting-3, the-1)
#amod(setting-3, vibrate-2)
#nsubj(loud-5, setting-3)
#cop(loud-5, is-4)
#root(ROOT-0, loud-5)
result:
1	so	_	RB	RB	_	2	advmod	_	_
2	loud	_	RB	RB	_	10	advmod	_	_
3	,	_	,	,	_	0	erased	_	_
4	really	_	RB	RB	_	10	advmod	_	_
5	,	_	,	,	_	0	erased	_	_
6	that	_	DT	DT	_	7	det	_	_
7	it	_	PRP	PRP	_	10	nsubj	_	_
8	does	_	VBZ	VBZ	_	10	aux	_	_
9	n't	_	RB	RB	_	10	neg	_	_
10	work	_	VB	VB	_	0	root	_	_
11	terribly	_	RB	RB	_	12	advmod	_	_
12	well	_	RB	RB	_	10	advmod	_	_
13	as	_	IN	IN	_	12	prep	_	_
14	a	_	DT	DT	_	17	det	_	_
15	silent	_	JJ	JJ	_	17	amod	_	_
16	ringer	_	NN	NN	_	17	nn	_	_
17	option	_	NN	NN	_	13	pobj	_	_
18	.	_	.	.	_	0	erased	_	_
#advmod(loud-2, so-1)
#advmod(work-10, loud-2)
#advmod(work-10, really-4)
#det(it-7, that-6)
#nsubj(work-10, it-7)
#aux(work-10, does-8)
#neg(work-10, n't-9)
#root(ROOT-0, work-10)
#advmod(well-12, terribly-11)
#advmod(work-10, well-12)
#det(option-17, a-14)
#amod(option-17, silent-15)
#nn(option-17, ringer-16)
#prep_as(well-12, option-17)
result:
1	but	_	CC	CC	_	11	cc	_	_
2	,	_	,	,	_	0	erased	_	_
3	then	_	RB	RB	_	4	advmod	_	_
4	again	_	RB	RB	_	11	advmod	_	_
5	,	_	,	,	_	0	erased	_	_
6	the	_	DT	DT	_	7	det	_	_
7	ringer	_	NN	NN	_	11	nsubj	_	_
8	can	_	MD	MD	_	11	aux	_	_
9	be	_	VB	VB	_	11	cop	_	_
10	so	_	RB	RB	_	11	advmod	_	_
11	loud	_	JJ	JJ	_	0	root	_	_
12	that	_	IN	IN	_	13	mark	_	_
13	i	_	FW	FW	_	11	dep	_	_
14	heard	_	VBD	VBD	_	13	dep	_	_
15	it	_	PRP	PRP	_	14	dobj	_	_
16	ringing	_	VBG	VBG	_	14	prep	_	_
17	inside	_	IN	IN	_	16	pcomp	_	_
18	my	_	PRP$	PRP$	_	19	poss	_	_
19	office	_	NN	NN	_	17	pobj	_	_
20	,	_	,	,	_	0	erased	_	_
21	when	_	WRB	WRB	_	23	advmod	_	_
22	i	_	FW	FW	_	23	nsubj	_	_
23	was	_	VBD	VBD	_	19	rcmod	_	_
24	already	_	RB	RB	_	23	advmod	_	_
25	out	_	IN	IN	_	23	prep	_	_
26	on	_	IN	IN	_	25	pcomp	_	_
27	the	_	DT	DT	_	28	det	_	_
28	street	_	NN	NN	_	26	pobj	_	_
29	.	_	.	.	_	0	erased	_	_
30	.	_	.	.	_	0	erased	_	_
31	.	_	.	.	_	0	erased	_	_
#cc(loud-11, but-1)
#advmod(again-4, then-3)
#advmod(loud-11, again-4)
#det(ringer-7, the-6)
#nsubj(loud-11, ringer-7)
#aux(loud-11, can-8)
#cop(loud-11, be-9)
#advmod(loud-11, so-10)
#root(ROOT-0, loud-11)
#mark(i-13, that-12)
#dep(loud-11, i-13)
#dep(i-13, heard-14)
#dobj(heard-14, it-15)
#prep(heard-14, ringing-16)
#pcomp(ringing-16, inside-17)
#poss(office-19, my-18)
#pobj(inside-17, office-19)
#advmod(was-23, when-21)
#nsubj(was-23, i-22)
#rcmod(office-19, was-23)
#advmod(was-23, already-24)
#prep(was-23, out-25)
#pcomp(out-25, on-26)
#det(street-28, the-27)
#pobj(on-26, street-28)
result:
1	which	_	WDT	WDT	_	5	nsubj	_	_
2	was	_	VBD	VBD	_	5	cop	_	_
3	a	_	DT	DT	_	5	det	_	_
4	good	_	JJ	JJ	_	5	amod	_	_
5	thing	_	NN	NN	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	because	_	IN	IN	_	9	mark	_	_
8	i	_	FW	FW	_	9	nsubj	_	_
9	realized	_	VBD	VBD	_	5	advcl	_	_
10	i	_	FW	FW	_	12	nsubj	_	_
11	had	_	VBD	VBD	_	12	aux	_	_
12	forgotten	_	VBN	VBN	_	9	ccomp	_	_
13	my	_	PRP$	PRP$	_	14	poss	_	_
14	phone	_	NN	NN	_	12	dobj	_	_
15	...	_	:	:	_	0	erased	_	_
16	other	_	JJ	JJ	_	17	amod	_	_
17	things	_	NNS	NNS	_	22	nsubj	_	_
18	that	_	IN	IN	_	20	mark	_	_
19	i	_	FW	FW	_	20	nsubj	_	_
20	miss	_	VBP	VBP	_	17	dep	_	_
21	are	_	VBP	VBP	_	22	cop	_	_
22	voice-activated	_	JJ	JJ	_	5	parataxis	_	_
23	dialing	_	VBG	VBG	_	22	amod	_	_
24	and	_	CC	CC	_	22	cc	_	_
25	a	_	DT	DT	_	30	det	_	_
26	standard	_	JJ	JJ	_	30	amod	_	_
27	2.5	_	CD	CD	_	26	dep	_	_
28	mm	_	NN	NN	_	30	nn	_	_
29	headset	_	NN	NN	_	30	nn	_	_
30	jack	_	NN	NN	_	22	conj	_	_
31	.	_	.	.	_	0	erased	_	_
#nsubj(thing-5, which-1)
#cop(thing-5, was-2)
#det(thing-5, a-3)
#amod(thing-5, good-4)
#root(ROOT-0, thing-5)
#mark(realized-9, because-7)
#nsubj(realized-9, i-8)
#advcl(thing-5, realized-9)
#nsubj(forgotten-12, i-10)
#aux(forgotten-12, had-11)
#ccomp(realized-9, forgotten-12)
#poss(phone-14, my-13)
#dobj(forgotten-12, phone-14)
#amod(things-17, other-16)
#nsubj(voice-activated-22, things-17)
#mark(miss-20, that-18)
#nsubj(miss-20, i-19)
#dep(things-17, miss-20)
#cop(voice-activated-22, are-21)
#parataxis(thing-5, voice-activated-22)
#amod(voice-activated-22, dialing-23)
#det(jack-30, a-25)
#amod(jack-30, standard-26)
#dep(standard-26, 2.5-27)
#nn(jack-30, mm-28)
#nn(jack-30, headset-29)
#parataxis(thing-5, jack-30)
#conj_and(voice-activated-22, jack-30)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	'd	_	MD	MD	_	3	aux	_	_
3	like	_	VB	VB	_	0	root	_	_
4	a	_	DT	DT	_	6	det	_	_
5	camera	_	NN	NN	_	6	nn	_	_
6	phone	_	NN	NN	_	3	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	but	_	CC	CC	_	3	cc	_	_
9	i	_	FW	FW	_	12	nsubj	_	_
10	'd	_	MD	MD	_	12	aux	_	_
11	rather	_	RB	RB	_	12	advmod	_	_
12	have	_	VB	VB	_	3	conj	_	_
13	a	_	DT	DT	_	14	det	_	_
14	phone	_	NN	NN	_	12	dobj	_	_
15	than	_	IN	IN	_	12	prep	_	_
16	a	_	DT	DT	_	17	det	_	_
17	toy	_	NN	NN	_	15	pobj	_	_
18	that	_	WDT	WDT	_	19	nsubj	_	_
19	takes	_	VBZ	VBZ	_	17	rcmod	_	_
20	pictures	_	NNS	NNS	_	19	dobj	_	_
21	but	_	CC	CC	_	19	cc	_	_
22	makes	_	VBZ	VBZ	_	19	conj	_	_
23	no	_	DT	DT	_	24	neg	_	_
24	calls	_	NNS	NNS	_	22	dobj	_	_
25	...	_	:	:	_	0	erased	_	_
26	pros	_	NNS	NNS	_	24	dep	_	_
27	:	_	:	:	_	0	erased	_	_
28	-	_	:	:	_	0	erased	_	_
29	light	_	NN	NN	_	17	dep	_	_
30	,	_	,	,	_	0	erased	_	_
31	compact	_	JJ	JJ	_	32	amod	_	_
32	design	_	NN	NN	_	29	appos	_	_
33	-	_	:	:	_	0	erased	_	_
34	solid	_	JJ	JJ	_	37	amod	_	_
35	,	_	,	,	_	0	erased	_	_
36	high-quality	_	JJ	JJ	_	37	amod	_	_
37	construction	_	NN	NN	_	29	dep	_	_
38	-	_	:	:	_	0	erased	_	_
39	well-backlit	_	JJ	JJ	_	40	amod	_	_
40	keypad	_	NN	NN	_	29	dep	_	_
41	-	_	:	:	_	0	erased	_	_
42	outstanding	_	JJ	JJ	_	44	amod	_	_
43	signal	_	NN	NN	_	44	nn	_	_
44	reception	_	NN	NN	_	29	dep	_	_
45	-	_	:	:	_	0	erased	_	_
46	excellent	_	JJ	JJ	_	48	amod	_	_
47	sound	_	JJ	JJ	_	48	amod	_	_
48	quality	_	NN	NN	_	29	dep	_	_
49	-	_	:	:	_	0	erased	_	_
50	bright	_	JJ	JJ	_	53	amod	_	_
51	,	_	,	,	_	0	erased	_	_
52	visible	_	JJ	JJ	_	53	amod	_	_
53	screen	_	NN	NN	_	29	dep	_	_
54	-	_	:	:	_	0	erased	_	_
55	speakerphone	_	NN	NN	_	29	dep	_	_
56	-	_	:	:	_	0	erased	_	_
57	very	_	RB	RB	_	29	advmod	_	_
58	long-lasting	_	JJ	JJ	_	61	amod	_	_
59	battery	_	NN	NN	_	61	nn	_	_
60	life	_	NN	NN	_	61	nn	_	_
61	cons	_	NNS	NNS	_	29	dep	_	_
62	:	_	:	:	_	0	erased	_	_
63	-	_	:	:	_	0	erased	_	_
64	some	_	DT	DT	_	65	det	_	_
65	features	_	NNS	NNS	_	17	dep	_	_
66	in	_	IN	IN	_	65	prep	_	_
67	the	_	DT	DT	_	69	det	_	_
68	user	_	NN	NN	_	69	nn	_	_
69	interface	_	NN	NN	_	66	pobj	_	_
70	-	_	:	:	_	0	erased	_	_
71	no	_	DT	DT	_	72	neg	_	_
72	voice	_	NN	NN	_	17	dep	_	_
73	activated	_	VBN	VBN	_	72	vmod	_	_
74	dialing	_	VBG	VBG	_	73	xcomp	_	_
75	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
76	what	_	WP	WP	_	77	nsubj	_	_
77	were	_	VBD	VBD	_	74	ccomp	_	_
78	they	_	PRP	PRP	_	79	nsubj	_	_
79	thinking	_	VBG	VBG	_	77	dep	_	_
80	-	_	:	:	_	0	erased	_	_
81	no	_	DT	DT	_	82	neg	_	_
82	option	_	NN	NN	_	17	dep	_	_
83	for	_	IN	IN	_	82	prep	_	_
84	caller-id	_	JJ	JJ	_	85	amod	_	_
85	pictures	_	NNS	NNS	_	83	pobj	_	_
86	or	_	CC	CC	_	17	cc	_	_
87	individualized	_	VBN	VBN	_	88	amod	_	_
88	ringtones	_	NNS	NNS	_	17	conj	_	_
89	.	_	.	.	_	0	erased	_	_
#nsubj(like-3, i-1)
#aux(like-3, 'd-2)
#root(ROOT-0, like-3)
#det(phone-6, a-4)
#nn(phone-6, camera-5)
#dobj(like-3, phone-6)
#nsubj(have-12, i-9)
#aux(have-12, 'd-10)
#advmod(have-12, rather-11)
#conj_but(like-3, have-12)
#det(phone-14, a-13)
#dobj(have-12, phone-14)
#det(toy-17, a-16)
#prep_than(have-12, toy-17)
#nsubj(takes-19, toy-17)
#nsubj(makes-22, toy-17)
#rcmod(toy-17, takes-19)
#dobj(takes-19, pictures-20)
#rcmod(toy-17, makes-22)
#conj_but(takes-19, makes-22)
#neg(calls-24, no-23)
#dobj(makes-22, calls-24)
#dep(calls-24, pros-26)
#dep(toy-17, light-29)
#amod(design-32, compact-31)
#appos(light-29, design-32)
#amod(construction-37, solid-34)
#amod(construction-37, high-quality-36)
#dep(light-29, construction-37)
#amod(keypad-40, well-backlit-39)
#dep(light-29, keypad-40)
#amod(reception-44, outstanding-42)
#nn(reception-44, signal-43)
#dep(light-29, reception-44)
#amod(quality-48, excellent-46)
#amod(quality-48, sound-47)
#dep(light-29, quality-48)
#amod(screen-53, bright-50)
#amod(screen-53, visible-52)
#dep(light-29, screen-53)
#dep(light-29, speakerphone-55)
#advmod(light-29, very-57)
#amod(cons-61, long-lasting-58)
#nn(cons-61, battery-59)
#nn(cons-61, life-60)
#dep(light-29, cons-61)
#det(features-65, some-64)
#dep(toy-17, features-65)
#det(interface-69, the-67)
#nn(interface-69, user-68)
#prep_in(features-65, interface-69)
#neg(voice-72, no-71)
#dep(toy-17, voice-72)
#vmod(voice-72, activated-73)
#xcomp(activated-73, dialing-74)
#nsubj(were-77, what-76)
#ccomp(dialing-74, were-77)
#nsubj(thinking-79, they-78)
#dep(were-77, thinking-79)
#neg(option-82, no-81)
#dep(toy-17, option-82)
#amod(pictures-85, caller-id-84)
#prep_for(option-82, pictures-85)
#amod(ringtones-88, individualized-87)
#prep_than(have-12, ringtones-88)
#conj_or(toy-17, ringtones-88)
#nsubj(takes-19, ringtones-88)
result:
1	-	_	:	:	_	0	erased	_	_
2	no	_	DT	DT	_	5	neg	_	_
3	propietary	_	RB	RB	_	4	advmod	_	_
4	headset	_	JJ	JJ	_	5	amod	_	_
5	jack	_	NN	NN	_	10	nsubj	_	_
6	this	_	DT	DT	_	7	det	_	_
7	bumpy	_	JJ	JJ	_	5	amod	_	_
8	is	_	VBZ	VBZ	_	10	cop	_	_
9	wicked	_	JJ	JJ	_	10	amod	_	_
10	groovy	_	NN	NN	_	0	root	_	_
11	.	_	.	.	_	0	erased	_	_
#neg(jack-5, no-2)
#advmod(headset-4, propietary-3)
#amod(jack-5, headset-4)
#nsubj(groovy-10, jack-5)
#det(bumpy-7, this-6)
#amod(jack-5, bumpy-7)
#cop(groovy-10, is-8)
#amod(groovy-10, wicked-9)
#root(ROOT-0, groovy-10)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	thought	_	VBD	VBD	_	0	root	_	_
3	it	_	PRP	PRP	_	6	nsubjpass	_	_
4	would	_	MD	MD	_	6	aux	_	_
5	be	_	VB	VB	_	6	auxpass	_	_
6	haggard	_	VBN	VBN	_	2	ccomp	_	_
7	but	_	CC	CC	_	2	cc	_	_
8	when	_	WRB	WRB	_	11	advmod	_	_
9	i	_	FW	FW	_	11	nsubj	_	_
10	be	_	VB	VB	_	11	advmod	_	_
11	gotted	_	VBP	VBP	_	17	advcl	_	_
12	this	_	DT	DT	_	13	det	_	_
13	junky	_	NN	NN	_	11	dobj	_	_
14	i	_	FW	FW	_	17	nsubj	_	_
15	was	_	VBD	VBD	_	17	cop	_	_
16	mad	_	JJ	JJ	_	17	acomp	_	_
17	happy	_	JJ	JJ	_	2	conj	_	_
18	and	_	CC	CC	_	17	cc	_	_
19	stuff	_	NN	NN	_	17	conj	_	_
20	.	_	.	.	_	0	erased	_	_
#nsubj(thought-2, i-1)
#root(ROOT-0, thought-2)
#nsubjpass(haggard-6, it-3)
#aux(haggard-6, would-4)
#auxpass(haggard-6, be-5)
#ccomp(thought-2, haggard-6)
#advmod(gotted-11, when-8)
#nsubj(gotted-11, i-9)
#advmod(gotted-11, be-10)
#advcl(happy-17, gotted-11)
#det(junky-13, this-12)
#dobj(gotted-11, junky-13)
#nsubj(happy-17, i-14)
#cop(happy-17, was-15)
#acomp(happy-17, mad-16)
#conj_but(thought-2, happy-17)
#conj_but(thought-2, stuff-19)
#conj_and(happy-17, stuff-19)
result:
1	this	_	DT	DT	_	2	det	_	_
2	junky	_	NN	NN	_	6	nsubj	_	_
3	is	_	VBZ	VBZ	_	6	cop	_	_
4	super	_	JJ	JJ	_	6	amod	_	_
5	duper	_	NN	NN	_	6	nn	_	_
6	rad	_	NN	NN	_	0	root	_	_
7	.	_	.	.	_	0	erased	_	_
#det(junky-2, this-1)
#nsubj(rad-6, junky-2)
#cop(rad-6, is-3)
#amod(rad-6, super-4)
#nn(rad-6, duper-5)
#root(ROOT-0, rad-6)
result:
1	it	_	PRP	PRP	_	5	nsubj	_	_
2	be	_	VB	VB	_	5	cop	_	_
3	my	_	PRP$	PRP$	_	5	poss	_	_
4	fav	_	NN	NN	_	5	nn	_	_
5	c-phone	_	NN	NN	_	0	root	_	_
6	and	_	CC	CC	_	5	cc	_	_
7	stuff	_	NN	NN	_	5	conj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(c-phone-5, it-1)
#cop(c-phone-5, be-2)
#poss(c-phone-5, my-3)
#nn(c-phone-5, fav-4)
#root(ROOT-0, c-phone-5)
#conj_and(c-phone-5, stuff-7)
result:
1	so	_	RB	RB	_	2	advmod	_	_
2	go	_	VB	VB	_	0	root	_	_
3	and	_	CC	CC	_	2	cc	_	_
4	buy	_	VB	VB	_	2	conj	_	_
5	dis	_	JJ	JJ	_	7	amod	_	_
6	sucka	_	NN	NN	_	7	nn	_	_
7	beefo	_	NN	NN	_	4	dobj	_	_
8	it	_	PRP	PRP	_	11	nsubjpass	_	_
9	all	_	DT	DT	_	8	det	_	_
10	be	_	VB	VB	_	11	auxpass	_	_
11	gone	_	VBN	VBN	_	4	dep	_	_
12	an	_	DT	DT	_	13	det	_	_
13	stuffff	_	NN	NN	_	11	dobj	_	_
14	.	_	.	.	_	0	erased	_	_
#advmod(go-2, so-1)
#root(ROOT-0, go-2)
#conj_and(go-2, buy-4)
#amod(beefo-7, dis-5)
#nn(beefo-7, sucka-6)
#dobj(buy-4, beefo-7)
#nsubjpass(gone-11, it-8)
#det(it-8, all-9)
#auxpass(gone-11, be-10)
#dep(buy-4, gone-11)
#det(stuffff-13, an-12)
#dobj(gone-11, stuffff-13)
result:
1	aight	_	VBP	VBP	_	3	aux	_	_
2	den	_	NN	NN	_	3	nsubj	_	_
3	bumpy	_	JJ	JJ	_	0	root	_	_
4	?	_	.	.	_	0	erased	_	_
#aux(bumpy-3, aight-1)
#nsubj(bumpy-3, den-2)
#root(ROOT-0, bumpy-3)
result:
1	word	_	NN	NN	_	0	root	_	_
2	...	_	:	:	_	0	erased	_	_
3	peace	_	NN	NN	_	1	dep	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	7	det	_	_
6	east	_	JJ	JJ	_	7	amod	_	_
7	bruvah	_	NN	NN	_	4	pobj	_	_
8	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, word-1)
#dep(word-1, peace-3)
#det(bruvah-7, the-5)
#amod(bruvah-7, east-6)
#prep_in(peace-3, bruvah-7)
result:
1	one	_	CD	CD	_	10	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	5	det	_	_
4	best	_	JJS	JJS	_	5	amod	_	_
5	cell	_	NN	NN	_	2	pobj	_	_
6	phones	_	NNS	NNS	_	5	dep	_	_
7	i	_	FW	FW	_	5	dep	_	_
8	have	_	VBP	VBP	_	10	aux	_	_
9	ever	_	RB	RB	_	10	advmod	_	_
10	used	_	VBN	VBN	_	0	root	_	_
11	to-date	_	JJ	JJ	_	10	acomp	_	_
12	.	_	.	.	_	0	erased	_	_
#nsubj(used-10, one-1)
#det(cell-5, the-3)
#amod(cell-5, best-4)
#prep_of(one-1, cell-5)
#dep(cell-5, phones-6)
#dep(cell-5, i-7)
#aux(used-10, have-8)
#advmod(used-10, ever-9)
#root(ROOT-0, used-10)
#acomp(used-10, to-date-11)
result:
1	i	_	FW	FW	_	5	nsubj	_	_
2	like	_	IN	IN	_	5	prep	_	_
3	the	_	DT	DT	_	4	det	_	_
4	speakphone	_	NN	NN	_	2	pobj	_	_
5	function	_	VBP	VBP	_	0	root	_	_
6	a	_	DT	DT	_	7	det	_	_
7	lot	_	NN	NN	_	5	dobj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(function-5, i-1)
#det(speakphone-4, the-3)
#prep_like(function-5, speakphone-4)
#root(ROOT-0, function-5)
#det(lot-7, a-6)
#dobj(function-5, lot-7)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	allows	_	VBZ	VBZ	_	0	root	_	_
3	me	_	PRP	PRP	_	2	dobj	_	_
4	to	_	TO	TO	_	5	aux	_	_
5	place	_	VB	VB	_	2	xcomp	_	_
6	the	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	5	dobj	_	_
8	on	_	IN	IN	_	5	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	table	_	NN	NN	_	8	pobj	_	_
11	while	_	IN	IN	_	12	mark	_	_
12	talking	_	VBG	VBG	_	5	advcl	_	_
13	and	_	CC	CC	_	12	cc	_	_
14	working	_	VBG	VBG	_	12	conj	_	_
15	on	_	IN	IN	_	14	prep	_	_
16	my	_	PRP$	PRP$	_	17	poss	_	_
17	computer	_	NN	NN	_	15	pobj	_	_
18	or	_	CC	CC	_	17	cc	_	_
19	other	_	JJ	JJ	_	20	amod	_	_
20	jobs	_	NNS	NNS	_	17	conj	_	_
21	.	_	.	.	_	0	erased	_	_
#nsubj(allows-2, it-1)
#root(ROOT-0, allows-2)
#dobj(allows-2, me-3)
#nsubj(place-5, me-3)
#aux(place-5, to-4)
#xcomp(allows-2, place-5)
#det(phone-7, the-6)
#dobj(place-5, phone-7)
#det(table-10, the-9)
#prep_on(place-5, table-10)
#mark(talking-12, while-11)
#advcl(place-5, talking-12)
#advcl(place-5, working-14)
#conj_and(talking-12, working-14)
#poss(computer-17, my-16)
#prep_on(working-14, computer-17)
#amod(jobs-20, other-19)
#prep_on(working-14, jobs-20)
#conj_or(computer-17, jobs-20)
result:
1	i	_	FW	FW	_	4	dep	_	_
2	am	_	RB	RB	_	4	advmod	_	_
3	very	_	RB	RB	_	4	advmod	_	_
4	pleased	_	JJ	JJ	_	0	root	_	_
5	with	_	IN	IN	_	4	prep	_	_
6	its	_	PRP$	PRP$	_	7	poss	_	_
7	quality	_	NN	NN	_	5	pobj	_	_
8	and	_	CC	CC	_	7	cc	_	_
9	durability	_	NN	NN	_	7	conj	_	_
10	.	_	.	.	_	0	erased	_	_
#dep(pleased-4, i-1)
#advmod(pleased-4, am-2)
#advmod(pleased-4, very-3)
#root(ROOT-0, pleased-4)
#poss(quality-7, its-6)
#prep_with(pleased-4, quality-7)
#prep_with(pleased-4, durability-9)
#conj_and(quality-7, durability-9)
result:
1	i	_	FW	FW	_	7	nsubj	_	_
2	like	_	IN	IN	_	7	prep	_	_
3	the	_	DT	DT	_	6	det	_	_
4	automatic	_	JJ	JJ	_	6	amod	_	_
5	key	_	JJ	JJ	_	6	amod	_	_
6	lock	_	NN	NN	_	2	pobj	_	_
7	function	_	VBP	VBP	_	0	root	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(function-7, i-1)
#det(lock-6, the-3)
#amod(lock-6, automatic-4)
#amod(lock-6, key-5)
#prep_like(function-7, lock-6)
#root(ROOT-0, function-7)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	6	nsubj	_	_
3	is	_	VBZ	VBZ	_	6	cop	_	_
4	very	_	RB	RB	_	5	advmod	_	_
5	light	_	JJ	JJ	_	6	amod	_	_
6	weight	_	NN	NN	_	0	root	_	_
7	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(weight-6, phone-2)
#cop(weight-6, is-3)
#advmod(light-5, very-4)
#amod(weight-6, light-5)
#root(ROOT-0, weight-6)
result:
1	the	_	DT	DT	_	2	det	_	_
2	screen	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	bright	_	JJ	JJ	_	0	root	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	ring	_	NN	NN	_	7	nn	_	_
7	tones	_	NNS	NNS	_	9	nsubj	_	_
8	are	_	VBP	VBP	_	9	cop	_	_
9	unlimited	_	JJ	JJ	_	4	conj	_	_
10	.	_	.	.	_	0	erased	_	_
#det(screen-2, the-1)
#nsubj(bright-4, screen-2)
#cop(bright-4, is-3)
#root(ROOT-0, bright-4)
#nn(tones-7, ring-6)
#nsubj(unlimited-9, tones-7)
#cop(unlimited-9, are-8)
#conj_and(bright-4, unlimited-9)
result:
1	the	_	DT	DT	_	3	det	_	_
2	fm	_	NN	NN	_	3	nn	_	_
3	radio	_	NN	NN	_	5	nsubj	_	_
4	is	_	VBZ	VBZ	_	5	cop	_	_
5	cool	_	JJ	JJ	_	0	root	_	_
6	.	_	.	.	_	0	erased	_	_
#det(radio-3, the-1)
#nn(radio-3, fm-2)
#nsubj(cool-5, radio-3)
#cop(cool-5, is-4)
#root(ROOT-0, cool-5)
result:
1	most	_	JJS	JJS	_	5	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	our	_	PRP$	PRP$	_	4	poss	_	_
4	emplyees	_	NNS	NNS	_	2	pobj	_	_
5	use	_	VBP	VBP	_	0	root	_	_
6	this	_	DT	DT	_	8	det	_	_
7	model	_	NN	NN	_	8	nn	_	_
8	phone	_	NN	NN	_	5	dobj	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(use-5, most-1)
#poss(emplyees-4, our-3)
#prep_of(most-1, emplyees-4)
#root(ROOT-0, use-5)
#det(phone-8, this-6)
#nn(phone-8, model-7)
#dobj(use-5, phone-8)
result:
1	best	_	JJS	JJS	_	2	nsubj	_	_
2	regards	_	VBZ	VBZ	_	0	root	_	_
3	sadoun	_	JJ	JJ	_	5	amod	_	_
4	satellite	_	NN	NN	_	5	nn	_	_
5	sales	_	NNS	NNS	_	2	dobj	_	_
6	while	_	IN	IN	_	15	mark	_	_
7	going	_	VBG	VBG	_	15	prep	_	_
8	for	_	IN	IN	_	7	pcomp	_	_
9	a	_	DT	DT	_	10	det	_	_
10	cellphone	_	NN	NN	_	8	pobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	i	_	FW	FW	_	15	nsubjpass	_	_
13	was	_	VBD	VBD	_	15	auxpass	_	_
14	fully	_	RB	RB	_	15	advmod	_	_
15	determined	_	VBN	VBN	_	2	advcl	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	buy	_	VB	VB	_	15	xcomp	_	_
18	a	_	DT	DT	_	19	det	_	_
19	nokia	_	NN	NN	_	17	dobj	_	_
20	only	_	RB	RB	_	25	advmod	_	_
21	as	_	IN	IN	_	25	mark	_	_
22	it	_	PRP	PRP	_	25	nsubj	_	_
23	is	_	VBZ	VBZ	_	25	cop	_	_
24	the	_	DT	DT	_	25	det	_	_
25	best	_	JJS	JJS	_	17	advcl	_	_
26	in	_	IN	IN	_	25	prep	_	_
27	cellphones	_	NNS	NNS	_	26	pobj	_	_
28	.	_	.	.	_	0	erased	_	_
#nsubj(regards-2, best-1)
#root(ROOT-0, regards-2)
#amod(sales-5, sadoun-3)
#nn(sales-5, satellite-4)
#dobj(regards-2, sales-5)
#mark(determined-15, while-6)
#prep(determined-15, going-7)
#pcomp(going-7, for-8)
#det(cellphone-10, a-9)
#pobj(for-8, cellphone-10)
#nsubjpass(determined-15, i-12)
#nsubj(buy-17, i-12)
#auxpass(determined-15, was-13)
#advmod(determined-15, fully-14)
#advcl(regards-2, determined-15)
#aux(buy-17, to-16)
#xcomp(determined-15, buy-17)
#det(nokia-19, a-18)
#dobj(buy-17, nokia-19)
#advmod(best-25, only-20)
#mark(best-25, as-21)
#nsubj(best-25, it-22)
#cop(best-25, is-23)
#det(best-25, the-24)
#advcl(buy-17, best-25)
#prep_in(best-25, cellphones-27)
result:
1	after	_	IN	IN	_	15	prep	_	_
2	much	_	JJ	JJ	_	3	amod	_	_
3	survey	_	NN	NN	_	1	pobj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	all	_	PDT	PDT	_	8	dep	_	_
6	the	_	DT	DT	_	8	det	_	_
7	present	_	JJ	JJ	_	8	amod	_	_
8	handsets	_	NNS	NNS	_	4	pobj	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	recommendations	_	NNS	NNS	_	8	conj	_	_
11	from	_	IN	IN	_	3	prep	_	_
12	friends	_	NNS	NNS	_	11	pobj	_	_
13	,	_	,	,	_	0	erased	_	_
14	i	_	FW	FW	_	15	nsubj	_	_
15	bought	_	VBD	VBD	_	0	root	_	_
16	this	_	DT	DT	_	17	det	_	_
17	nokia	_	NN	NN	_	15	iobj	_	_
18	6610	_	CD	CD	_	15	dobj	_	_
19	.	_	.	.	_	0	erased	_	_
#amod(survey-3, much-2)
#prep_after(bought-15, survey-3)
#dep(handsets-8, all-5)
#det(handsets-8, the-6)
#amod(handsets-8, present-7)
#prep_of(survey-3, handsets-8)
#prep_of(survey-3, recommendations-10)
#conj_and(handsets-8, recommendations-10)
#prep_from(survey-3, friends-12)
#nsubj(bought-15, i-14)
#root(ROOT-0, bought-15)
#det(nokia-17, this-16)
#iobj(bought-15, nokia-17)
#dobj(bought-15, 6610-18)
result:
1	and	_	CC	CC	_	7	cc	_	_
2	really	_	RB	RB	_	7	advmod	_	_
3	this	_	DT	DT	_	7	nsubj	_	_
4	is	_	VBZ	VBZ	_	7	cop	_	_
5	the	_	DT	DT	_	7	det	_	_
6	best	_	JJS	JJS	_	7	amod	_	_
7	phone	_	NN	NN	_	0	root	_	_
8	one	_	PRP	PRP	_	10	nsubj	_	_
9	could	_	MD	MD	_	10	aux	_	_
10	have	_	VB	VB	_	7	dep	_	_
11	.	_	.	.	_	0	erased	_	_
#cc(phone-7, and-1)
#advmod(phone-7, really-2)
#nsubj(phone-7, this-3)
#cop(phone-7, is-4)
#det(phone-7, the-5)
#amod(phone-7, best-6)
#root(ROOT-0, phone-7)
#nsubj(have-10, one-8)
#aux(have-10, could-9)
#dep(phone-7, have-10)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	has	_	VBZ	VBZ	_	0	root	_	_
3	all	_	PDT	PDT	_	5	predet	_	_
4	the	_	DT	DT	_	5	det	_	_
5	features	_	NNS	NNS	_	2	dobj	_	_
6	one	_	PRP	PRP	_	8	nsubj	_	_
7	would	_	MD	MD	_	8	aux	_	_
8	need	_	VB	VB	_	2	dep	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	a	_	DT	DT	_	11	det	_	_
11	cellphone	_	NN	NN	_	9	pobj	_	_
12	.	_	.	.	_	0	erased	_	_
#nsubj(has-2, it-1)
#root(ROOT-0, has-2)
#predet(features-5, all-3)
#det(features-5, the-4)
#dobj(has-2, features-5)
#nsubj(need-8, one-6)
#aux(need-8, would-7)
#dep(has-2, need-8)
#det(cellphone-11, a-10)
#prep_in(need-8, cellphone-11)
result:
1	it	_	PRP	PRP	_	3	nsubj	_	_
2	is	_	VBZ	VBZ	_	3	cop	_	_
3	lightweight	_	JJ	JJ	_	0	root	_	_
4	,	_	,	,	_	0	erased	_	_
5	sleek	_	JJ	JJ	_	3	conj	_	_
6	and	_	CC	CC	_	3	cc	_	_
7	attractive	_	JJ	JJ	_	3	conj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(lightweight-3, it-1)
#nsubj(sleek-5, it-1)
#nsubj(attractive-7, it-1)
#cop(lightweight-3, is-2)
#root(ROOT-0, lightweight-3)
#conj_and(lightweight-3, sleek-5)
#conj_and(lightweight-3, attractive-7)
result:
1	this	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	very	_	RB	RB	_	5	advmod	_	_
5	user-friendly	_	JJ	JJ	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	easy	_	JJ	JJ	_	5	dep	_	_
8	to	_	TO	TO	_	9	aux	_	_
9	manipulate	_	VB	VB	_	7	xcomp	_	_
10	&#38;	_	CD	CD	_	12	dep	_	_
11	very	_	RB	RB	_	12	advmod	_	_
12	convenient	_	JJ	JJ	_	9	acomp	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	scroll	_	VB	VB	_	9	xcomp	_	_
15	in	_	IN	IN	_	14	dep	_	_
16	menu	_	NN	NN	_	15	pobj	_	_
17	etc	_	FW	FW	_	14	conj	_	_
18	.	_	.	.	_	0	erased	_	_
#det(phone-2, this-1)
#nsubj(user-friendly-5, phone-2)
#cop(user-friendly-5, is-3)
#advmod(user-friendly-5, very-4)
#root(ROOT-0, user-friendly-5)
#dep(user-friendly-5, easy-7)
#aux(manipulate-9, to-8)
#xcomp(easy-7, manipulate-9)
#dep(convenient-12, &#38;-10)
#advmod(convenient-12, very-11)
#acomp(manipulate-9, convenient-12)
#aux(scroll-14, to-13)
#xcomp(manipulate-9, scroll-14)
#dep(scroll-14, in-15)
#pobj(in-15, menu-16)
#conj(scroll-14, etc-17)
#dobj(scroll-14, etc-17)
result:
1	the	_	DT	DT	_	2	det	_	_
2	time	_	NN	NN	_	12	nsubj	_	_
3	taken	_	VBN	VBN	_	2	vmod	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	shifting	_	VBG	VBG	_	4	pcomp	_	_
6	from	_	IN	IN	_	5	prep	_	_
7	one	_	CD	CD	_	9	num	_	_
8	menu	_	NN	NN	_	9	nn	_	_
9	option	_	NN	NN	_	6	pobj	_	_
10	to	_	TO	TO	_	5	prep	_	_
11	other	_	JJ	JJ	_	10	pobj	_	_
12	is	_	VBZ	VBZ	_	0	root	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	microseconds	_	NNS	NNS	_	13	pobj	_	_
15	only	_	RB	RB	_	12	advmod	_	_
16	.	_	.	.	_	0	erased	_	_
#det(time-2, the-1)
#nsubj(is-12, time-2)
#vmod(time-2, taken-3)
#prepc_in(taken-3, shifting-5)
#num(option-9, one-7)
#nn(option-9, menu-8)
#prep_from(shifting-5, option-9)
#prep_to(shifting-5, other-11)
#root(ROOT-0, is-12)
#prep_in(is-12, microseconds-14)
#advmod(is-12, only-15)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	has	_	VBZ	VBZ	_	0	root	_	_
3	fm	_	JJ	JJ	_	5	amod	_	_
4	radio	_	NN	NN	_	5	nn	_	_
5	option	_	NN	NN	_	2	dobj	_	_
6	and	_	CC	CC	_	2	cc	_	_
7	i	_	FW	FW	_	9	nsubj	_	_
8	can	_	MD	MD	_	9	aux	_	_
9	listen	_	VB	VB	_	2	conj	_	_
10	to	_	TO	TO	_	9	prep	_	_
11	music	_	NN	NN	_	10	pobj	_	_
12	anytime	_	RB	RB	_	9	advmod	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(has-2, it-1)
#root(ROOT-0, has-2)
#amod(option-5, fm-3)
#nn(option-5, radio-4)
#dobj(has-2, option-5)
#nsubj(listen-9, i-7)
#aux(listen-9, can-8)
#conj_and(has-2, listen-9)
#prep_to(listen-9, music-11)
#advmod(listen-9, anytime-12)
result:
1	its	_	PRP$	PRP$	_	3	poss	_	_
2	speakerphone	_	JJ	JJ	_	3	amod	_	_
3	option	_	NN	NN	_	4	nsubj	_	_
4	allows	_	VBZ	VBZ	_	0	root	_	_
5	us	_	PRP	PRP	_	4	dobj	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	do	_	VB	VB	_	4	xcomp	_	_
8	long	_	JJ	JJ	_	9	amod	_	_
9	talks	_	NNS	NNS	_	7	dobj	_	_
10	conveniently	_	RB	RB	_	7	advmod	_	_
11	,	_	,	,	_	0	erased	_	_
12	lying	_	VBG	VBG	_	7	vmod	_	_
13	on	_	IN	IN	_	12	prep	_	_
14	bed	_	NN	NN	_	16	nn	_	_
15	&#38;	_	CD	CD	_	16	num	_	_
16	phone	_	NN	NN	_	13	pobj	_	_
17	lying	_	VBG	VBG	_	12	prep	_	_
18	by	_	IN	IN	_	17	pcomp	_	_
19	your	_	PRP$	PRP$	_	20	poss	_	_
20	pillowside	_	NN	NN	_	18	pobj	_	_
21	.	_	.	.	_	0	erased	_	_
#poss(option-3, its-1)
#amod(option-3, speakerphone-2)
#nsubj(allows-4, option-3)
#root(ROOT-0, allows-4)
#dobj(allows-4, us-5)
#nsubj(do-7, us-5)
#aux(do-7, to-6)
#xcomp(allows-4, do-7)
#amod(talks-9, long-8)
#dobj(do-7, talks-9)
#advmod(do-7, conveniently-10)
#vmod(do-7, lying-12)
#nn(phone-16, bed-14)
#num(phone-16, &#38;-15)
#prep_on(lying-12, phone-16)
#prep(lying-12, lying-17)
#pcomp(lying-17, by-18)
#poss(pillowside-20, your-19)
#pobj(by-18, pillowside-20)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	comes	_	VBZ	VBZ	_	0	root	_	_
3	equipped	_	VBN	VBN	_	2	dep	_	_
4	with	_	IN	IN	_	3	prep	_	_
5	lot	_	NN	NN	_	4	pobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	wallpapers	_	NNS	NNS	_	6	pobj	_	_
8	and	_	CC	CC	_	7	cc	_	_
9	polyphonic	_	JJ	JJ	_	11	amod	_	_
10	sweet	_	JJ	JJ	_	11	amod	_	_
11	tunes	_	NNS	NNS	_	7	conj	_	_
12	.	_	.	.	_	0	erased	_	_
#nsubj(comes-2, it-1)
#root(ROOT-0, comes-2)
#dep(comes-2, equipped-3)
#prep_with(equipped-3, lot-5)
#prep_of(lot-5, wallpapers-7)
#amod(tunes-11, polyphonic-9)
#amod(tunes-11, sweet-10)
#prep_of(lot-5, tunes-11)
#conj_and(wallpapers-7, tunes-11)
result:
1	only	_	RB	RB	_	0	root	_	_
2	if	_	IN	IN	_	5	mark	_	_
3	we	_	PRP	PRP	_	5	nsubj	_	_
4	could	_	MD	MD	_	5	aux	_	_
5	get	_	VB	VB	_	1	dep	_	_
6	one	_	CD	CD	_	7	num	_	_
7	camera	_	NN	NN	_	5	dobj	_	_
8	in	_	IN	IN	_	5	prep	_	_
9	it	_	PRP	PRP	_	8	pobj	_	_
10	.	_	.	.	_	0	erased	_	_
11	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, only-1)
#mark(get-5, if-2)
#nsubj(get-5, we-3)
#aux(get-5, could-4)
#dep(only-1, get-5)
#num(camera-7, one-6)
#dobj(get-5, camera-7)
#prep_in(get-5, it-9)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	did	_	VBD	VBD	_	0	root	_	_
3	have	_	VBP	VBP	_	4	aux	_	_
4	scored	_	VBN	VBN	_	2	ccomp	_	_
5	over	_	IN	IN	_	6	quantmod	_	_
6	all	_	PDT	PDT	_	8	num	_	_
7	other	_	JJ	JJ	_	8	amod	_	_
8	competitors	_	NNS	NNS	_	4	dobj	_	_
9	...	_	:	:	_	0	erased	_	_
10	i	_	FW	FW	_	12	nsubj	_	_
11	am	_	VBP	VBP	_	12	aux	_	_
12	enjoying	_	VBG	VBG	_	2	parataxis	_	_
13	my	_	PRP$	PRP$	_	14	poss	_	_
14	phone	_	NN	NN	_	12	dep	_	_
15	a	_	DT	DT	_	16	det	_	_
16	lot	_	NN	NN	_	12	dobj	_	_
17	...	_	:	:	_	0	erased	_	_
18	like	_	IN	IN	_	24	prep	_	_
19	some	_	DT	DT	_	21	det	_	_
20	other	_	JJ	JJ	_	21	amod	_	_
21	reviewers	_	NNS	NNS	_	18	pobj	_	_
22	,	_	,	,	_	0	erased	_	_
23	i	_	FW	FW	_	24	nsubj	_	_
24	recieved	_	VBD	VBD	_	2	parataxis	_	_
25	this	_	DT	DT	_	26	det	_	_
26	phone	_	NN	NN	_	24	dobj	_	_
27	using	_	VBG	VBG	_	24	xcomp	_	_
28	t-mobiles	_	NNS	NNS	_	29	nsubj	_	_
29	upgrade	_	VB	VB	_	27	ccomp	_	_
30	program	_	NN	NN	_	29	dobj	_	_
31	.	_	.	.	_	0	erased	_	_
#nsubj(did-2, it-1)
#root(ROOT-0, did-2)
#aux(scored-4, have-3)
#ccomp(did-2, scored-4)
#quantmod(all-6, over-5)
#num(competitors-8, all-6)
#amod(competitors-8, other-7)
#dobj(scored-4, competitors-8)
#nsubj(enjoying-12, i-10)
#aux(enjoying-12, am-11)
#parataxis(did-2, enjoying-12)
#poss(phone-14, my-13)
#dep(enjoying-12, phone-14)
#det(lot-16, a-15)
#dobj(enjoying-12, lot-16)
#det(reviewers-21, some-19)
#amod(reviewers-21, other-20)
#prep_like(recieved-24, reviewers-21)
#nsubj(recieved-24, i-23)
#parataxis(did-2, recieved-24)
#det(phone-26, this-25)
#dobj(recieved-24, phone-26)
#xcomp(recieved-24, using-27)
#nsubj(upgrade-29, t-mobiles-28)
#ccomp(using-27, upgrade-29)
#dobj(upgrade-29, program-30)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	had	_	VBD	VBD	_	4	aux	_	_
3	been	_	VBN	VBN	_	4	aux	_	_
4	comparing	_	VBG	VBG	_	0	root	_	_
5	the	_	DT	DT	_	6	det	_	_
6	3650	_	CD	CD	_	4	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	3560	_	CD	CD	_	6	conj	_	_
9	and	_	CC	CC	_	6	cc	_	_
10	the	_	DT	DT	_	11	det	_	_
11	3595	_	CD	CD	_	6	conj	_	_
12	but	_	CC	CC	_	4	cc	_	_
13	could	_	MD	MD	_	15	aux	_	_
14	n't	_	RB	RB	_	15	neg	_	_
15	settle	_	VB	VB	_	4	conj	_	_
16	...	_	:	:	_	0	erased	_	_
17	then	_	RB	RB	_	18	advmod	_	_
18	along	_	RB	RB	_	19	advmod	_	_
19	came	_	VBD	VBD	_	4	parataxis	_	_
20	the	_	DT	DT	_	21	det	_	_
21	6610	_	NNS	NNS	_	19	nsubj	_	_
22	,	_	,	,	_	0	erased	_	_
23	which	_	WDT	WDT	_	25	nsubj	_	_
24	was	_	VBD	VBD	_	25	cop	_	_
25	perfect	_	JJ	JJ	_	21	rcmod	_	_
26	for	_	IN	IN	_	25	prep	_	_
27	me	_	PRP	PRP	_	26	pobj	_	_
28	.	_	.	.	_	0	erased	_	_
#nsubj(comparing-4, i-1)
#nsubj(settle-15, i-1)
#aux(comparing-4, had-2)
#aux(comparing-4, been-3)
#root(ROOT-0, comparing-4)
#det(3650-6, the-5)
#dobj(comparing-4, 3650-6)
#dobj(comparing-4, 3560-8)
#conj_and(3650-6, 3560-8)
#det(3595-11, the-10)
#dobj(comparing-4, 3595-11)
#conj_and(3650-6, 3595-11)
#aux(settle-15, could-13)
#neg(settle-15, n't-14)
#conj_but(comparing-4, settle-15)
#advmod(along-18, then-17)
#advmod(came-19, along-18)
#parataxis(comparing-4, came-19)
#det(6610-21, the-20)
#nsubj(came-19, 6610-21)
#nsubj(perfect-25, 6610-21)
#cop(perfect-25, was-24)
#rcmod(6610-21, perfect-25)
#prep_for(perfect-25, me-27)
result:
1	pros	_	NNS	NNS	_	0	root	_	_
2	:	_	:	:	_	0	erased	_	_
3	small	_	JJ	JJ	_	4	amod	_	_
4	size	_	NN	NN	_	1	dep	_	_
5	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, pros-1)
#amod(size-4, small-3)
#dep(pros-1, size-4)
result:
1	i	_	FW	FW	_	7	nsubj	_	_
2	love	_	NN	NN	_	1	dep	_	_
3	the	_	DT	DT	_	4	det	_	_
4	fact	_	NN	NN	_	1	dep	_	_
5	i	_	FW	FW	_	1	dep	_	_
6	can	_	MD	MD	_	7	aux	_	_
7	carry	_	VB	VB	_	0	root	_	_
8	it	_	PRP	PRP	_	7	dobj	_	_
9	in	_	IN	IN	_	7	prep	_	_
10	my	_	PRP$	PRP$	_	11	poss	_	_
11	shirt	_	NN	NN	_	9	pobj	_	_
12	or	_	CC	CC	_	11	cc	_	_
13	pants	_	NNS	NNS	_	14	nn	_	_
14	pocket	_	NN	NN	_	11	conj	_	_
15	and	_	CC	CC	_	7	cc	_	_
16	forget	_	VB	VB	_	7	conj	_	_
17	about	_	IN	IN	_	16	prep	_	_
18	it	_	PRP	PRP	_	17	pobj	_	_
19	.	_	.	.	_	0	erased	_	_
#nsubj(carry-7, i-1)
#nsubj(forget-16, i-1)
#dep(i-1, love-2)
#det(fact-4, the-3)
#dep(i-1, fact-4)
#dep(i-1, i-5)
#aux(carry-7, can-6)
#root(ROOT-0, carry-7)
#dobj(carry-7, it-8)
#poss(shirt-11, my-10)
#prep_in(carry-7, shirt-11)
#nn(pocket-14, pants-13)
#prep_in(carry-7, pocket-14)
#conj_or(shirt-11, pocket-14)
#conj_and(carry-7, forget-16)
#prep_about(forget-16, it-18)
result:
1	just	_	RB	RB	_	2	nsubj	_	_
2	make	_	VBP	VBP	_	0	root	_	_
3	sure	_	RB	RB	_	2	advmod	_	_
4	the	_	DT	DT	_	5	det	_	_
5	keys	_	NNS	NNS	_	7	nsubjpass	_	_
6	are	_	VBP	VBP	_	7	auxpass	_	_
7	locked	_	VBN	VBN	_	2	ccomp	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(make-2, just-1)
#root(ROOT-0, make-2)
#advmod(make-2, sure-3)
#det(keys-5, the-4)
#nsubjpass(locked-7, keys-5)
#auxpass(locked-7, are-6)
#ccomp(make-2, locked-7)
result:
1	color	_	NN	NN	_	2	nn	_	_
2	screen	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	good	_	JJ	JJ	_	0	root	_	_
5	.	_	.	.	_	0	erased	_	_
#nn(screen-2, color-1)
#nsubj(good-4, screen-2)
#cop(good-4, is-3)
#root(ROOT-0, good-4)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	has	_	VBZ	VBZ	_	0	root	_	_
3	lots	_	NNS	NNS	_	2	dobj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	features	_	NNS	NNS	_	4	pobj	_	_
6	such	_	JJ	JJ	_	7	mwe	_	_
7	as	_	IN	IN	_	5	prep	_	_
8	the	_	DT	DT	_	9	det	_	_
9	calendar	_	NN	NN	_	7	pobj	_	_
10	which	_	WDT	WDT	_	11	nsubj	_	_
11	works	_	VBZ	VBZ	_	5	rcmod	_	_
12	like	_	IN	IN	_	11	prep	_	_
13	my	_	PRP$	PRP$	_	15	poss	_	_
14	outlook	_	NN	NN	_	15	nn	_	_
15	calendar	_	NN	NN	_	12	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#nsubj(has-2, it-1)
#root(ROOT-0, has-2)
#dobj(has-2, lots-3)
#prep_of(lots-3, features-5)
#nsubj(works-11, features-5)
#det(calendar-9, the-8)
#prep_such_as(features-5, calendar-9)
#rcmod(features-5, works-11)
#poss(calendar-15, my-13)
#nn(calendar-15, outlook-14)
#prep_like(works-11, calendar-15)
result:
1	the	_	DT	DT	_	2	det	_	_
2	keys	_	NNS	NNS	_	4	nsubjpass	_	_
3	are	_	VBP	VBP	_	4	auxpass	_	_
4	laid	_	VBN	VBN	_	0	root	_	_
5	out	_	RP	RP	_	4	prt	_	_
6	normal	_	JJ	JJ	_	4	advmod	_	_
7	so	_	IN	IN	_	11	mark	_	_
8	there	_	EX	EX	_	11	expl	_	_
9	is	_	VBZ	VBZ	_	11	aux	_	_
10	no	_	RB	RB	_	11	advmod	_	_
11	guessing	_	VBG	VBG	_	4	advcl	_	_
12	.	_	.	.	_	0	erased	_	_
#det(keys-2, the-1)
#nsubjpass(laid-4, keys-2)
#auxpass(laid-4, are-3)
#root(ROOT-0, laid-4)
#prt(laid-4, out-5)
#advmod(laid-4, normal-6)
#mark(guessing-11, so-7)
#expl(guessing-11, there-8)
#aux(guessing-11, is-9)
#advmod(guessing-11, no-10)
#advcl(laid-4, guessing-11)
result:
1	navigating	_	VBG	VBG	_	6	csubj	_	_
2	through	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	4	det	_	_
4	menus	_	NNS	NNS	_	2	pobj	_	_
5	is	_	VBZ	VBZ	_	6	cop	_	_
6	super	_	JJ	JJ	_	0	root	_	_
7	easy	_	JJ	JJ	_	6	dep	_	_
8	,	_	,	,	_	0	erased	_	_
9	especially	_	RB	RB	_	13	advmod	_	_
10	if	_	IN	IN	_	13	mark	_	_
11	you	_	PRP	PRP	_	13	nsubj	_	_
12	have	_	VBP	VBP	_	13	aux	_	_
13	owned	_	VBN	VBN	_	6	advcl	_	_
14	a	_	DT	DT	_	16	det	_	_
15	previous	_	JJ	JJ	_	16	amod	_	_
16	model	_	NN	NN	_	13	iobj	_	_
17	nokia	_	JJ	JJ	_	18	amod	_	_
18	phone	_	NN	NN	_	13	dobj	_	_
19	.	_	.	.	_	0	erased	_	_
#csubj(super-6, navigating-1)
#det(menus-4, the-3)
#prep_through(navigating-1, menus-4)
#cop(super-6, is-5)
#root(ROOT-0, super-6)
#dep(super-6, easy-7)
#advmod(owned-13, especially-9)
#mark(owned-13, if-10)
#nsubj(owned-13, you-11)
#aux(owned-13, have-12)
#advcl(super-6, owned-13)
#det(model-16, a-14)
#amod(model-16, previous-15)
#iobj(owned-13, model-16)
#amod(phone-18, nokia-17)
#dobj(owned-13, phone-18)
result:
1	battery	_	NN	NN	_	2	nn	_	_
2	life	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	very	_	RB	RB	_	5	advmod	_	_
5	good	_	JJ	JJ	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	i	_	FW	FW	_	5	advmod	_	_
8	use	_	VBP	VBP	_	5	dep	_	_
9	it	_	PRP	PRP	_	8	iobj	_	_
10	every	_	DT	DT	_	11	det	_	_
11	day	_	NN	NN	_	8	dobj	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	i	_	FW	FW	_	11	conj	_	_
14	have	_	VB	VB	_	8	dep	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	charge	_	VB	VB	_	14	xcomp	_	_
17	it	_	PRP	PRP	_	16	iobj	_	_
18	every	_	DT	DT	_	22	det	_	_
19	5	_	CD	CD	_	22	num	_	_
20	or	_	CC	CC	_	19	cc	_	_
21	6	_	CD	CD	_	19	conj	_	_
22	days	_	NNS	NNS	_	16	dobj	_	_
23	or	_	CC	CC	_	22	cc	_	_
24	so	_	RB	RB	_	22	advmod	_	_
25	.	_	.	.	_	0	erased	_	_
#nn(life-2, battery-1)
#nsubj(good-5, life-2)
#cop(good-5, is-3)
#advmod(good-5, very-4)
#root(ROOT-0, good-5)
#advmod(good-5, i-7)
#dep(good-5, use-8)
#iobj(use-8, it-9)
#det(day-11, every-10)
#dobj(use-8, day-11)
#dobj(use-8, i-13)
#conj_and(day-11, i-13)
#dep(use-8, have-14)
#aux(charge-16, to-15)
#xcomp(have-14, charge-16)
#iobj(charge-16, it-17)
#det(days-22, every-18)
#num(days-22, 5-19)
#conj_or(5-19, 6-21)
#num(days-22, 6-21)
#dobj(charge-16, days-22)
#dobj(charge-16, so-24)
#advmod(days-22, so-24)
#conj_or(days-22, so-24)
result:
1	cons	_	NNS	NNS	_	0	root	_	_
2	:	_	:	:	_	0	erased	_	_
3	not	_	RB	RB	_	4	neg	_	_
4	many	_	JJ	JJ	_	1	dep	_	_
5	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, cons-1)
#neg(many-4, not-3)
#dep(cons-1, many-4)
result:
1	the	_	DT	DT	_	3	det	_	_
2	volume	_	NN	NN	_	3	nn	_	_
3	key	_	NN	NN	_	6	nsubj	_	_
4	can	_	MD	MD	_	6	aux	_	_
5	be	_	VB	VB	_	6	cop	_	_
6	hard	_	JJ	JJ	_	0	root	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	press	_	VB	VB	_	6	xcomp	_	_
9	,	_	,	,	_	0	erased	_	_
10	but	_	CC	CC	_	6	cc	_	_
11	i	_	FW	FW	_	12	nsubj	_	_
12	think	_	VBP	VBP	_	6	conj	_	_
13	this	_	DT	DT	_	15	nsubj	_	_
14	may	_	MD	MD	_	15	aux	_	_
15	be	_	VB	VB	_	12	ccomp	_	_
16	by	_	IN	IN	_	15	prep	_	_
17	design	_	NN	NN	_	16	pobj	_	_
18	rather	_	RB	RB	_	19	advmod	_	_
19	than	_	IN	IN	_	15	prep	_	_
20	a	_	DT	DT	_	21	det	_	_
21	flaw	_	NN	NN	_	19	pobj	_	_
22	,	_	,	,	_	0	erased	_	_
23	perhaps	_	RB	RB	_	25	advmod	_	_
24	to	_	TO	TO	_	25	aux	_	_
25	keep	_	VB	VB	_	15	xcomp	_	_
26	you	_	PRP	PRP	_	25	dobj	_	_
27	from	_	IN	IN	_	25	prep	_	_
28	pressing	_	VBG	VBG	_	27	pcomp	_	_
29	it	_	PRP	PRP	_	28	dobj	_	_
30	accidentally	_	RB	RB	_	28	advmod	_	_
31	when	_	WRB	WRB	_	33	advmod	_	_
32	you	_	PRP	PRP	_	33	nsubj	_	_
33	are	_	VBP	VBP	_	25	advcl	_	_
34	in	_	IN	IN	_	33	prep	_	_
35	a	_	DT	DT	_	36	det	_	_
36	call	_	NN	NN	_	34	pobj	_	_
37	.	_	.	.	_	0	erased	_	_
#det(key-3, the-1)
#nn(key-3, volume-2)
#nsubj(hard-6, key-3)
#nsubj(press-8, key-3)
#aux(hard-6, can-4)
#cop(hard-6, be-5)
#root(ROOT-0, hard-6)
#aux(press-8, to-7)
#xcomp(hard-6, press-8)
#nsubj(think-12, i-11)
#conj_but(hard-6, think-12)
#nsubj(be-15, this-13)
#nsubj(keep-25, this-13)
#aux(be-15, may-14)
#ccomp(think-12, be-15)
#prep_by(be-15, design-17)
#advmod(be-15, rather-18)
#det(flaw-21, a-20)
#prep_than(be-15, flaw-21)
#advmod(keep-25, perhaps-23)
#aux(keep-25, to-24)
#xcomp(be-15, keep-25)
#dobj(keep-25, you-26)
#prepc_from(keep-25, pressing-28)
#dobj(pressing-28, it-29)
#advmod(pressing-28, accidentally-30)
#advmod(are-33, when-31)
#nsubj(are-33, you-32)
#advcl(keep-25, are-33)
#det(call-36, a-35)
#prep_in(are-33, call-36)
result:
1	pc	_	NN	NN	_	2	nn	_	_
2	cable	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	too	_	RB	RB	_	5	advmod	_	_
5	expensive	_	JJ	JJ	_	0	root	_	_
6	...	_	:	:	_	0	erased	_	_
7	$	_	$	$	_	5	parataxis	_	_
8	50	_	CD	CD	_	7	num	_	_
9	for	_	IN	IN	_	7	prep	_	_
10	a	_	DT	DT	_	12	det	_	_
11	usb	_	NN	NN	_	12	nn	_	_
12	cable	_	NN	NN	_	9	pobj	_	_
13	?	_	.	.	_	0	erased	_	_
#nn(cable-2, pc-1)
#nsubj(expensive-5, cable-2)
#cop(expensive-5, is-3)
#advmod(expensive-5, too-4)
#root(ROOT-0, expensive-5)
#parataxis(expensive-5, $-7)
#num($-7, 50-8)
#det(cable-12, a-10)
#nn(cable-12, usb-11)
#prep_for($-7, cable-12)
result:
1	please	_	VB	VB	_	0	root	_	_
2	!	_	.	.	_	0	erased	_	_
#root(ROOT-0, please-1)
result:
1	is	_	VBZ	VBZ	_	2	cop	_	_
2	this	_	DT	DT	_	0	root	_	_
3	how	_	WRB	WRB	_	5	advmod	_	_
4	nokia	_	NN	NN	_	5	nsubj	_	_
5	subsidizes	_	VBZ	VBZ	_	2	dep	_	_
6	their	_	PRP$	PRP$	_	9	poss	_	_
7	free	_	JJ	JJ	_	9	amod	_	_
8	pc	_	NN	NN	_	9	nn	_	_
9	software	_	NN	NN	_	5	dobj	_	_
10	?	_	.	.	_	0	erased	_	_
#cop(this-2, is-1)
#root(ROOT-0, this-2)
#advmod(subsidizes-5, how-3)
#nsubj(subsidizes-5, nokia-4)
#dep(this-2, subsidizes-5)
#poss(software-9, their-6)
#amod(software-9, free-7)
#nn(software-9, pc-8)
#dobj(subsidizes-5, software-9)
result:
1	first	_	JJ	JJ	_	10	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	all	_	DT	DT	_	4	det	_	_
4	i	_	FW	FW	_	2	pobj	_	_
5	have	_	VBP	VBP	_	10	aux	_	_
6	been	_	VBN	VBN	_	10	cop	_	_
7	a	_	DT	DT	_	10	det	_	_
8	big	_	JJ	JJ	_	10	amod	_	_
9	nokia	_	NN	NN	_	10	nn	_	_
10	fan	_	NN	NN	_	0	root	_	_
11	and	_	CC	CC	_	10	cc	_	_
12	have	_	VBP	VBP	_	14	aux	_	_
13	been	_	VBN	VBN	_	14	aux	_	_
14	upgrading	_	VBG	VBG	_	10	conj	_	_
15	my	_	PRP$	PRP$	_	17	poss	_	_
16	cell	_	NN	NN	_	17	nn	_	_
17	phones	_	NNS	NNS	_	14	dobj	_	_
18	about	_	RB	RB	_	19	advmod	_	_
19	once	_	RB	RB	_	21	advmod	_	_
20	a	_	DT	DT	_	21	det	_	_
21	year	_	NN	NN	_	14	tmod	_	_
22	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
23	right	_	RB	RB	_	28	advmod	_	_
24	after	_	IN	IN	_	28	mark	_	_
25	the	_	DT	DT	_	27	det	_	_
26	release	_	NN	NN	_	27	nn	_	_
27	contract	_	NN	NN	_	28	nsubj	_	_
28	is	_	VBZ	VBZ	_	14	parataxis	_	_
29	over	_	RP	RP	_	28	prt	_	_
30	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
31	.	_	.	.	_	0	erased	_	_
#nsubj(fan-10, first-1)
#nsubj(upgrading-14, first-1)
#det(i-4, all-3)
#prep_of(first-1, i-4)
#aux(fan-10, have-5)
#cop(fan-10, been-6)
#det(fan-10, a-7)
#amod(fan-10, big-8)
#nn(fan-10, nokia-9)
#root(ROOT-0, fan-10)
#aux(upgrading-14, have-12)
#aux(upgrading-14, been-13)
#conj_and(fan-10, upgrading-14)
#poss(phones-17, my-15)
#nn(phones-17, cell-16)
#dobj(upgrading-14, phones-17)
#advmod(once-19, about-18)
#advmod(year-21, once-19)
#det(year-21, a-20)
#tmod(upgrading-14, year-21)
#advmod(is-28, right-23)
#mark(is-28, after-24)
#det(contract-27, the-25)
#nn(contract-27, release-26)
#nsubj(is-28, contract-27)
#parataxis(upgrading-14, is-28)
#prt(is-28, over-29)
result:
1	my	_	PRP$	PRP$	_	3	poss	_	_
2	last	_	JJ	JJ	_	3	amod	_	_
3	phone	_	NN	NN	_	7	nsubj	_	_
4	was	_	VBD	VBD	_	7	cop	_	_
5	a	_	DT	DT	_	7	det	_	_
6	samsung	_	JJ	JJ	_	7	amod	_	_
7	s105	_	NN	NN	_	0	root	_	_
8	which	_	WDT	WDT	_	11	dobj	_	_
9	imo	_	NN	NN	_	11	nsubj	_	_
10	is	_	VBZ	VBZ	_	11	cop	_	_
11	superior	_	JJ	JJ	_	7	rcmod	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	cheaper	_	JJR	JJR	_	11	conj	_	_
14	to	_	TO	TO	_	11	prep	_	_
15	this	_	DT	DT	_	16	det	_	_
16	phone	_	NN	NN	_	14	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#poss(phone-3, my-1)
#amod(phone-3, last-2)
#nsubj(s105-7, phone-3)
#cop(s105-7, was-4)
#det(s105-7, a-5)
#amod(s105-7, samsung-6)
#root(ROOT-0, s105-7)
#dobj(superior-11, s105-7)
#nsubj(superior-11, imo-9)
#nsubj(cheaper-13, imo-9)
#cop(superior-11, is-10)
#rcmod(s105-7, superior-11)
#rcmod(s105-7, cheaper-13)
#conj_and(superior-11, cheaper-13)
#det(phone-16, this-15)
#prep_to(superior-11, phone-16)
result:
1	below	_	IN	IN	_	2	prep	_	_
2	is	_	VBZ	VBZ	_	0	root	_	_
3	how	_	WRB	WRB	_	5	advmod	_	_
4	i	_	FW	FW	_	5	nsubj	_	_
5	evaulate	_	VBP	VBP	_	2	dep	_	_
6	this	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	5	dobj	_	_
8	with	_	IN	IN	_	5	prep	_	_
9	other	_	JJ	JJ	_	11	amod	_	_
10	t-mobile	_	JJ	JJ	_	11	amod	_	_
11	phones	_	NNS	NNS	_	8	pobj	_	_
12	which	_	WDT	WDT	_	15	dobj	_	_
13	i	_	FW	FW	_	15	nsubj	_	_
14	have	_	VBP	VBP	_	15	aux	_	_
15	borrowed	_	VBN	VBN	_	11	rcmod	_	_
16	from	_	IN	IN	_	15	prep	_	_
17	parents	_	NNS	NNS	_	16	pobj	_	_
18	/	_	:	:	_	11	punct	_	_
19	friends	_	NNS	NNS	_	11	dep	_	_
20	:	_	:	:	_	0	erased	_	_
21	sound	_	JJ	JJ	_	22	amod	_	_
22	quality	_	NN	NN	_	11	dep	_	_
23	:	_	:	:	_	0	erased	_	_
24	the	_	DT	DT	_	27	det	_	_
25	most	_	RBS	RBS	_	26	advmod	_	_
26	important	_	JJ	JJ	_	27	amod	_	_
27	thing	_	NN	NN	_	11	dep	_	_
28	for	_	IN	IN	_	32	mark	_	_
29	me	_	PRP	PRP	_	32	nsubj	_	_
30	is	_	VBZ	VBZ	_	32	cop	_	_
31	sound	_	JJ	JJ	_	32	amod	_	_
32	quality	_	NN	NN	_	5	advcl	_	_
33	.	_	.	.	_	0	erased	_	_
#prep(is-2, below-1)
#root(ROOT-0, is-2)
#advmod(evaulate-5, how-3)
#nsubj(evaulate-5, i-4)
#dep(is-2, evaulate-5)
#det(phone-7, this-6)
#dobj(evaulate-5, phone-7)
#amod(phones-11, other-9)
#amod(phones-11, t-mobile-10)
#prep_with(evaulate-5, phones-11)
#dobj(borrowed-15, phones-11)
#nsubj(borrowed-15, i-13)
#aux(borrowed-15, have-14)
#rcmod(phones-11, borrowed-15)
#prep_from(borrowed-15, parents-17)
#punct(phones-11, /-18)
#dep(phones-11, friends-19)
#amod(quality-22, sound-21)
#dep(phones-11, quality-22)
#det(thing-27, the-24)
#advmod(important-26, most-25)
#amod(thing-27, important-26)
#dep(phones-11, thing-27)
#mark(quality-32, for-28)
#nsubj(quality-32, me-29)
#cop(quality-32, is-30)
#amod(quality-32, sound-31)
#advcl(evaulate-5, quality-32)
result:
1	nokias	_	NNS	NNS	_	4	nsubj	_	_
2	have	_	VBP	VBP	_	4	aux	_	_
3	always	_	RB	RB	_	4	advmod	_	_
4	had	_	VBN	VBN	_	0	root	_	_
5	good	_	JJ	JJ	_	7	amod	_	_
6	sound	_	JJ	JJ	_	7	amod	_	_
7	quality	_	NN	NN	_	4	dobj	_	_
8	and	_	CC	CC	_	4	cc	_	_
9	this	_	DT	DT	_	12	nsubj	_	_
10	is	_	VBZ	VBZ	_	12	cop	_	_
11	no	_	DT	DT	_	12	neg	_	_
12	exception	_	NN	NN	_	4	conj	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(had-4, nokias-1)
#aux(had-4, have-2)
#advmod(had-4, always-3)
#root(ROOT-0, had-4)
#amod(quality-7, good-5)
#amod(quality-7, sound-6)
#dobj(had-4, quality-7)
#nsubj(exception-12, this-9)
#cop(exception-12, is-10)
#neg(exception-12, no-11)
#conj_and(had-4, exception-12)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	think	_	VBP	VBP	_	0	root	_	_
3	the	_	DT	DT	_	5	det	_	_
4	sound	_	JJ	JJ	_	5	amod	_	_
5	quality	_	NN	NN	_	11	nsubj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	this	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	6	pobj	_	_
9	is	_	VBZ	VBZ	_	11	cop	_	_
10	slightly	_	RB	RB	_	11	advmod	_	_
11	better	_	JJR	JJR	_	2	ccomp	_	_
12	than	_	IN	IN	_	11	prep	_	_
13	my	_	PRP$	PRP$	_	15	poss	_	_
14	samsung	_	VBG	VBG	_	15	amod	_	_
15	phone	_	NN	NN	_	12	pobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	the	_	DT	DT	_	20	det	_	_
18	motorolla	_	JJ	JJ	_	20	amod	_	_
19	t720	_	JJ	JJ	_	20	amod	_	_
20	series	_	NN	NN	_	15	conj	_	_
21	,	_	,	,	_	0	erased	_	_
22	and	_	CC	CC	_	15	cc	_	_
23	the	_	DT	DT	_	27	det	_	_
24	sony	_	RB	RB	_	25	advmod	_	_
25	ericsson	_	JJ	JJ	_	27	amod	_	_
26	t610	_	JJ	JJ	_	27	amod	_	_
27	series	_	NN	NN	_	15	conj	_	_
28	.	_	.	.	_	0	erased	_	_
#nsubj(think-2, i-1)
#root(ROOT-0, think-2)
#det(quality-5, the-3)
#amod(quality-5, sound-4)
#nsubj(better-11, quality-5)
#det(phone-8, this-7)
#prep_of(quality-5, phone-8)
#cop(better-11, is-9)
#advmod(better-11, slightly-10)
#ccomp(think-2, better-11)
#poss(phone-15, my-13)
#amod(phone-15, samsung-14)
#prep_than(better-11, phone-15)
#det(series-20, the-17)
#amod(series-20, motorolla-18)
#amod(series-20, t720-19)
#prep_than(better-11, series-20)
#conj_and(phone-15, series-20)
#det(series-27, the-23)
#advmod(ericsson-25, sony-24)
#amod(series-27, ericsson-25)
#amod(series-27, t610-26)
#prep_than(better-11, series-27)
#conj_and(phone-15, series-27)
result:
1	the	_	DT	DT	_	4	det	_	_
2	loud	_	JJ	JJ	_	4	amod	_	_
3	speaker	_	NN	NN	_	4	nn	_	_
4	function	_	NN	NN	_	9	nsubj	_	_
5	on	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	6610	_	CD	CD	_	5	pobj	_	_
8	is	_	VBZ	VBZ	_	9	cop	_	_
9	great	_	JJ	JJ	_	0	root	_	_
10	because	_	IN	IN	_	14	mark	_	_
11	you	_	PRP	PRP	_	14	nsubj	_	_
12	do	_	VBP	VBP	_	14	aux	_	_
13	n't	_	RB	RB	_	14	neg	_	_
14	need	_	VB	VB	_	9	advcl	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	put	_	VB	VB	_	14	xcomp	_	_
17	your	_	PRP$	PRP$	_	18	poss	_	_
18	phone	_	NN	NN	_	16	dobj	_	_
19	right	_	RB	RB	_	16	advmod	_	_
20	next	_	IN	IN	_	16	prep	_	_
21	to	_	TO	TO	_	20	pcomp	_	_
22	your	_	PRP$	PRP$	_	23	poss	_	_
23	ear	_	NN	NN	_	21	pobj	_	_
24	to	_	TO	TO	_	25	aux	_	_
25	talk	_	VB	VB	_	23	vmod	_	_
26	.	_	.	.	_	0	erased	_	_
#det(function-4, the-1)
#amod(function-4, loud-2)
#nn(function-4, speaker-3)
#nsubj(great-9, function-4)
#det(6610-7, the-6)
#prep_on(function-4, 6610-7)
#cop(great-9, is-8)
#root(ROOT-0, great-9)
#mark(need-14, because-10)
#nsubj(need-14, you-11)
#nsubj(put-16, you-11)
#aux(need-14, do-12)
#neg(need-14, n't-13)
#advcl(great-9, need-14)
#aux(put-16, to-15)
#xcomp(need-14, put-16)
#poss(phone-18, your-17)
#dobj(put-16, phone-18)
#advmod(put-16, right-19)
#prepc_next_to(put-16, to-21)
#poss(ear-23, your-22)
#pobj(put-16, ear-23)
#aux(talk-25, to-24)
#vmod(ear-23, talk-25)
result:
1	overall	_	JJ	JJ	_	2	amod	_	_
2	design	_	NN	NN	_	0	root	_	_
3	:	_	:	:	_	0	erased	_	_
4	i	_	FW	FW	_	2	dep	_	_
5	like	_	IN	IN	_	4	prep	_	_
6	my	_	PRP$	PRP$	_	7	poss	_	_
7	phones	_	NNS	NNS	_	5	pobj	_	_
8	to	_	TO	TO	_	10	aux	_	_
9	be	_	VB	VB	_	10	cop	_	_
10	small	_	JJ	JJ	_	7	vmod	_	_
11	so	_	IN	IN	_	14	mark	_	_
12	i	_	FW	FW	_	14	nsubj	_	_
13	can	_	MD	MD	_	14	aux	_	_
14	fit	_	VB	VB	_	10	advcl	_	_
15	it	_	PRP	PRP	_	14	dobj	_	_
16	in	_	IN	IN	_	14	prep	_	_
17	my	_	PRP$	PRP$	_	18	poss	_	_
18	pockets	_	NNS	NNS	_	16	pobj	_	_
19	.	_	.	.	_	0	erased	_	_
#amod(design-2, overall-1)
#root(ROOT-0, design-2)
#dep(design-2, i-4)
#poss(phones-7, my-6)
#prep_like(i-4, phones-7)
#aux(small-10, to-8)
#cop(small-10, be-9)
#vmod(phones-7, small-10)
#mark(fit-14, so-11)
#nsubj(fit-14, i-12)
#aux(fit-14, can-13)
#advcl(small-10, fit-14)
#dobj(fit-14, it-15)
#poss(pockets-18, my-17)
#prep_in(fit-14, pockets-18)
result:
1	of	_	IN	IN	_	14	prep	_	_
2	all	_	PDT	PDT	_	4	predet	_	_
3	these	_	DT	DT	_	4	det	_	_
4	phones	_	NNS	NNS	_	1	pobj	_	_
5	the	_	DT	DT	_	6	det	_	_
6	motorolla	_	NN	NN	_	11	nn	_	_
7	and	_	CC	CC	_	6	cc	_	_
8	the	_	DT	DT	_	10	det	_	_
9	sony	_	JJ	JJ	_	10	amod	_	_
10	ericsson	_	NN	NN	_	6	conj	_	_
11	phones	_	NNS	NNS	_	14	nsubj	_	_
12	are	_	VBP	VBP	_	14	cop	_	_
13	the	_	DT	DT	_	14	det	_	_
14	smallest	_	JJS	JJS	_	0	root	_	_
15	.	_	.	.	_	0	erased	_	_
#predet(phones-4, all-2)
#det(phones-4, these-3)
#prep_of(smallest-14, phones-4)
#det(motorolla-6, the-5)
#nn(phones-11, motorolla-6)
#det(ericsson-10, the-8)
#amod(ericsson-10, sony-9)
#conj_and(motorolla-6, ericsson-10)
#nn(phones-11, ericsson-10)
#nsubj(smallest-14, phones-11)
#cop(smallest-14, are-12)
#det(smallest-14, the-13)
#root(ROOT-0, smallest-14)
result:
1	the	_	DT	DT	_	2	det	_	_
2	6610	_	CD	CD	_	7	nsubj	_	_
3	is	_	VBZ	VBZ	_	7	cop	_	_
4	the	_	DT	DT	_	7	det	_	_
5	actually	_	RB	RB	_	7	advmod	_	_
6	the	_	DT	DT	_	7	det	_	_
7	longest	_	JJS	JJS	_	0	root	_	_
8	but	_	CC	CC	_	7	cc	_	_
9	they	_	PRP	PRP	_	13	nsubj	_	_
10	are	_	VBP	VBP	_	13	cop	_	_
11	all	_	RB	RB	_	13	advmod	_	_
12	very	_	RB	RB	_	13	advmod	_	_
13	small	_	JJ	JJ	_	7	conj	_	_
14	.	_	.	.	_	0	erased	_	_
#det(6610-2, the-1)
#nsubj(longest-7, 6610-2)
#cop(longest-7, is-3)
#det(longest-7, the-4)
#advmod(longest-7, actually-5)
#det(longest-7, the-6)
#root(ROOT-0, longest-7)
#nsubj(small-13, they-9)
#cop(small-13, are-10)
#advmod(small-13, all-11)
#advmod(small-13, very-12)
#conj_but(longest-7, small-13)
result:
1	as	_	RB	RB	_	2	advmod	_	_
2	much	_	RB	RB	_	5	advmod	_	_
3	as	_	IN	IN	_	2	prep	_	_
4	i	_	FW	FW	_	3	pobj	_	_
5	like	_	IN	IN	_	14	prep	_	_
6	nokia	_	NN	NN	_	7	nn	_	_
7	phones	_	NNS	NNS	_	5	pobj	_	_
8	the	_	DT	DT	_	11	det	_	_
9	flip	_	JJ	JJ	_	11	amod	_	_
10	phones	_	NNS	NNS	_	11	nn	_	_
11	imo	_	NN	NN	_	14	nsubj	_	_
12	are	_	VBP	VBP	_	14	cop	_	_
13	much	_	RB	RB	_	14	advmod	_	_
14	better	_	JJR	JJR	_	0	root	_	_
15	because	_	IN	IN	_	19	mark	_	_
16	a	_	LS	LS	_	19	dep	_	_
17	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
18	you	_	PRP	PRP	_	19	nsubj	_	_
19	wont	_	VBP	VBP	_	14	ccomp	_	_
20	scratch	_	VBP	VBP	_	19	dep	_	_
21	your	_	PRP$	PRP$	_	22	poss	_	_
22	screens	_	NNS	NNS	_	20	dobj	_	_
23	/	_	:	:	_	19	punct	_	_
24	keys	_	NNS	NNS	_	40	nsubj	_	_
25	b	_	LS	LS	_	28	dep	_	_
26	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
27	you	_	PRP	PRP	_	28	nsubj	_	_
28	dont	_	VBP	VBP	_	29	csubj	_	_
29	need	_	VBP	VBP	_	24	rcmod	_	_
30	to	_	TO	TO	_	31	aux	_	_
31	lock	_	VB	VB	_	29	xcomp	_	_
32	your	_	PRP$	PRP$	_	33	poss	_	_
33	phone	_	NN	NN	_	31	dep	_	_
34	all	_	PDT	PDT	_	36	predet	_	_
35	the	_	DT	DT	_	36	det	_	_
36	time	_	NN	NN	_	31	dobj	_	_
37	to	_	TO	TO	_	38	aux	_	_
38	prevent	_	VB	VB	_	31	vmod	_	_
39	accidently	_	RB	RB	_	38	advmod	_	_
40	hitting	_	VBG	VBG	_	19	parataxis	_	_
41	the	_	DT	DT	_	42	det	_	_
42	keys	_	NNS	NNS	_	40	dobj	_	_
43	.	_	.	.	_	0	erased	_	_
#advmod(much-2, as-1)
#advmod(better-14, much-2)
#prep_as(much-2, i-4)
#nn(phones-7, nokia-6)
#prep_like(better-14, phones-7)
#det(imo-11, the-8)
#amod(imo-11, flip-9)
#nn(imo-11, phones-10)
#nsubj(better-14, imo-11)
#cop(better-14, are-12)
#advmod(better-14, much-13)
#root(ROOT-0, better-14)
#mark(wont-19, because-15)
#dep(wont-19, a-16)
#nsubj(wont-19, you-18)
#ccomp(better-14, wont-19)
#dep(wont-19, scratch-20)
#poss(screens-22, your-21)
#dobj(scratch-20, screens-22)
#punct(wont-19, /-23)
#nsubj(hitting-40, keys-24)
#dep(dont-28, b-25)
#nsubj(dont-28, you-27)
#csubj(need-29, dont-28)
#rcmod(keys-24, need-29)
#aux(lock-31, to-30)
#xcomp(need-29, lock-31)
#poss(phone-33, your-32)
#dep(lock-31, phone-33)
#predet(time-36, all-34)
#det(time-36, the-35)
#dobj(lock-31, time-36)
#aux(prevent-38, to-37)
#vmod(lock-31, prevent-38)
#advmod(prevent-38, accidently-39)
#parataxis(wont-19, hitting-40)
#det(keys-42, the-41)
#dobj(hitting-40, keys-42)
result:
1	ease	_	NN	NN	_	8	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	use	_	NN	NN	_	2	pobj	_	_
4	:	_	:	:	_	0	erased	_	_
5	how	_	WRB	WRB	_	6	advmod	_	_
6	easy	_	JJ	JJ	_	1	rcmod	_	_
7	is	_	VBZ	VBZ	_	8	cop	_	_
8	it	_	PRP	PRP	_	0	root	_	_
9	for	_	IN	IN	_	8	prep	_	_
10	me	_	PRP	PRP	_	9	pobj	_	_
11	to	_	TO	TO	_	12	aux	_	_
12	get	_	VB	VB	_	8	vmod	_	_
13	to	_	TO	TO	_	12	prep	_	_
14	a	_	DT	DT	_	16	det	_	_
15	certain	_	JJ	JJ	_	16	amod	_	_
16	menu	_	NN	NN	_	13	pobj	_	_
17	?	_	.	.	_	0	erased	_	_
#nsubj(it-8, ease-1)
#prep_of(ease-1, use-3)
#advmod(easy-6, how-5)
#rcmod(ease-1, easy-6)
#cop(it-8, is-7)
#root(ROOT-0, it-8)
#prep_for(it-8, me-10)
#aux(get-12, to-11)
#vmod(it-8, get-12)
#det(menu-16, a-14)
#amod(menu-16, certain-15)
#prep_to(get-12, menu-16)
result:
1	the	_	DT	DT	_	3	det	_	_
2	samsung	_	JJ	JJ	_	3	amod	_	_
3	phones	_	NNS	NNS	_	4	nsubj	_	_
4	has	_	VBZ	VBZ	_	0	root	_	_
5	a	_	DT	DT	_	7	det	_	_
6	customize	_	JJ	JJ	_	7	amod	_	_
7	function	_	NN	NN	_	4	dobj	_	_
8	so	_	RB	RB	_	12	advmod	_	_
9	that	_	IN	IN	_	12	mark	_	_
10	you	_	PRP	PRP	_	12	nsubj	_	_
11	can	_	MD	MD	_	12	aux	_	_
12	assign	_	VB	VB	_	4	advcl	_	_
13	certain	_	JJ	JJ	_	14	amod	_	_
14	functions	_	NNS	NNS	_	12	dobj	_	_
15	to	_	TO	TO	_	12	prep	_	_
16	directional	_	JJ	JJ	_	17	amod	_	_
17	buttons	_	NNS	NNS	_	15	pobj	_	_
18	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
19	like	_	IN	IN	_	12	dep	_	_
20	assign	_	VB	VB	_	19	pcomp	_	_
21	alarm	_	NN	NN	_	22	nn	_	_
22	clock	_	NN	NN	_	20	dobj	_	_
23	to	_	TO	TO	_	20	prep	_	_
24	the	_	DT	DT	_	27	det	_	_
25	left	_	JJ	JJ	_	27	amod	_	_
26	directional	_	JJ	JJ	_	27	amod	_	_
27	key	_	NN	NN	_	23	pobj	_	_
28	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
29	.	_	.	.	_	0	erased	_	_
#det(phones-3, the-1)
#amod(phones-3, samsung-2)
#nsubj(has-4, phones-3)
#root(ROOT-0, has-4)
#det(function-7, a-5)
#amod(function-7, customize-6)
#dobj(has-4, function-7)
#advmod(assign-12, so-8)
#mark(assign-12, that-9)
#nsubj(assign-12, you-10)
#aux(assign-12, can-11)
#advcl(has-4, assign-12)
#amod(functions-14, certain-13)
#dobj(assign-12, functions-14)
#amod(buttons-17, directional-16)
#prep_to(assign-12, buttons-17)
#dep(assign-12, like-19)
#pcomp(like-19, assign-20)
#nn(clock-22, alarm-21)
#dobj(assign-20, clock-22)
#det(key-27, the-24)
#amod(key-27, left-25)
#amod(key-27, directional-26)
#prep_to(assign-20, key-27)
result:
1	that	_	DT	DT	_	6	nsubj	_	_
2	is	_	VBZ	VBZ	_	6	cop	_	_
3	a	_	DT	DT	_	6	det	_	_
4	very	_	RB	RB	_	5	advmod	_	_
5	nice	_	JJ	JJ	_	6	amod	_	_
6	feature	_	NN	NN	_	0	root	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(feature-6, that-1)
#cop(feature-6, is-2)
#det(feature-6, a-3)
#advmod(nice-5, very-4)
#amod(feature-6, nice-5)
#root(ROOT-0, feature-6)
result:
1	the	_	DT	DT	_	2	det	_	_
2	6610	_	CD	CD	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	still	_	RB	RB	_	5	advmod	_	_
5	easier	_	JJR	JJR	_	0	root	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	use	_	VB	VB	_	5	xcomp	_	_
8	than	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	12	det	_	_
10	other	_	JJ	JJ	_	12	amod	_	_
11	two	_	CD	CD	_	12	num	_	_
12	phones	_	NNS	NNS	_	8	pobj	_	_
13	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
14	t610	_	JJ	JJ	_	16	amod	_	_
15	,	_	,	,	_	0	erased	_	_
16	t720i	_	JJ	JJ	_	5	dep	_	_
17	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
18	.	_	.	.	_	0	erased	_	_
#det(6610-2, the-1)
#nsubj(easier-5, 6610-2)
#nsubj(use-7, 6610-2)
#cop(easier-5, is-3)
#advmod(easier-5, still-4)
#root(ROOT-0, easier-5)
#aux(use-7, to-6)
#xcomp(easier-5, use-7)
#det(phones-12, the-9)
#amod(phones-12, other-10)
#num(phones-12, two-11)
#prep_than(use-7, phones-12)
#amod(t720i-16, t610-14)
#dep(easier-5, t720i-16)
result:
1	the	_	DT	DT	_	4	det	_	_
2	sony	_	RB	RB	_	3	advmod	_	_
3	ericsson	_	JJ	JJ	_	4	amod	_	_
4	phone	_	NN	NN	_	8	nsubj	_	_
5	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
6	t610	_	NNP	NNP	_	8	dep	_	_
7	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
8	has	_	VBZ	VBZ	_	0	root	_	_
9	the	_	DT	DT	_	11	det	_	_
10	most	_	JJS	JJS	_	11	amod	_	_
11	whistles	_	NNS	NNS	_	8	dobj	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	bells	_	NNS	NNS	_	11	conj	_	_
14	,	_	,	,	_	0	erased	_	_
15	but	_	CC	CC	_	8	cc	_	_
16	is	_	VBZ	VBZ	_	19	cop	_	_
17	also	_	RB	RB	_	19	advmod	_	_
18	the	_	DT	DT	_	19	det	_	_
19	hardest	_	JJS	JJS	_	8	conj	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	use	_	VB	VB	_	19	dep	_	_
22	.	_	.	.	_	0	erased	_	_
#det(phone-4, the-1)
#advmod(ericsson-3, sony-2)
#amod(phone-4, ericsson-3)
#nsubj(has-8, phone-4)
#nsubj(hardest-19, phone-4)
#dep(has-8, t610-6)
#root(ROOT-0, has-8)
#det(whistles-11, the-9)
#amod(whistles-11, most-10)
#dobj(has-8, whistles-11)
#dobj(has-8, bells-13)
#conj_and(whistles-11, bells-13)
#cop(hardest-19, is-16)
#advmod(hardest-19, also-17)
#det(hardest-19, the-18)
#conj_but(has-8, hardest-19)
#aux(use-21, to-20)
#dep(hardest-19, use-21)
result:
1	battery	_	NN	NN	_	13	nsubj	_	_
2	:	_	:	:	_	0	erased	_	_
3	the	_	DT	DT	_	4	det	_	_
4	nokia	_	NN	NN	_	1	dep	_	_
5	,	_	,	,	_	0	erased	_	_
6	samsung	_	NN	NN	_	4	conj	_	_
7	and	_	CC	CC	_	4	cc	_	_
8	the	_	DT	DT	_	10	det	_	_
9	sony	_	JJ	JJ	_	10	amod	_	_
10	phones	_	NNS	NNS	_	4	conj	_	_
11	can	_	MD	MD	_	13	aux	_	_
12	all	_	RB	RB	_	13	advmod	_	_
13	last	_	VB	VB	_	0	root	_	_
14	for	_	IN	IN	_	13	advmod	_	_
15	3	_	CD	CD	_	16	num	_	_
16	days	_	NNS	NNS	_	14	pobj	_	_
17	provided	_	VBN	VBN	_	13	dep	_	_
18	you	_	PRP	PRP	_	21	nsubj	_	_
19	do	_	VBP	VBP	_	21	aux	_	_
20	n't	_	RB	RB	_	21	neg	_	_
21	talk	_	VB	VB	_	17	ccomp	_	_
22	too	_	RB	RB	_	23	advmod	_	_
23	much	_	RB	RB	_	21	advmod	_	_
24	.	_	.	.	_	0	erased	_	_
#nsubj(last-13, battery-1)
#det(nokia-4, the-3)
#dep(battery-1, nokia-4)
#dep(battery-1, samsung-6)
#conj_and(nokia-4, samsung-6)
#det(phones-10, the-8)
#amod(phones-10, sony-9)
#dep(battery-1, phones-10)
#conj_and(nokia-4, phones-10)
#aux(last-13, can-11)
#advmod(last-13, all-12)
#root(ROOT-0, last-13)
#advmod(last-13, for-14)
#num(days-16, 3-15)
#pobj(for-14, days-16)
#dep(last-13, provided-17)
#nsubj(talk-21, you-18)
#aux(talk-21, do-19)
#neg(talk-21, n't-20)
#ccomp(provided-17, talk-21)
#advmod(much-23, too-22)
#advmod(talk-21, much-23)
result:
1	the	_	DT	DT	_	3	det	_	_
2	motorolla	_	NN	NN	_	3	nn	_	_
3	phone	_	NN	NN	_	4	nsubj	_	_
4	have	_	VBP	VBP	_	0	root	_	_
5	a	_	DT	DT	_	7	det	_	_
6	horrible	_	JJ	JJ	_	7	amod	_	_
7	battery	_	NN	NN	_	4	dobj	_	_
8	which	_	WDT	WDT	_	9	nsubj	_	_
9	lasts	_	VBZ	VBZ	_	7	rcmod	_	_
10	about	_	IN	IN	_	9	prep	_	_
11	a	_	DT	DT	_	12	det	_	_
12	day	_	NN	NN	_	10	pobj	_	_
13	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
14	although	_	IN	IN	_	16	mark	_	_
15	i	_	FW	FW	_	16	nsubj	_	_
16	heard	_	VBD	VBD	_	9	parataxis	_	_
17	that	_	IN	IN	_	21	mark	_	_
18	the	_	DT	DT	_	20	det	_	_
19	motorolla	_	NN	NN	_	20	nn	_	_
20	t722i	_	NN	NN	_	21	nsubj	_	_
21	has	_	VBZ	VBZ	_	16	ccomp	_	_
22	a	_	DT	DT	_	26	det	_	_
23	much	_	RB	RB	_	24	advmod	_	_
24	longer	_	JJR	JJR	_	26	amod	_	_
25	battery	_	NN	NN	_	26	nn	_	_
26	life	_	NN	NN	_	21	dobj	_	_
27	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
28	.	_	.	.	_	0	erased	_	_
#det(phone-3, the-1)
#nn(phone-3, motorolla-2)
#nsubj(have-4, phone-3)
#root(ROOT-0, have-4)
#det(battery-7, a-5)
#amod(battery-7, horrible-6)
#dobj(have-4, battery-7)
#nsubj(lasts-9, battery-7)
#rcmod(battery-7, lasts-9)
#det(day-12, a-11)
#prep_about(lasts-9, day-12)
#mark(heard-16, although-14)
#nsubj(heard-16, i-15)
#parataxis(lasts-9, heard-16)
#mark(has-21, that-17)
#det(t722i-20, the-18)
#nn(t722i-20, motorolla-19)
#nsubj(has-21, t722i-20)
#ccomp(heard-16, has-21)
#det(life-26, a-22)
#advmod(longer-24, much-23)
#amod(life-26, longer-24)
#nn(life-26, battery-25)
#dobj(has-21, life-26)
result:
1	features	_	VBZ	VBZ	_	0	root	_	_
2	:	_	:	:	_	0	erased	_	_
3	the	_	DT	DT	_	4	det	_	_
4	t610	_	NN	NN	_	5	nsubj	_	_
5	has	_	VBZ	VBZ	_	1	parataxis	_	_
6	the	_	DT	DT	_	9	det	_	_
7	most	_	RBS	RBS	_	8	advmod	_	_
8	functionality	_	JJ	JJ	_	9	amod	_	_
9	hands	_	NNS	NNS	_	5	dobj	_	_
10	down	_	RB	RB	_	5	advmod	_	_
11	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, features-1)
#det(t610-4, the-3)
#nsubj(has-5, t610-4)
#parataxis(features-1, has-5)
#det(hands-9, the-6)
#advmod(functionality-8, most-7)
#amod(hands-9, functionality-8)
#dobj(has-5, hands-9)
#advmod(has-5, down-10)
result:
1	personally	_	RB	RB	_	3	advmod	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	found	_	VBD	VBD	_	0	root	_	_
4	the	_	DT	DT	_	7	det	_	_
5	integrated	_	VBN	VBN	_	7	amod	_	_
6	digital	_	JJ	JJ	_	7	amod	_	_
7	camera	_	NN	NN	_	3	dobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	t610	_	NNS	NNS	_	8	pobj	_	_
11	to	_	TO	TO	_	14	aux	_	_
12	be	_	VB	VB	_	14	cop	_	_
13	very	_	RB	RB	_	14	advmod	_	_
14	nice	_	JJ	JJ	_	3	vmod	_	_
15	.	_	.	.	_	0	erased	_	_
#advmod(found-3, personally-1)
#nsubj(found-3, i-2)
#root(ROOT-0, found-3)
#det(camera-7, the-4)
#amod(camera-7, integrated-5)
#amod(camera-7, digital-6)
#dobj(found-3, camera-7)
#det(t610-10, the-9)
#prep_of(camera-7, t610-10)
#aux(nice-14, to-11)
#cop(nice-14, be-12)
#advmod(nice-14, very-13)
#vmod(found-3, nice-14)
result:
1	my	_	PRP$	PRP$	_	2	poss	_	_
2	girlfriend	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	paranoid	_	JJ	JJ	_	0	root	_	_
5	when	_	WRB	WRB	_	14	advmod	_	_
6	i	_	FW	FW	_	14	nsubj	_	_
7	am	_	VBP	VBP	_	14	parataxis	_	_
8	not	_	RB	RB	_	7	neg	_	_
9	around	_	IN	IN	_	7	prep	_	_
10	her	_	PRP	PRP	_	9	pobj	_	_
11	and	_	CC	CC	_	10	cc	_	_
12	i	_	FW	FW	_	10	conj	_	_
13	just	_	RB	RB	_	14	advmod	_	_
14	take	_	VBP	VBP	_	4	advcl	_	_
15	a	_	DT	DT	_	16	det	_	_
16	pic	_	NN	NN	_	14	dobj	_	_
17	and	_	CC	CC	_	14	cc	_	_
18	send	_	VB	VB	_	14	conj	_	_
19	it	_	PRP	PRP	_	18	dobj	_	_
20	to	_	TO	TO	_	18	prep	_	_
21	her	_	PRP	PRP	_	20	pobj	_	_
22	on	_	IN	IN	_	18	prep	_	_
23	the	_	DT	DT	_	24	det	_	_
24	spot	_	NN	NN	_	22	pobj	_	_
25	so	_	IN	IN	_	28	mark	_	_
26	she	_	PRP	PRP	_	28	nsubj	_	_
27	can	_	MD	MD	_	28	aux	_	_
28	regain	_	VB	VB	_	18	advcl	_	_
29	her	_	PRP$	PRP$	_	30	poss	_	_
30	sanity	_	NN	NN	_	28	dobj	_	_
31	.	_	.	.	_	0	erased	_	_
#poss(girlfriend-2, my-1)
#nsubj(paranoid-4, girlfriend-2)
#cop(paranoid-4, is-3)
#root(ROOT-0, paranoid-4)
#advmod(take-14, when-5)
#nsubj(take-14, i-6)
#nsubj(send-18, i-6)
#parataxis(take-14, am-7)
#neg(am-7, not-8)
#prep_around(am-7, her-10)
#prep_around(am-7, i-12)
#conj_and(her-10, i-12)
#advmod(take-14, just-13)
#advcl(paranoid-4, take-14)
#det(pic-16, a-15)
#dobj(take-14, pic-16)
#advcl(paranoid-4, send-18)
#conj_and(take-14, send-18)
#dobj(send-18, it-19)
#prep_to(send-18, her-21)
#det(spot-24, the-23)
#prep_on(send-18, spot-24)
#mark(regain-28, so-25)
#nsubj(regain-28, she-26)
#aux(regain-28, can-27)
#advcl(send-18, regain-28)
#poss(sanity-30, her-29)
#dobj(regain-28, sanity-30)
result:
1	the	_	DT	DT	_	2	det	_	_
2	t610	_	NNS	NNS	_	5	nsubj	_	_
3	can	_	MD	MD	_	5	aux	_	_
4	also	_	RB	RB	_	5	advmod	_	_
5	compose	_	VB	VB	_	0	root	_	_
6	music	_	NN	NN	_	5	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	a	_	DT	DT	_	9	det	_	_
9	feature	_	NN	NN	_	6	appos	_	_
10	which	_	WDT	WDT	_	14	dobj	_	_
11	most	_	JJS	JJS	_	14	nsubj	_	_
12	wo	_	MD	MD	_	14	aux	_	_
13	n't	_	RB	RB	_	14	neg	_	_
14	use	_	VB	VB	_	6	rcmod	_	_
15	.	_	.	.	_	0	erased	_	_
#det(t610-2, the-1)
#nsubj(compose-5, t610-2)
#aux(compose-5, can-3)
#advmod(compose-5, also-4)
#root(ROOT-0, compose-5)
#dobj(compose-5, music-6)
#dobj(use-14, music-6)
#det(feature-9, a-8)
#appos(music-6, feature-9)
#nsubj(use-14, most-11)
#aux(use-14, wo-12)
#neg(use-14, n't-13)
#rcmod(music-6, use-14)
result:
1	the	_	DT	DT	_	2	det	_	_
2	6610	_	NNP	NNP	_	3	nsubj	_	_
3	has	_	VBZ	VBZ	_	0	root	_	_
4	the	_	DT	DT	_	6	det	_	_
5	radio	_	NN	NN	_	6	nn	_	_
6	function	_	NN	NN	_	3	dobj	_	_
7	which	_	WDT	WDT	_	10	nsubj	_	_
8	is	_	VBZ	VBZ	_	10	cop	_	_
9	utterly	_	RB	RB	_	10	advmod	_	_
10	useless	_	JJ	JJ	_	6	rcmod	_	_
11	.	_	.	.	_	0	erased	_	_
#det(6610-2, the-1)
#nsubj(has-3, 6610-2)
#root(ROOT-0, has-3)
#det(function-6, the-4)
#nn(function-6, radio-5)
#dobj(has-3, function-6)
#nsubj(useless-10, function-6)
#cop(useless-10, is-8)
#advmod(useless-10, utterly-9)
#rcmod(function-6, useless-10)
result:
1	it	_	PRP	PRP	_	3	nsubj	_	_
2	also	_	RB	RB	_	3	advmod	_	_
3	has	_	VBZ	VBZ	_	0	root	_	_
4	a	_	DT	DT	_	5	det	_	_
5	stock	_	NN	NN	_	3	dobj	_	_
6	tracking	_	VBG	VBG	_	5	prep	_	_
7	app	_	NN	NN	_	6	pobj	_	_
8	built	_	VBN	VBN	_	7	vmod	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
11	also	_	RB	RB	_	12	advmod	_	_
12	useless	_	JJ	JJ	_	9	dep	_	_
13	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
14	and	_	CC	CC	_	7	cc	_	_
15	a	_	DT	DT	_	18	det	_	_
16	somewhat	_	RB	RB	_	17	advmod	_	_
17	useful	_	JJ	JJ	_	18	amod	_	_
18	application	_	NN	NN	_	7	conj	_	_
19	which	_	WDT	WDT	_	20	nsubj	_	_
20	converts	_	VBZ	VBZ	_	5	rcmod	_	_
21	all	_	DT	DT	_	22	det	_	_
22	types	_	NNS	NNS	_	20	dobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	metrics	_	NNS	NNS	_	23	pobj	_	_
25	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
26	currency	_	NN	NN	_	22	dep	_	_
27	,	_	,	,	_	0	erased	_	_
28	length	_	NN	NN	_	26	appos	_	_
29	,	_	,	,	_	0	erased	_	_
30	area	_	NN	NN	_	26	conj	_	_
31	,	_	,	,	_	0	erased	_	_
32	etc	_	FW	FW	_	26	conj	_	_
33	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
34	.	_	.	.	_	0	erased	_	_
#nsubj(has-3, it-1)
#advmod(has-3, also-2)
#root(ROOT-0, has-3)
#det(stock-5, a-4)
#dobj(has-3, stock-5)
#nsubj(converts-20, stock-5)
#prep_tracking(stock-5, app-7)
#vmod(app-7, built-8)
#prep(built-8, in-9)
#advmod(useless-12, also-11)
#dep(in-9, useless-12)
#det(application-18, a-15)
#advmod(useful-17, somewhat-16)
#amod(application-18, useful-17)
#prep_tracking(stock-5, application-18)
#conj_and(app-7, application-18)
#rcmod(stock-5, converts-20)
#det(types-22, all-21)
#dobj(converts-20, types-22)
#prep_of(types-22, metrics-24)
#dep(types-22, currency-26)
#appos(currency-26, length-28)
#conj(currency-26, area-30)
#conj(currency-26, etc-32)
result:
1	the	_	DT	DT	_	2	det	_	_
2	s105	_	NN	NN	_	6	nsubj	_	_
3	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
4	samsung	_	VBG	VBG	_	2	dep	_	_
5	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
6	has	_	VBZ	VBZ	_	0	root	_	_
7	a	_	DT	DT	_	10	det	_	_
8	beautiful	_	JJ	JJ	_	10	amod	_	_
9	big	_	JJ	JJ	_	10	amod	_	_
10	display	_	NN	NN	_	6	dobj	_	_
11	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
12	65,000	_	CD	CD	_	13	num	_	_
13	colors	_	NNS	NNS	_	10	appos	_	_
14	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
15	,	_	,	,	_	0	erased	_	_
16	and	_	CC	CC	_	6	cc	_	_
17	i	_	FW	FW	_	21	nsubj	_	_
18	can	_	MD	MD	_	21	aux	_	_
19	'	_	``	``	_	0	erased	_	_
20	t	_	RB	RB	_	21	advmod	_	_
21	say	_	VB	VB	_	6	conj	_	_
22	much	_	RB	RB	_	21	advmod	_	_
23	about	_	IN	IN	_	21	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	motorolla	_	NN	NN	_	23	pobj	_	_
26	.	_	.	.	_	0	erased	_	_
#det(s105-2, the-1)
#nsubj(has-6, s105-2)
#dep(s105-2, samsung-4)
#root(ROOT-0, has-6)
#det(display-10, a-7)
#amod(display-10, beautiful-8)
#amod(display-10, big-9)
#dobj(has-6, display-10)
#num(colors-13, 65,000-12)
#appos(display-10, colors-13)
#nsubj(say-21, i-17)
#aux(say-21, can-18)
#advmod(say-21, t-20)
#conj_and(has-6, say-21)
#advmod(say-21, much-22)
#det(motorolla-25, the-24)
#prep_about(say-21, motorolla-25)
result:
1	all	_	PDT	PDT	_	3	predet	_	_
2	these	_	DT	DT	_	3	det	_	_
3	phones	_	NNS	NNS	_	4	nsubj	_	_
4	have	_	VBP	VBP	_	0	root	_	_
5	color	_	NN	NN	_	6	nn	_	_
6	screens	_	NNS	NNS	_	4	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	polymorphic	_	JJ	JJ	_	9	amod	_	_
9	tones	_	NNS	NNS	_	6	appos	_	_
10	,	_	,	,	_	0	erased	_	_
11	and	_	CC	CC	_	4	cc	_	_
12	are	_	VBP	VBP	_	14	cop	_	_
13	internet	_	NN	NN	_	14	npadvmod	_	_
14	ready	_	JJ	JJ	_	4	conj	_	_
15	.	_	.	.	_	0	erased	_	_
#predet(phones-3, all-1)
#det(phones-3, these-2)
#nsubj(have-4, phones-3)
#nsubj(ready-14, phones-3)
#root(ROOT-0, have-4)
#nn(screens-6, color-5)
#dobj(have-4, screens-6)
#amod(tones-9, polymorphic-8)
#appos(screens-6, tones-9)
#cop(ready-14, are-12)
#npadvmod(ready-14, internet-13)
#conj_and(have-4, ready-14)
result:
1	in	_	IN	IN	_	7	prep	_	_
2	music	_	NN	NN	_	4	nn	_	_
3	tones	_	NNS	NNS	_	4	nn	_	_
4	department	_	NN	NN	_	1	pobj	_	_
5	the	_	DT	DT	_	6	det	_	_
6	6610	_	CD	CD	_	7	nsubj	_	_
7	has	_	VBZ	VBZ	_	0	root	_	_
8	20	_	CD	CD	_	9	num	_	_
9	chords	_	NNS	NNS	_	7	dobj	_	_
10	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
11	thats	_	NNS	NNS	_	12	nn	_	_
12	number	_	NN	NN	_	7	dep	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	different	_	JJ	JJ	_	15	amod	_	_
15	instruments	_	NNS	NNS	_	13	pobj	_	_
16	which	_	WDT	WDT	_	19	dobj	_	_
17	it	_	PRP	PRP	_	19	nsubj	_	_
18	can	_	MD	MD	_	19	aux	_	_
19	play	_	VB	VB	_	15	rcmod	_	_
20	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
21	i	_	FW	FW	_	12	dep	_	_
22	think	_	VB	VB	_	12	dep	_	_
23	,	_	,	,	_	0	erased	_	_
24	the	_	DT	DT	_	26	det	_	_
25	samsung	_	JJ	JJ	_	26	amod	_	_
26	i	_	FW	FW	_	27	nsubj	_	_
27	think	_	VBP	VBP	_	22	rcmod	_	_
28	have	_	VBP	VBP	_	27	dep	_	_
29	15	_	CD	CD	_	28	dobj	_	_
30	,	_	,	,	_	0	erased	_	_
31	i	_	FW	FW	_	12	prep	_	_
32	donno	_	NN	NN	_	31	pobj	_	_
33	about	_	IN	IN	_	12	prep	_	_
34	the	_	DT	DT	_	36	det	_	_
35	other	_	JJ	JJ	_	36	amod	_	_
36	phones	_	NNS	NNS	_	33	pobj	_	_
37	but	_	CC	CC	_	7	cc	_	_
38	i	_	FW	FW	_	39	nsubj	_	_
39	feel	_	VBP	VBP	_	7	conj	_	_
40	the	_	DT	DT	_	41	det	_	_
41	t610	_	NNS	NNS	_	42	nsubj	_	_
42	has	_	VBZ	VBZ	_	39	ccomp	_	_
43	the	_	DT	DT	_	44	det	_	_
44	best	_	JJS	JJS	_	42	dobj	_	_
45	sounding	_	VBG	VBG	_	44	vmod	_	_
46	ring	_	NN	NN	_	47	nn	_	_
47	tones	_	NNS	NNS	_	45	dobj	_	_
48	.	_	.	.	_	0	erased	_	_
#nn(department-4, music-2)
#nn(department-4, tones-3)
#prep_in(has-7, department-4)
#det(6610-6, the-5)
#nsubj(has-7, 6610-6)
#root(ROOT-0, has-7)
#num(chords-9, 20-8)
#dobj(has-7, chords-9)
#nn(number-12, thats-11)
#dep(has-7, number-12)
#amod(instruments-15, different-14)
#prep_of(number-12, instruments-15)
#dobj(play-19, instruments-15)
#nsubj(play-19, it-17)
#aux(play-19, can-18)
#rcmod(instruments-15, play-19)
#dep(number-12, i-21)
#dep(number-12, think-22)
#det(i-26, the-24)
#amod(i-26, samsung-25)
#nsubj(think-27, i-26)
#rcmod(think-22, think-27)
#dep(think-27, have-28)
#dobj(have-28, 15-29)
#prep(number-12, i-31)
#pobj(i-31, donno-32)
#det(phones-36, the-34)
#amod(phones-36, other-35)
#prep_about(number-12, phones-36)
#nsubj(feel-39, i-38)
#conj_but(has-7, feel-39)
#det(t610-41, the-40)
#nsubj(has-42, t610-41)
#ccomp(feel-39, has-42)
#det(best-44, the-43)
#dobj(has-42, best-44)
#vmod(best-44, sounding-45)
#nn(tones-47, ring-46)
#dobj(sounding-45, tones-47)
result:
1	regarding	_	VBG	VBG	_	9	dep	_	_
2	pc	_	NN	NN	_	3	nn	_	_
3	software	_	NN	NN	_	1	dobj	_	_
4	support	_	NN	NN	_	6	nn	_	_
5	nokia	_	NN	NN	_	6	nn	_	_
6	suite	_	NN	NN	_	9	nsubj	_	_
7	does	_	VBZ	VBZ	_	9	aux	_	_
8	not	_	RB	RB	_	9	neg	_	_
9	work	_	VB	VB	_	0	root	_	_
10	with	_	IN	IN	_	9	prep	_	_
11	some	_	DT	DT	_	12	det	_	_
12	versions	_	NNS	NNS	_	10	pobj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	xp	_	NN	NN	_	13	pobj	_	_
15	as	_	IN	IN	_	17	mark	_	_
16	i	_	FW	FW	_	17	nsubj	_	_
17	tried	_	VBD	VBD	_	9	advcl	_	_
18	to	_	TO	TO	_	19	aux	_	_
19	connect	_	VB	VB	_	17	xcomp	_	_
20	my	_	PRP$	PRP$	_	21	poss	_	_
21	phone	_	NN	NN	_	19	dobj	_	_
22	via	_	IN	IN	_	19	prep	_	_
23	infrared	_	JJ	JJ	_	24	amod	_	_
24	port	_	NN	NN	_	22	pobj	_	_
25	on	_	IN	IN	_	24	prep	_	_
26	my	_	PRP$	PRP$	_	27	poss	_	_
27	laptop	_	NN	NN	_	25	pobj	_	_
28	.	_	.	.	_	0	erased	_	_
#dep(work-9, regarding-1)
#nn(software-3, pc-2)
#dobj(regarding-1, software-3)
#nn(suite-6, support-4)
#nn(suite-6, nokia-5)
#nsubj(work-9, suite-6)
#aux(work-9, does-7)
#neg(work-9, not-8)
#root(ROOT-0, work-9)
#det(versions-12, some-11)
#prep_with(work-9, versions-12)
#prep_of(versions-12, xp-14)
#mark(tried-17, as-15)
#nsubj(tried-17, i-16)
#nsubj(connect-19, i-16)
#advcl(work-9, tried-17)
#aux(connect-19, to-18)
#xcomp(tried-17, connect-19)
#poss(phone-21, my-20)
#dobj(connect-19, phone-21)
#amod(port-24, infrared-23)
#prep_via(connect-19, port-24)
#poss(laptop-27, my-26)
#prep_on(port-24, laptop-27)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	called	_	VBD	VBD	_	0	root	_	_
3	nokia	_	JJ	JJ	_	5	amod	_	_
4	tech	_	NN	NN	_	5	nn	_	_
5	support	_	NN	NN	_	2	dobj	_	_
6	and	_	CC	CC	_	2	cc	_	_
7	they	_	PRP	PRP	_	8	nsubj	_	_
8	blamed	_	VBD	VBD	_	2	conj	_	_
9	microsoft	_	NN	NN	_	8	dobj	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(called-2, i-1)
#root(ROOT-0, called-2)
#amod(support-5, nokia-3)
#nn(support-5, tech-4)
#dobj(called-2, support-5)
#nsubj(blamed-8, they-7)
#conj_and(called-2, blamed-8)
#dobj(blamed-8, microsoft-9)
result:
1	oh	_	UH	UH	_	0	root	_	_
2	well	_	UH	UH	_	1	dep	_	_
3	.	_	.	.	_	0	erased	_	_
4	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, oh-1)
#dep(oh-1, well-2)
result:
1	overall	_	RB	RB	_	6	advmod	_	_
2	this	_	DT	DT	_	6	nsubj	_	_
3	is	_	VBZ	VBZ	_	6	cop	_	_
4	a	_	DT	DT	_	6	det	_	_
5	slightly	_	RB	RB	_	6	advmod	_	_
6	better	_	JJR	JJR	_	0	root	_	_
7	than	_	IN	IN	_	6	prep	_	_
8	average	_	JJ	JJ	_	9	amod	_	_
9	phone	_	NN	NN	_	7	pobj	_	_
10	.	_	.	.	_	0	erased	_	_
#advmod(better-6, overall-1)
#nsubj(better-6, this-2)
#cop(better-6, is-3)
#det(better-6, a-4)
#advmod(better-6, slightly-5)
#root(ROOT-0, better-6)
#amod(phone-9, average-8)
#prep_than(better-6, phone-9)
result:
1	both	_	DT	DT	_	3	preconj	_	_
2	the	_	DT	DT	_	3	det	_	_
3	samsung	_	NN	NN	_	8	nsubj	_	_
4	and	_	CC	CC	_	3	cc	_	_
5	the	_	DT	DT	_	7	det	_	_
6	sony	_	JJ	JJ	_	7	amod	_	_
7	phones	_	NNS	NNS	_	3	conj	_	_
8	offer	_	VBP	VBP	_	0	root	_	_
9	a	_	DT	DT	_	10	det	_	_
10	lot	_	NN	NN	_	11	npadvmod	_	_
11	more	_	JJR	JJR	_	12	amod	_	_
12	features	_	NNS	NNS	_	8	dobj	_	_
13	than	_	IN	IN	_	12	prep	_	_
14	this	_	DT	DT	_	15	det	_	_
15	6610	_	CD	CD	_	13	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#preconj(samsung-3, both-1)
#det(samsung-3, the-2)
#nsubj(offer-8, samsung-3)
#det(phones-7, the-5)
#amod(phones-7, sony-6)
#conj_and(samsung-3, phones-7)
#nsubj(offer-8, phones-7)
#root(ROOT-0, offer-8)
#det(lot-10, a-9)
#npadvmod(more-11, lot-10)
#amod(features-12, more-11)
#dobj(offer-8, features-12)
#det(6610-15, this-14)
#prep_than(features-12, 6610-15)
result:
1	personally	_	RB	RB	_	3	nsubj	_	_
2	i	_	FW	FW	_	1	dep	_	_
3	like	_	VBP	VBP	_	0	root	_	_
4	the	_	DT	DT	_	6	det	_	_
5	samsung	_	JJ	JJ	_	6	amod	_	_
6	phones	_	NNS	NNS	_	7	npadvmod	_	_
7	better	_	RBR	RBR	_	3	advmod	_	_
8	because	_	IN	IN	_	10	mark	_	_
9	i	_	FW	FW	_	10	nsubj	_	_
10	found	_	VBD	VBD	_	7	advcl	_	_
11	myself	_	PRP	PRP	_	12	nsubj	_	_
12	liking	_	VBG	VBG	_	10	dep	_	_
13	the	_	DT	DT	_	15	det	_	_
14	flip	_	JJ	JJ	_	15	amod	_	_
15	phones	_	NNS	NNS	_	12	dobj	_	_
16	so	_	RB	RB	_	17	advmod	_	_
17	much	_	RB	RB	_	18	advmod	_	_
18	more	_	RBR	RBR	_	3	acomp	_	_
19	.	_	.	.	_	0	erased	_	_
#nsubj(like-3, personally-1)
#dep(personally-1, i-2)
#root(ROOT-0, like-3)
#det(phones-6, the-4)
#amod(phones-6, samsung-5)
#npadvmod(better-7, phones-6)
#advmod(like-3, better-7)
#mark(found-10, because-8)
#nsubj(found-10, i-9)
#advcl(better-7, found-10)
#nsubj(liking-12, myself-11)
#dep(found-10, liking-12)
#det(phones-15, the-13)
#amod(phones-15, flip-14)
#dobj(liking-12, phones-15)
#advmod(much-17, so-16)
#advmod(more-18, much-17)
#acomp(like-3, more-18)
result:
1	i	_	FW	FW	_	10	nsubj	_	_
2	think	_	VB	VB	_	4	discourse	_	_
3	there	_	EX	EX	_	4	expl	_	_
4	is	_	VBZ	VBZ	_	1	rcmod	_	_
5	a	_	DT	DT	_	7	det	_	_
6	good	_	JJ	JJ	_	7	amod	_	_
7	chance	_	NN	NN	_	4	nsubj	_	_
8	i	_	FW	FW	_	1	dep	_	_
9	will	_	MD	MD	_	10	aux	_	_
10	try	_	VB	VB	_	0	root	_	_
11	to	_	TO	TO	_	12	aux	_	_
12	get	_	VB	VB	_	10	xcomp	_	_
13	a	_	DT	DT	_	17	det	_	_
14	samsung	_	JJ	JJ	_	17	amod	_	_
15	flip	_	JJ	JJ	_	17	amod	_	_
16	camera	_	NN	NN	_	17	nn	_	_
17	phone	_	NN	NN	_	12	dobj	_	_
18	next	_	JJ	JJ	_	19	amod	_	_
19	year	_	NN	NN	_	12	tmod	_	_
20	.	_	.	.	_	0	erased	_	_
#nsubj(try-10, i-1)
#nsubj(get-12, i-1)
#discourse(is-4, think-2)
#expl(is-4, there-3)
#rcmod(i-1, is-4)
#det(chance-7, a-5)
#amod(chance-7, good-6)
#nsubj(is-4, chance-7)
#dep(i-1, i-8)
#aux(try-10, will-9)
#root(ROOT-0, try-10)
#aux(get-12, to-11)
#xcomp(try-10, get-12)
#det(phone-17, a-13)
#amod(phone-17, samsung-14)
#amod(phone-17, flip-15)
#nn(phone-17, camera-16)
#dobj(get-12, phone-17)
#amod(year-19, next-18)
#tmod(get-12, year-19)
result:
1	if	_	IN	IN	_	5	mark	_	_
2	t-mobile	_	NN	NN	_	5	nsubj	_	_
3	does	_	VBZ	VBZ	_	5	aux	_	_
4	not	_	RB	RB	_	5	neg	_	_
5	offer	_	VB	VB	_	13	advcl	_	_
6	such	_	PDT	PDT	_	8	predet	_	_
7	a	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	5	dobj	_	_
9	most	_	RBS	RBS	_	10	advmod	_	_
10	likely	_	RB	RB	_	5	advmod	_	_
11	i	_	FW	FW	_	13	nsubj	_	_
12	will	_	MD	MD	_	13	aux	_	_
13	get	_	VB	VB	_	0	root	_	_
14	the	_	DT	DT	_	15	det	_	_
15	t610	_	NNS	NNS	_	13	dobj	_	_
16	.	_	.	.	_	0	erased	_	_
#mark(offer-5, if-1)
#nsubj(offer-5, t-mobile-2)
#aux(offer-5, does-3)
#neg(offer-5, not-4)
#advcl(get-13, offer-5)
#predet(phone-8, such-6)
#det(phone-8, a-7)
#dobj(offer-5, phone-8)
#advmod(likely-10, most-9)
#advmod(offer-5, likely-10)
#nsubj(get-13, i-11)
#aux(get-13, will-12)
#root(ROOT-0, get-13)
#det(t610-15, the-14)
#dobj(get-13, t610-15)
result:
1	they	_	PRP	PRP	_	4	nsubj	_	_
2	are	_	VBP	VBP	_	4	cop	_	_
3	all	_	PDT	PDT	_	4	dep	_	_
4	free	_	JJ	JJ	_	0	root	_	_
5	if	_	IN	IN	_	7	mark	_	_
6	you	_	PRP	PRP	_	7	nsubj	_	_
7	get	_	VBP	VBP	_	4	advcl	_	_
8	a	_	DT	DT	_	10	det	_	_
9	new	_	JJ	JJ	_	10	amod	_	_
10	account	_	NN	NN	_	7	dobj	_	_
11	anyway	_	RB	RB	_	7	advmod	_	_
12	,	_	,	,	_	0	erased	_	_
13	but	_	CC	CC	_	7	cc	_	_
14	stick	_	VBP	VBP	_	7	conj	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	t-mobile	_	VB	VB	_	14	xcomp	_	_
17	if	_	IN	IN	_	20	mark	_	_
18	you	_	PRP	PRP	_	20	nsubj	_	_
19	are	_	VBP	VBP	_	20	aux	_	_
20	going	_	VBG	VBG	_	16	advcl	_	_
21	to	_	TO	TO	_	22	aux	_	_
22	use	_	VB	VB	_	20	xcomp	_	_
23	your	_	PRP$	PRP$	_	24	poss	_	_
24	phone	_	NN	NN	_	22	dobj	_	_
25	overseas	_	RB	RB	_	22	advmod	_	_
26	because	_	IN	IN	_	29	mark	_	_
27	t-mobile	_	JJ	JJ	_	29	nsubj	_	_
28	actually	_	RB	RB	_	29	advmod	_	_
29	allows	_	VBZ	VBZ	_	22	advcl	_	_
30	you	_	PRP	PRP	_	29	dobj	_	_
31	to	_	TO	TO	_	32	aux	_	_
32	unlock	_	NN	NN	_	29	xcomp	_	_
33	your	_	PRP$	PRP$	_	35	poss	_	_
34	simm	_	NN	NN	_	35	nn	_	_
35	cards	_	NNS	NNS	_	32	dobj	_	_
36	so	_	RB	RB	_	32	advmod	_	_
37	that	_	IN	IN	_	40	mark	_	_
38	you	_	PRP	PRP	_	40	nsubj	_	_
39	can	_	MD	MD	_	40	aux	_	_
40	buy	_	VB	VB	_	29	ccomp	_	_
41	simm	_	NN	NN	_	42	nn	_	_
42	cards	_	NNS	NNS	_	43	nsubj	_	_
43	cheap	_	JJ	JJ	_	40	xcomp	_	_
44	from	_	IN	IN	_	43	prep	_	_
45	other	_	JJ	JJ	_	46	amod	_	_
46	nations	_	NNS	NNS	_	44	pobj	_	_
47	and	_	CC	CC	_	40	cc	_	_
48	plug	_	VB	VB	_	40	conj	_	_
49	into	_	IN	IN	_	48	prep	_	_
50	your	_	PRP$	PRP$	_	51	poss	_	_
51	phone	_	NN	NN	_	49	pobj	_	_
52	when	_	WRB	WRB	_	55	advmod	_	_
53	you	_	PRP	PRP	_	55	nsubj	_	_
54	are	_	VBP	VBP	_	55	aux	_	_
55	doing	_	VBG	VBG	_	48	advcl	_	_
56	some	_	DT	DT	_	57	det	_	_
57	international	_	JJ	JJ	_	55	dobj	_	_
58	travelling	_	VBG	VBG	_	55	vmod	_	_
59	.	_	.	.	_	0	erased	_	_
#nsubj(free-4, they-1)
#cop(free-4, are-2)
#dep(free-4, all-3)
#root(ROOT-0, free-4)
#mark(get-7, if-5)
#nsubj(get-7, you-6)
#nsubj(stick-14, you-6)
#nsubj(t-mobile-16, you-6)
#advcl(free-4, get-7)
#det(account-10, a-8)
#amod(account-10, new-9)
#dobj(get-7, account-10)
#advmod(get-7, anyway-11)
#advcl(free-4, stick-14)
#conj_but(get-7, stick-14)
#aux(t-mobile-16, to-15)
#xcomp(stick-14, t-mobile-16)
#mark(going-20, if-17)
#nsubj(going-20, you-18)
#nsubj(use-22, you-18)
#aux(going-20, are-19)
#advcl(t-mobile-16, going-20)
#aux(use-22, to-21)
#xcomp(going-20, use-22)
#poss(phone-24, your-23)
#dobj(use-22, phone-24)
#advmod(use-22, overseas-25)
#mark(allows-29, because-26)
#nsubj(allows-29, t-mobile-27)
#advmod(allows-29, actually-28)
#advcl(use-22, allows-29)
#dobj(allows-29, you-30)
#nsubj(unlock-32, you-30)
#aux(unlock-32, to-31)
#xcomp(allows-29, unlock-32)
#poss(cards-35, your-33)
#nn(cards-35, simm-34)
#dobj(unlock-32, cards-35)
#advmod(unlock-32, so-36)
#mark(buy-40, that-37)
#nsubj(buy-40, you-38)
#nsubj(plug-48, you-38)
#aux(buy-40, can-39)
#ccomp(allows-29, buy-40)
#nn(cards-42, simm-41)
#nsubj(cheap-43, cards-42)
#xcomp(buy-40, cheap-43)
#amod(nations-46, other-45)
#prep_from(cheap-43, nations-46)
#ccomp(allows-29, plug-48)
#conj_and(buy-40, plug-48)
#poss(phone-51, your-50)
#prep_into(plug-48, phone-51)
#advmod(doing-55, when-52)
#nsubj(doing-55, you-53)
#aux(doing-55, are-54)
#advcl(plug-48, doing-55)
#det(international-57, some-56)
#dobj(doing-55, international-57)
#vmod(doing-55, travelling-58)
result:
1	this	_	DT	DT	_	2	nsubj	_	_
2	is	_	VBZ	VBZ	_	0	root	_	_
3	the	_	DT	DT	_	5	det	_	_
4	best	_	JJS	JJS	_	5	amod	_	_
5	phone	_	NN	NN	_	8	nsubj	_	_
6	i	_	FW	FW	_	5	dep	_	_
7	have	_	VBP	VBP	_	8	aux	_	_
8	seen	_	VBN	VBN	_	2	ccomp	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(is-2, this-1)
#root(ROOT-0, is-2)
#det(phone-5, the-3)
#amod(phone-5, best-4)
#nsubj(seen-8, phone-5)
#dep(phone-5, i-6)
#aux(seen-8, have-7)
#ccomp(is-2, seen-8)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	bought	_	VBD	VBD	_	0	root	_	_
3	2	_	CD	CD	_	2	dobj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	these	_	DT	DT	_	6	det	_	_
6	phones	_	NNS	NNS	_	4	pobj	_	_
7	2	_	CD	CD	_	8	num	_	_
8	months	_	NNS	NNS	_	9	npadvmod	_	_
9	ago	_	RB	RB	_	2	advmod	_	_
10	for	_	IN	IN	_	2	prep	_	_
11	myself	_	PRP	PRP	_	10	pobj	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	my	_	PRP$	PRP$	_	14	poss	_	_
14	girlfriend	_	NN	NN	_	11	conj	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(bought-2, i-1)
#root(ROOT-0, bought-2)
#dobj(bought-2, 2-3)
#det(phones-6, these-5)
#prep_of(2-3, phones-6)
#num(months-8, 2-7)
#npadvmod(ago-9, months-8)
#advmod(bought-2, ago-9)
#prep_for(bought-2, myself-11)
#poss(girlfriend-14, my-13)
#prep_for(bought-2, girlfriend-14)
#conj_and(myself-11, girlfriend-14)
result:
1	we	_	PRP	PRP	_	2	nsubj	_	_
2	got	_	VBD	VBD	_	0	root	_	_
3	a	_	DT	DT	_	4	det	_	_
4	familyplan	_	NN	NN	_	2	dobj	_	_
5	from	_	IN	IN	_	2	prep	_	_
6	t-mobile	_	JJ	JJ	_	10	amod	_	_
7	which	_	WDT	WDT	_	8	nsubj	_	_
8	saves	_	VBZ	VBZ	_	6	ccomp	_	_
9	us	_	PRP	PRP	_	8	dobj	_	_
10	tons	_	NNS	NNS	_	5	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#nsubj(got-2, we-1)
#root(ROOT-0, got-2)
#det(familyplan-4, a-3)
#dobj(got-2, familyplan-4)
#amod(tons-10, t-mobile-6)
#nsubj(saves-8, which-7)
#ccomp(t-mobile-6, saves-8)
#dobj(saves-8, us-9)
#prep_from(got-2, tons-10)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phones	_	NNS	NNS	_	4	nsubj	_	_
3	are	_	VBP	VBP	_	4	cop	_	_
4	awesome	_	JJ	JJ	_	0	root	_	_
5	.	_	.	.	_	0	erased	_	_
#det(phones-2, the-1)
#nsubj(awesome-4, phones-2)
#cop(awesome-4, are-3)
#root(ROOT-0, awesome-4)
result:
1	we	_	PRP	PRP	_	4	nsubj	_	_
2	hardly	_	RB	RB	_	4	advmod	_	_
3	ever	_	RB	RB	_	4	advmod	_	_
4	have	_	VBP	VBP	_	0	root	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	charge	_	VB	VB	_	4	xcomp	_	_
7	them	_	PRP	PRP	_	6	dobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	get	_	VB	VB	_	6	dep	_	_
10	great	_	JJ	JJ	_	11	amod	_	_
11	reception	_	NN	NN	_	9	dobj	_	_
12	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
13	live	_	VB	VB	_	9	parataxis	_	_
14	in	_	IN	IN	_	13	prep	_	_
15	chicago	_	NNP	NNP	_	14	pobj	_	_
16	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
17	,	_	,	,	_	0	erased	_	_
18	and	_	CC	CC	_	4	cc	_	_
19	the	_	DT	DT	_	20	det	_	_
20	customization	_	NNS	NNS	_	24	nsubj	_	_
21	and	_	CC	CC	_	20	cc	_	_
22	applications	_	NNS	NNS	_	20	conj	_	_
23	are	_	VBP	VBP	_	24	cop	_	_
24	awesome	_	JJ	JJ	_	4	conj	_	_
25	.	_	.	.	_	0	erased	_	_
#nsubj(have-4, we-1)
#nsubj(charge-6, we-1)
#advmod(have-4, hardly-2)
#advmod(have-4, ever-3)
#root(ROOT-0, have-4)
#aux(charge-6, to-5)
#xcomp(have-4, charge-6)
#dobj(charge-6, them-7)
#dep(charge-6, get-9)
#amod(reception-11, great-10)
#dobj(get-9, reception-11)
#parataxis(get-9, live-13)
#prep_in(live-13, chicago-15)
#det(customization-20, the-19)
#nsubj(awesome-24, customization-20)
#conj_and(customization-20, applications-22)
#nsubj(awesome-24, applications-22)
#cop(awesome-24, are-23)
#conj_and(have-4, awesome-24)
result:
1	here	_	RB	RB	_	4	nsubj	_	_
2	's	_	VBZ	VBZ	_	4	cop	_	_
3	a	_	DT	DT	_	4	det	_	_
4	hint	_	NN	NN	_	0	root	_	_
5	:	_	:	:	_	0	erased	_	_
6	go	_	VB	VB	_	4	dep	_	_
7	to	_	TO	TO	_	6	prep	_	_
8	nokia.com	_	NN	NN	_	7	pobj	_	_
9	and	_	CC	CC	_	6	cc	_	_
10	get	_	VB	VB	_	6	conj	_	_
11	their	_	PRP$	PRP$	_	13	poss	_	_
12	pc	_	NN	NN	_	13	nn	_	_
13	suite	_	NN	NN	_	10	dobj	_	_
14	and	_	CC	CC	_	13	cc	_	_
15	a	_	DT	DT	_	17	det	_	_
16	connection	_	NN	NN	_	17	nn	_	_
17	cable	_	NN	NN	_	13	conj	_	_
18	if	_	IN	IN	_	20	mark	_	_
19	you	_	PRP	PRP	_	20	nsubj	_	_
20	dont	_	VBP	VBP	_	10	advcl	_	_
21	have	_	VBP	VBP	_	20	dep	_	_
22	irda	_	NN	NN	_	21	dobj	_	_
23	or	_	CC	CC	_	22	cc	_	_
24	bluetooth	_	NN	NN	_	22	conj	_	_
25	.	_	.	.	_	0	erased	_	_
#nsubj(hint-4, here-1)
#cop(hint-4, 's-2)
#det(hint-4, a-3)
#root(ROOT-0, hint-4)
#dep(hint-4, go-6)
#prep_to(go-6, nokia.com-8)
#dep(hint-4, get-10)
#conj_and(go-6, get-10)
#poss(suite-13, their-11)
#nn(suite-13, pc-12)
#dobj(get-10, suite-13)
#det(cable-17, a-15)
#nn(cable-17, connection-16)
#dobj(get-10, cable-17)
#conj_and(suite-13, cable-17)
#mark(dont-20, if-18)
#nsubj(dont-20, you-19)
#advcl(get-10, dont-20)
#dep(dont-20, have-21)
#dobj(have-21, irda-22)
#dobj(have-21, bluetooth-24)
#conj_or(irda-22, bluetooth-24)
result:
1	you	_	PRP	PRP	_	3	nsubj	_	_
2	can	_	MD	MD	_	3	aux	_	_
3	do	_	VB	VB	_	0	root	_	_
4	*	_	SYM	SYM	_	3	dobj	_	_
5	so	_	IN	IN	_	6	mark	_	_
6	*	_	SYM	SYM	_	4	dep	_	_
7	much	_	RB	RB	_	8	advmod	_	_
8	more	_	RBR	RBR	_	23	advmod	_	_
9	with	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	pc	_	NN	NN	_	9	pobj	_	_
12	suite	_	FW	FW	_	11	prep	_	_
13	,	_	,	,	_	0	erased	_	_
14	i.e.	_	FW	FW	_	22	prep	_	_
15	free	_	JJ	JJ	_	16	amod	_	_
16	ringtones	_	NNS	NNS	_	14	pobj	_	_
17	from	_	IN	IN	_	14	prep	_	_
18	midi	_	NN	NN	_	19	nn	_	_
19	files	_	NNS	NNS	_	17	pobj	_	_
20	,	_	,	,	_	0	erased	_	_
21	free	_	JJ	JJ	_	22	amod	_	_
22	graphics	_	NNS	NNS	_	12	pobj	_	_
23	from	_	IN	IN	_	6	prep	_	_
24	any	_	DT	DT	_	25	det	_	_
25	picture	_	NN	NN	_	23	pobj	_	_
26	on	_	IN	IN	_	25	prep	_	_
27	your	_	PRP$	PRP$	_	28	poss	_	_
28	computer	_	NN	NN	_	26	pobj	_	_
29	,	_	,	,	_	0	erased	_	_
30	and	_	CC	CC	_	6	cc	_	_
31	if	_	IN	IN	_	33	mark	_	_
32	you	_	PRP	PRP	_	33	nsubj	_	_
33	know	_	VBP	VBP	_	6	conj	_	_
34	how	_	WRB	WRB	_	41	advmod	_	_
35	to	_	TO	TO	_	34	prep	_	_
36	program	_	NN	NN	_	37	nn	_	_
37	jme	_	NN	NN	_	35	pobj	_	_
38	you	_	PRP	PRP	_	41	nsubj	_	_
39	can	_	MD	MD	_	41	aux	_	_
40	even	_	RB	RB	_	41	advmod	_	_
41	make	_	VB	VB	_	33	ccomp	_	_
42	your	_	PRP$	PRP$	_	44	poss	_	_
43	own	_	JJ	JJ	_	44	amod	_	_
44	apps	_	NNS	NNS	_	41	dobj	_	_
45	/	_	:	:	_	44	punct	_	_
46	games	_	NNS	NNS	_	44	dep	_	_
47	.	_	.	.	_	0	erased	_	_
#nsubj(do-3, you-1)
#aux(do-3, can-2)
#root(ROOT-0, do-3)
#dobj(do-3, *-4)
#mark(*-6, so-5)
#dep(*-4, *-6)
#advmod(more-8, much-7)
#advmod(*-6, more-8)
#det(pc-11, the-10)
#prep_with(more-8, pc-11)
#prep(pc-11, suite-12)
#prep(graphics-22, i.e.-14)
#amod(ringtones-16, free-15)
#pobj(i.e.-14, ringtones-16)
#nn(files-19, midi-18)
#prep_from(i.e.-14, files-19)
#amod(graphics-22, free-21)
#pobj(suite-12, graphics-22)
#det(picture-25, any-24)
#prep_from(*-6, picture-25)
#poss(computer-28, your-27)
#prep_on(picture-25, computer-28)
#mark(know-33, if-31)
#nsubj(know-33, you-32)
#dep(*-4, know-33)
#conj_and(*-6, know-33)
#advmod(make-41, how-34)
#nn(jme-37, program-36)
#prep_to(how-34, jme-37)
#nsubj(make-41, you-38)
#aux(make-41, can-39)
#advmod(make-41, even-40)
#ccomp(know-33, make-41)
#poss(apps-44, your-42)
#amod(apps-44, own-43)
#dobj(make-41, apps-44)
#punct(apps-44, /-45)
#dep(apps-44, games-46)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	5	poss	_	_
3	's	_	POS	POS	_	2	possessive	_	_
4	sound	_	JJ	JJ	_	5	amod	_	_
5	quality	_	NN	NN	_	7	nsubj	_	_
6	is	_	VBZ	VBZ	_	7	cop	_	_
7	great	_	JJ	JJ	_	0	root	_	_
8	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
9	turn	_	VB	VB	_	7	parataxis	_	_
10	up	_	RP	RP	_	9	prt	_	_
11	the	_	DT	DT	_	12	det	_	_
12	volume	_	NN	NN	_	9	dobj	_	_
13	if	_	IN	IN	_	24	mark	_	_
14	its	_	PRP$	PRP$	_	18	poss	_	_
15	too	_	RB	RB	_	16	advmod	_	_
16	quiet	_	JJ	JJ	_	18	amod	_	_
17	,	_	,	,	_	0	erased	_	_
18	people	_	NNS	NNS	_	24	nsubj	_	_
19	,	_	,	,	_	0	erased	_	_
20	this	_	DT	DT	_	21	det	_	_
21	thing	_	NN	NN	_	24	nsubj	_	_
22	will	_	MD	MD	_	24	aux	_	_
23	get	_	VB	VB	_	24	dep	_	_
24	loud	_	JJ	JJ	_	12	rcmod	_	_
25	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
26	i	_	FW	FW	_	45	nsubj	_	_
27	dont	_	NN	NN	_	28	nsubj	_	_
28	have	_	VBP	VBP	_	26	rcmod	_	_
29	any	_	DT	DT	_	30	det	_	_
30	complaints	_	NNS	NNS	_	28	dobj	_	_
31	about	_	IN	IN	_	28	prep	_	_
32	this	_	DT	DT	_	33	det	_	_
33	phone	_	NN	NN	_	31	pobj	_	_
34	and	_	CC	CC	_	33	cc	_	_
35	the	_	DT	DT	_	37	det	_	_
36	only	_	JJ	JJ	_	37	amod	_	_
37	thing	_	NN	NN	_	33	conj	_	_
38	that	_	IN	IN	_	40	mark	_	_
39	i	_	FW	FW	_	40	nsubj	_	_
40	miss	_	VBP	VBP	_	28	ccomp	_	_
41	from	_	IN	IN	_	40	prep	_	_
42	my	_	PRP$	PRP$	_	43	poss	_	_
43	8290	_	CD	CD	_	41	pobj	_	_
44	is	_	VBZ	VBZ	_	45	cop	_	_
45	voice	_	NN	NN	_	7	ccomp	_	_
46	dialing	_	VBG	VBG	_	45	amod	_	_
47	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#poss(quality-5, phone-2)
#amod(quality-5, sound-4)
#nsubj(great-7, quality-5)
#cop(great-7, is-6)
#root(ROOT-0, great-7)
#parataxis(great-7, turn-9)
#prt(turn-9, up-10)
#det(volume-12, the-11)
#dobj(turn-9, volume-12)
#mark(loud-24, if-13)
#poss(people-18, its-14)
#advmod(quiet-16, too-15)
#amod(people-18, quiet-16)
#nsubj(loud-24, people-18)
#det(thing-21, this-20)
#nsubj(loud-24, thing-21)
#aux(loud-24, will-22)
#dep(loud-24, get-23)
#rcmod(volume-12, loud-24)
#mark(miss-40, i-26)
#nsubj(voice-45, i-26)
#nsubj(have-28, dont-27)
#rcmod(i-26, have-28)
#det(complaints-30, any-29)
#dobj(have-28, complaints-30)
#det(phone-33, this-32)
#prep_about(have-28, phone-33)
#det(thing-37, the-35)
#amod(thing-37, only-36)
#prep_about(have-28, thing-37)
#conj_and(phone-33, thing-37)
#nsubj(miss-40, i-39)
#ccomp(have-28, miss-40)
#poss(8290-43, my-42)
#prep_from(miss-40, 8290-43)
#cop(voice-45, is-44)
#ccomp(great-7, voice-45)
#amod(voice-45, dialing-46)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	bought	_	VBD	VBD	_	0	root	_	_
3	this	_	DT	DT	_	5	det	_	_
4	slick	_	JJ	JJ	_	5	amod	_	_
5	phone	_	NN	NN	_	10	nsubj	_	_
6	and	_	CC	CC	_	5	cc	_	_
7	i	_	FW	FW	_	5	conj	_	_
8	am	_	VBP	VBP	_	10	cop	_	_
9	very	_	RB	RB	_	10	advmod	_	_
10	happy	_	JJ	JJ	_	2	ccomp	_	_
11	with	_	IN	IN	_	10	prep	_	_
12	it	_	PRP	PRP	_	11	pobj	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(bought-2, i-1)
#root(ROOT-0, bought-2)
#det(phone-5, this-3)
#amod(phone-5, slick-4)
#nsubj(happy-10, phone-5)
#conj_and(phone-5, i-7)
#nsubj(happy-10, i-7)
#cop(happy-10, am-8)
#advmod(happy-10, very-9)
#ccomp(bought-2, happy-10)
#prep_with(happy-10, it-12)
result:
1	nice	_	JJ	JJ	_	3	dep	_	_
2	and	_	CC	CC	_	3	cc	_	_
3	small	_	JJ	JJ	_	18	amod	_	_
4	and	_	CC	CC	_	3	cc	_	_
5	excellent	_	JJ	JJ	_	3	conj	_	_
6	when	_	WRB	WRB	_	8	advmod	_	_
7	it	_	PRP	PRP	_	8	nsubj	_	_
8	comes	_	VBZ	VBZ	_	3	ccomp	_	_
9	to	_	TO	TO	_	8	prep	_	_
10	downloading	_	VBG	VBG	_	9	pcomp	_	_
11	games	_	NNS	NNS	_	10	dobj	_	_
12	,	_	,	,	_	0	erased	_	_
13	graphics	_	NNS	NNS	_	11	conj	_	_
14	and	_	CC	CC	_	11	cc	_	_
15	ringtones	_	NNS	NNS	_	11	conj	_	_
16	from	_	IN	IN	_	10	prep	_	_
17	www.crazycellphone.com	_	NN	NN	_	16	pobj	_	_
18	i	_	FW	FW	_	25	nsubj	_	_
19	just	_	RB	RB	_	20	advmod	_	_
20	purchased	_	VBN	VBN	_	18	amod	_	_
21	this	_	DT	DT	_	22	det	_	_
22	phone	_	NN	NN	_	18	dep	_	_
23	and	_	CC	CC	_	18	cc	_	_
24	i	_	FW	FW	_	18	conj	_	_
25	think	_	VBP	VBP	_	0	root	_	_
26	this	_	DT	DT	_	30	nsubj	_	_
27	is	_	VBZ	VBZ	_	30	cop	_	_
28	the	_	DT	DT	_	30	det	_	_
29	coolest	_	JJ	JJ	_	30	amod	_	_
30	phone	_	NN	NN	_	25	ccomp	_	_
31	i	_	FW	FW	_	33	nsubj	_	_
32	ever	_	RB	RB	_	33	advmod	_	_
33	had	_	VBD	VBD	_	30	rcmod	_	_
34	.	_	.	.	_	0	erased	_	_
#dep(small-3, nice-1)
#amod(i-18, small-3)
#conj_and(small-3, excellent-5)
#amod(i-18, excellent-5)
#advmod(comes-8, when-6)
#nsubj(comes-8, it-7)
#ccomp(small-3, comes-8)
#prepc_to(comes-8, downloading-10)
#dobj(downloading-10, games-11)
#dobj(downloading-10, graphics-13)
#conj_and(games-11, graphics-13)
#dobj(downloading-10, ringtones-15)
#conj_and(games-11, ringtones-15)
#prep_from(downloading-10, www.crazycellphone.com-17)
#nsubj(think-25, i-18)
#advmod(purchased-20, just-19)
#amod(i-18, purchased-20)
#det(phone-22, this-21)
#dep(i-18, phone-22)
#conj_and(i-18, i-24)
#nsubj(think-25, i-24)
#root(ROOT-0, think-25)
#nsubj(phone-30, this-26)
#cop(phone-30, is-27)
#det(phone-30, the-28)
#amod(phone-30, coolest-29)
#ccomp(think-25, phone-30)
#nsubj(had-33, i-31)
#advmod(had-33, ever-32)
#rcmod(phone-30, had-33)
result:
1	the	_	DT	DT	_	2	det	_	_
2	features	_	NNS	NNS	_	5	nsubj	_	_
3	are	_	VBP	VBP	_	5	cop	_	_
4	really	_	RB	RB	_	5	advmod	_	_
5	cool	_	JJ	JJ	_	0	root	_	_
6	like	_	IN	IN	_	5	prep	_	_
7	the	_	DT	DT	_	8	det	_	_
8	radio	_	NN	NN	_	6	pobj	_	_
9	.	_	.	.	_	0	erased	_	_
#det(features-2, the-1)
#nsubj(cool-5, features-2)
#cop(cool-5, are-3)
#advmod(cool-5, really-4)
#root(ROOT-0, cool-5)
#det(radio-8, the-7)
#prep_like(cool-5, radio-8)
result:
1	the	_	DT	DT	_	3	det	_	_
2	first	_	JJ	JJ	_	3	amod	_	_
3	night	_	NN	NN	_	5	tmod	_	_
4	i	_	FW	FW	_	5	nsubj	_	_
5	got	_	VBD	VBD	_	0	root	_	_
6	this	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	5	dobj	_	_
8	i	_	FW	FW	_	9	nsubj	_	_
9	put	_	VBD	VBD	_	5	dep	_	_
10	it	_	PRP	PRP	_	16	nsubj	_	_
11	next	_	JJ	JJ	_	16	dep	_	_
12	to	_	TO	TO	_	11	prep	_	_
13	me	_	PRP	PRP	_	12	pobj	_	_
14	when	_	WRB	WRB	_	16	advmod	_	_
15	i	_	FW	FW	_	16	nsubj	_	_
16	went	_	VBD	VBD	_	9	xcomp	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	bed	_	NN	NN	_	16	xcomp	_	_
19	just	_	RB	RB	_	18	advmod	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	listen	_	VB	VB	_	18	xcomp	_	_
22	to	_	TO	TO	_	21	prep	_	_
23	my	_	PRP$	PRP$	_	26	poss	_	_
24	favorite	_	JJ	JJ	_	26	amod	_	_
25	music	_	NN	NN	_	26	nn	_	_
26	station	_	NN	NN	_	22	pobj	_	_
27	and	_	CC	CC	_	26	cc	_	_
28	the	_	DT	DT	_	29	det	_	_
29	handset	_	NN	NN	_	26	conj	_	_
30	itself	_	PRP	PRP	_	31	nsubj	_	_
31	doesnt	_	VB	VB	_	21	ccomp	_	_
32	weight	_	NN	NN	_	33	nn	_	_
33	anything	_	NN	NN	_	31	iobj	_	_
34	its	_	PRP$	PRP$	_	36	poss	_	_
35	too	_	RB	RB	_	36	amod	_	_
36	light	_	NN	NN	_	31	dobj	_	_
37	and	_	CC	CC	_	31	cc	_	_
38	feel	_	VB	VB	_	31	conj	_	_
39	so	_	RB	RB	_	40	advmod	_	_
40	comfy	_	RB	RB	_	38	advmod	_	_
41	with	_	IN	IN	_	38	prep	_	_
42	it	_	PRP	PRP	_	41	pobj	_	_
43	.	_	.	.	_	0	erased	_	_
#det(night-3, the-1)
#amod(night-3, first-2)
#tmod(got-5, night-3)
#nsubj(got-5, i-4)
#root(ROOT-0, got-5)
#det(phone-7, this-6)
#dobj(got-5, phone-7)
#nsubj(put-9, i-8)
#dep(got-5, put-9)
#nsubj(went-16, it-10)
#nsubj(bed-18, it-10)
#nsubj(listen-21, it-10)
#prep_next_to(went-16, me-13)
#advmod(went-16, when-14)
#nsubj(went-16, i-15)
#nsubj(bed-18, i-15)
#nsubj(listen-21, i-15)
#xcomp(put-9, went-16)
#aux(bed-18, to-17)
#xcomp(went-16, bed-18)
#advmod(bed-18, just-19)
#aux(listen-21, to-20)
#xcomp(bed-18, listen-21)
#poss(station-26, my-23)
#amod(station-26, favorite-24)
#nn(station-26, music-25)
#prep_to(listen-21, station-26)
#det(handset-29, the-28)
#prep_to(listen-21, handset-29)
#conj_and(station-26, handset-29)
#nsubj(doesnt-31, itself-30)
#nsubj(feel-38, itself-30)
#ccomp(listen-21, doesnt-31)
#nn(anything-33, weight-32)
#iobj(doesnt-31, anything-33)
#poss(light-36, its-34)
#amod(light-36, too-35)
#dobj(doesnt-31, light-36)
#ccomp(listen-21, feel-38)
#conj_and(doesnt-31, feel-38)
#advmod(comfy-40, so-39)
#advmod(feel-38, comfy-40)
#prep_with(feel-38, it-42)
result:
1	technology	_	NN	NN	_	5	nsubj	_	_
2	wise	_	JJ	JJ	_	1	amod	_	_
3	,	_	,	,	_	0	erased	_	_
4	i	_	FW	FW	_	1	appos	_	_
5	think	_	VBP	VBP	_	0	root	_	_
6	this	_	DT	DT	_	8	nsubj	_	_
7	is	_	VBZ	VBZ	_	8	cop	_	_
8	awesome	_	JJ	JJ	_	5	dep	_	_
9	plus	_	CC	CC	_	8	cc	_	_
10	the	_	DT	DT	_	11	det	_	_
11	speaker	_	NN	NN	_	12	nsubj	_	_
12	makes	_	VBZ	VBZ	_	8	conj	_	_
13	it	_	PRP	PRP	_	15	nsubj	_	_
14	even	_	RB	RB	_	15	advmod	_	_
15	great	_	JJ	JJ	_	12	xcomp	_	_
16	!	_	.	.	_	0	erased	_	_
17	!	_	.	.	_	0	erased	_	_
18	!	_	.	.	_	0	erased	_	_
19	!	_	.	.	_	0	erased	_	_
#nsubj(think-5, technology-1)
#amod(technology-1, wise-2)
#appos(technology-1, i-4)
#root(ROOT-0, think-5)
#nsubj(awesome-8, this-6)
#cop(awesome-8, is-7)
#dep(think-5, awesome-8)
#det(speaker-11, the-10)
#nsubj(makes-12, speaker-11)
#dep(think-5, makes-12)
#conj_plus(awesome-8, makes-12)
#nsubj(great-15, it-13)
#advmod(great-15, even-14)
#xcomp(makes-12, great-15)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	love	_	NN	NN	_	0	root	_	_
3	this	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	2	dep	_	_
5	!	_	.	.	_	0	erased	_	_
6	!	_	.	.	_	0	erased	_	_
7	!	_	.	.	_	0	erased	_	_
#nsubj(love-2, i-1)
#root(ROOT-0, love-2)
#det(phone-4, this-3)
#dep(love-2, phone-4)
result:
1	why	_	WRB	WRB	_	5	advmod	_	_
2	i	_	FW	FW	_	5	nsubj	_	_
3	do	_	VBP	VBP	_	5	aux	_	_
4	n't	_	RB	RB	_	5	neg	_	_
5	can	_	MD	MD	_	0	root	_	_
6	this	_	DT	DT	_	7	det	_	_
7	product	_	NN	NN	_	5	dep	_	_
8	without	_	IN	IN	_	7	prep	_	_
9	a	_	DT	DT	_	10	det	_	_
10	plan	_	NN	NN	_	8	pobj	_	_
11	?	_	.	.	_	0	erased	_	_
#advmod(can-5, why-1)
#nsubj(can-5, i-2)
#aux(can-5, do-3)
#neg(can-5, n't-4)
#root(ROOT-0, can-5)
#det(product-7, this-6)
#dep(can-5, product-7)
#det(plan-10, a-9)
#prep_without(product-7, plan-10)
result:
1	i	_	FW	FW	_	8	nsubj	_	_
2	'm	_	VBP	VBP	_	3	cop	_	_
3	live	_	JJ	JJ	_	8	parataxis	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	brazil	_	NN	NN	_	4	pobj	_	_
6	and	_	CC	CC	_	5	cc	_	_
7	i	_	FW	FW	_	5	conj	_	_
8	need	_	VBP	VBP	_	0	root	_	_
9	very	_	RB	RB	_	8	advmod	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	buy	_	VB	VB	_	8	xcomp	_	_
12	this	_	DT	DT	_	13	det	_	_
13	product	_	NN	NN	_	11	dobj	_	_
14	without	_	IN	IN	_	11	prep	_	_
15	a	_	DT	DT	_	16	det	_	_
16	plan	_	NN	NN	_	14	pobj	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	use	_	VB	VB	_	16	vmod	_	_
19	in	_	IN	IN	_	18	advmod	_	_
20	here	_	RB	RB	_	19	advmod	_	_
21	in	_	IN	IN	_	18	prep	_	_
22	other	_	JJ	JJ	_	23	amod	_	_
23	operators	_	NNS	NNS	_	21	pobj	_	_
24	.	_	.	.	_	0	erased	_	_
#nsubj(need-8, i-1)
#nsubj(buy-11, i-1)
#cop(live-3, 'm-2)
#parataxis(need-8, live-3)
#prep_in(live-3, brazil-5)
#prep_in(live-3, i-7)
#conj_and(brazil-5, i-7)
#root(ROOT-0, need-8)
#advmod(need-8, very-9)
#aux(buy-11, to-10)
#xcomp(need-8, buy-11)
#det(product-13, this-12)
#dobj(buy-11, product-13)
#det(plan-16, a-15)
#prep_without(buy-11, plan-16)
#aux(use-18, to-17)
#vmod(plan-16, use-18)
#advmod(use-18, in-19)
#advmod(in-19, here-20)
#amod(operators-23, other-22)
#prep_in(use-18, operators-23)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	'm	_	VBP	VBP	_	3	nsubj	_	_
3	pay	_	VBP	VBP	_	0	root	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	auto-debit	_	NN	NN	_	4	pobj	_	_
6	in	_	IN	IN	_	5	prep	_	_
7	my	_	PRP$	PRP$	_	8	poss	_	_
8	account	_	NN	NN	_	6	pobj	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(pay-3, i-1)
#nsubj(pay-3, 'm-2)
#root(ROOT-0, pay-3)
#prep_in(pay-3, auto-debit-5)
#poss(account-8, my-7)
#prep_in(auto-debit-5, account-8)
result:
1	please	_	VB	VB	_	18	ccomp	_	_
2	,	_	,	,	_	0	erased	_	_
3	if	_	IN	IN	_	5	mark	_	_
4	anyone	_	NN	NN	_	5	dep	_	_
5	want	_	VBP	VBP	_	18	advcl	_	_
6	sell	_	VB	VB	_	5	xcomp	_	_
7	to	_	TO	TO	_	6	prep	_	_
8	me	_	PRP	PRP	_	7	pobj	_	_
9	this	_	DT	DT	_	11	det	_	_
10	cell	_	NN	NN	_	11	nn	_	_
11	phone	_	NN	NN	_	18	nsubj	_	_
12	in	_	IN	IN	_	11	prep	_	_
13	my	_	PRP$	PRP$	_	14	poss	_	_
14	conditions	_	NNS	NNS	_	12	pobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	i	_	FW	FW	_	14	appos	_	_
17	'm	_	VBP	VBP	_	18	aux	_	_
18	wait	_	VB	VB	_	0	root	_	_
19	very	_	RB	RB	_	20	advmod	_	_
20	happy	_	JJ	JJ	_	18	acomp	_	_
21	.	_	.	.	_	0	erased	_	_
#ccomp(wait-18, please-1)
#mark(want-5, if-3)
#dep(want-5, anyone-4)
#advcl(wait-18, want-5)
#xcomp(want-5, sell-6)
#prep_to(sell-6, me-8)
#det(phone-11, this-9)
#nn(phone-11, cell-10)
#nsubj(wait-18, phone-11)
#poss(conditions-14, my-13)
#prep_in(phone-11, conditions-14)
#appos(conditions-14, i-16)
#aux(wait-18, 'm-17)
#root(ROOT-0, wait-18)
#advmod(happy-20, very-19)
#acomp(wait-18, happy-20)
result:
1	thanks	_	NNS	NNS	_	0	root	_	_
2	!	_	.	.	_	0	erased	_	_
#root(ROOT-0, thanks-1)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	thought	_	VBD	VBD	_	0	root	_	_
3	this	_	DT	DT	_	7	nsubj	_	_
4	was	_	VBD	VBD	_	7	cop	_	_
5	the	_	DT	DT	_	7	det	_	_
6	ultimate	_	JJ	JJ	_	7	amod	_	_
7	phone	_	NN	NN	_	2	ccomp	_	_
8	when	_	WRB	WRB	_	10	advmod	_	_
9	it	_	PRP	PRP	_	10	nsubj	_	_
10	comes	_	VBZ	VBZ	_	7	advcl	_	_
11	to	_	TO	TO	_	10	prep	_	_
12	basic	_	JJ	JJ	_	13	amod	_	_
13	features	_	NNS	NNS	_	11	pobj	_	_
14	,	_	,	,	_	0	erased	_	_
15	but	_	CC	CC	_	2	cc	_	_
16	i	_	FW	FW	_	18	nsubjpass	_	_
17	was	_	VBD	VBD	_	18	auxpass	_	_
18	dissapointed	_	VBN	VBN	_	2	conj	_	_
19	when	_	WRB	WRB	_	21	advmod	_	_
20	i	_	FW	FW	_	21	nsubj	_	_
21	saw	_	VBD	VBD	_	18	advcl	_	_
22	that	_	IN	IN	_	27	mark	_	_
23	it	_	PRP	PRP	_	27	nsubj	_	_
24	was	_	VBD	VBD	_	27	cop	_	_
25	only	_	RB	RB	_	27	advmod	_	_
26	a	_	DT	DT	_	27	det	_	_
27	gsm	_	NN	NN	_	21	ccomp	_	_
28	comaptible	_	JJ	JJ	_	29	amod	_	_
29	phone	_	NN	NN	_	27	dep	_	_
30	.	_	.	.	_	0	erased	_	_
#nsubj(thought-2, i-1)
#root(ROOT-0, thought-2)
#nsubj(phone-7, this-3)
#cop(phone-7, was-4)
#det(phone-7, the-5)
#amod(phone-7, ultimate-6)
#ccomp(thought-2, phone-7)
#advmod(comes-10, when-8)
#nsubj(comes-10, it-9)
#advcl(phone-7, comes-10)
#amod(features-13, basic-12)
#prep_to(comes-10, features-13)
#nsubjpass(dissapointed-18, i-16)
#auxpass(dissapointed-18, was-17)
#conj_but(thought-2, dissapointed-18)
#advmod(saw-21, when-19)
#nsubj(saw-21, i-20)
#advcl(dissapointed-18, saw-21)
#mark(gsm-27, that-22)
#nsubj(gsm-27, it-23)
#cop(gsm-27, was-24)
#advmod(gsm-27, only-25)
#det(gsm-27, a-26)
#ccomp(saw-21, gsm-27)
#amod(phone-29, comaptible-28)
#dep(gsm-27, phone-29)
result:
1	as	_	IN	IN	_	3	prep	_	_
2	i	_	FW	FW	_	1	pobj	_	_
3	travel	_	VBP	VBP	_	0	root	_	_
4	quite	_	PDT	PDT	_	6	predet	_	_
5	a	_	DT	DT	_	6	det	_	_
6	lot	_	NN	NN	_	3	nsubj	_	_
7	,	_	,	,	_	0	erased	_	_
8	i	_	FW	FW	_	10	nsubj	_	_
9	'd	_	MD	MD	_	10	aux	_	_
10	want	_	VB	VB	_	6	rcmod	_	_
11	something	_	NN	NN	_	10	dobj	_	_
12	with	_	IN	IN	_	10	prep	_	_
13	gsm	_	NN	NN	_	12	pobj	_	_
14	as	_	RB	RB	_	15	advmod	_	_
15	well	_	RB	RB	_	10	advmod	_	_
16	as	_	IN	IN	_	15	prep	_	_
17	cdma	_	NN	NN	_	16	pobj	_	_
18	tri-band	_	JJ	JJ	_	16	advmod	_	_
19	.	_	.	.	_	0	erased	_	_
#prep_as(travel-3, i-2)
#root(ROOT-0, travel-3)
#predet(lot-6, quite-4)
#det(lot-6, a-5)
#nsubj(travel-3, lot-6)
#nsubj(want-10, i-8)
#aux(want-10, 'd-9)
#rcmod(lot-6, want-10)
#dobj(want-10, something-11)
#prep_with(want-10, gsm-13)
#advmod(well-15, as-14)
#mwe(well-15, as-14)
#advmod(want-10, well-15)
#prep_as(well-15, cdma-17)
#advmod(well-15, tri-band-18)
result:
1	for	_	IN	IN	_	8	prep	_	_
2	a	_	DT	DT	_	4	det	_	_
3	specific	_	JJ	JJ	_	4	amod	_	_
4	location	_	NN	NN	_	1	pobj	_	_
5	,	_	,	,	_	0	erased	_	_
6	i	_	FW	FW	_	8	nsubj	_	_
7	still	_	RB	RB	_	8	advmod	_	_
8	think	_	VBP	VBP	_	0	root	_	_
9	its	_	PRP$	PRP$	_	12	poss	_	_
10	a	_	DT	DT	_	11	det	_	_
11	great	_	JJ	JJ	_	12	amod	_	_
12	phone	_	NN	NN	_	8	dobj	_	_
13	.	_	.	.	_	0	erased	_	_
#det(location-4, a-2)
#amod(location-4, specific-3)
#prep_for(think-8, location-4)
#nsubj(think-8, i-6)
#advmod(think-8, still-7)
#root(ROOT-0, think-8)
#poss(phone-12, its-9)
#det(great-11, a-10)
#amod(phone-12, great-11)
#dobj(think-8, phone-12)
result:
1	i	_	FW	FW	_	14	nsubj	_	_
2	think	_	VB	VB	_	5	advmod	_	_
3	that	_	IN	IN	_	5	mark	_	_
4	it	_	PRP	PRP	_	5	nsubj	_	_
5	is	_	VBZ	VBZ	_	1	dep	_	_
6	a	_	DT	DT	_	8	nsubj	_	_
7	were	_	VBD	VBD	_	8	cop	_	_
8	good	_	JJ	JJ	_	5	ccomp	_	_
9	mobile	_	JJ	JJ	_	10	amod	_	_
10	phone	_	NN	NN	_	8	dep	_	_
11	and	_	CC	CC	_	1	cc	_	_
12	i	_	FW	FW	_	1	conj	_	_
13	may	_	MD	MD	_	14	aux	_	_
14	buy	_	VB	VB	_	0	root	_	_
15	it	_	PRP	PRP	_	14	dobj	_	_
16	.	_	.	.	_	0	erased	_	_
#nsubj(buy-14, i-1)
#advmod(is-5, think-2)
#mark(is-5, that-3)
#nsubj(is-5, it-4)
#dep(i-1, is-5)
#nsubj(good-8, a-6)
#cop(good-8, were-7)
#ccomp(is-5, good-8)
#amod(phone-10, mobile-9)
#dep(good-8, phone-10)
#conj_and(i-1, i-12)
#nsubj(buy-14, i-12)
#aux(buy-14, may-13)
#root(ROOT-0, buy-14)
#dobj(buy-14, it-15)
result:
1	this	_	DT	DT	_	7	nsubj	_	_
2	really	_	RB	RB	_	7	advmod	_	_
3	is	_	VBZ	VBZ	_	7	cop	_	_
4	a	_	DT	DT	_	7	det	_	_
5	great	_	JJ	JJ	_	7	amod	_	_
6	little	_	JJ	JJ	_	7	amod	_	_
7	phone	_	NN	NN	_	0	root	_	_
8	;	_	:	:	_	0	erased	_	_
9	its	_	PRP$	PRP$	_	12	poss	_	_
10	got	_	VBN	VBN	_	12	amod	_	_
11	nice	_	JJ	JJ	_	12	amod	_	_
12	features	_	NNS	NNS	_	7	parataxis	_	_
13	,	_	,	,	_	0	erased	_	_
14	a	_	DT	DT	_	16	det	_	_
15	beatiful	_	JJ	JJ	_	16	amod	_	_
16	screen	_	NN	NN	_	12	conj	_	_
17	,	_	,	,	_	0	erased	_	_
18	great	_	JJ	JJ	_	19	amod	_	_
19	ergonomics	_	NNS	NNS	_	12	conj	_	_
20	,	_	,	,	_	0	erased	_	_
21	and	_	CC	CC	_	12	cc	_	_
22	its	_	PRP$	PRP$	_	23	poss	_	_
23	tiny	_	JJ	JJ	_	12	conj	_	_
24	!	_	.	.	_	0	erased	_	_
#nsubj(phone-7, this-1)
#advmod(phone-7, really-2)
#cop(phone-7, is-3)
#det(phone-7, a-4)
#amod(phone-7, great-5)
#amod(phone-7, little-6)
#root(ROOT-0, phone-7)
#poss(features-12, its-9)
#amod(features-12, got-10)
#amod(features-12, nice-11)
#parataxis(phone-7, features-12)
#det(screen-16, a-14)
#amod(screen-16, beatiful-15)
#parataxis(phone-7, screen-16)
#conj_and(features-12, screen-16)
#amod(ergonomics-19, great-18)
#parataxis(phone-7, ergonomics-19)
#conj_and(features-12, ergonomics-19)
#poss(tiny-23, its-22)
#parataxis(phone-7, tiny-23)
#conj_and(features-12, tiny-23)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	waited	_	VBD	VBD	_	0	root	_	_
3	a	_	DT	DT	_	5	det	_	_
4	few	_	JJ	JJ	_	5	amod	_	_
5	years	_	NNS	NNS	_	2	dobj	_	_
6	between	_	IN	IN	_	5	prep	_	_
7	phones	_	NNS	NNS	_	6	pobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	mostly	_	RB	RB	_	20	advmod	_	_
10	because	_	IN	IN	_	20	mark	_	_
11	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
12	like	_	JJ	JJ	_	14	amod	_	_
13	most	_	JJS	JJS	_	12	dep	_	_
14	i	_	FW	FW	_	20	nsubj	_	_
15	think	_	NN	NN	_	14	dep	_	_
16	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
17	i	_	FW	FW	_	14	prep	_	_
18	didnt	_	NN	NN	_	17	pobj	_	_
19	really	_	RB	RB	_	20	advmod	_	_
20	need	_	VBP	VBP	_	2	advcl	_	_
21	one	_	CD	CD	_	20	dobj	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(waited-2, i-1)
#root(ROOT-0, waited-2)
#det(years-5, a-3)
#amod(years-5, few-4)
#dobj(waited-2, years-5)
#prep_between(years-5, phones-7)
#advmod(need-20, mostly-9)
#mark(need-20, because-10)
#amod(i-14, like-12)
#dep(like-12, most-13)
#nsubj(need-20, i-14)
#dep(i-14, think-15)
#prep(i-14, i-17)
#pobj(i-17, didnt-18)
#advmod(need-20, really-19)
#advcl(waited-2, need-20)
#dobj(need-20, one-21)
result:
1	this	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	3	nsubj	_	_
3	won	_	VBD	VBD	_	0	root	_	_
4	me	_	PRP	PRP	_	3	dobj	_	_
5	over	_	RP	RP	_	3	prt	_	_
6	,	_	,	,	_	0	erased	_	_
7	and	_	CC	CC	_	3	cc	_	_
8	a	_	DT	DT	_	10	det	_	_
9	big	_	JJ	JJ	_	10	amod	_	_
10	seller	_	NN	NN	_	13	nsubj	_	_
11	was	_	VBD	VBD	_	13	cop	_	_
12	the	_	DT	DT	_	13	det	_	_
13	size	_	NN	NN	_	3	conj	_	_
14	;	_	:	:	_	0	erased	_	_
15	it	_	PRP	PRP	_	16	nsubj	_	_
16	fits	_	VBZ	VBZ	_	3	parataxis	_	_
17	nicely	_	RB	RB	_	16	advmod	_	_
18	into	_	IN	IN	_	16	prep	_	_
19	any	_	DT	DT	_	20	det	_	_
20	pocket	_	NN	NN	_	18	pobj	_	_
21	without	_	IN	IN	_	16	prep	_	_
22	falling	_	VBG	VBG	_	21	pcomp	_	_
23	out	_	RP	RP	_	22	prt	_	_
24	.	_	.	.	_	0	erased	_	_
#det(phone-2, this-1)
#nsubj(won-3, phone-2)
#root(ROOT-0, won-3)
#dobj(won-3, me-4)
#prt(won-3, over-5)
#det(seller-10, a-8)
#amod(seller-10, big-9)
#nsubj(size-13, seller-10)
#cop(size-13, was-11)
#det(size-13, the-12)
#conj_and(won-3, size-13)
#nsubj(fits-16, it-15)
#parataxis(won-3, fits-16)
#advmod(fits-16, nicely-17)
#det(pocket-20, any-19)
#prep_into(fits-16, pocket-20)
#prepc_without(fits-16, falling-22)
#prt(falling-22, out-23)
result:
1	the	_	DT	DT	_	2	det	_	_
2	downside	_	NN	NN	_	9	nsubj	_	_
3	though	_	RB	RB	_	9	nsubj	_	_
4	,	_	,	,	_	0	erased	_	_
5	may	_	MD	MD	_	9	aux	_	_
6	be	_	VB	VB	_	9	cop	_	_
7	a	_	DT	DT	_	9	det	_	_
8	big	_	JJ	JJ	_	9	amod	_	_
9	one	_	CD	CD	_	0	root	_	_
10	for	_	IN	IN	_	9	prep	_	_
11	you	_	PRP	PRP	_	10	pobj	_	_
12	.	_	.	.	_	0	erased	_	_
#det(downside-2, the-1)
#nsubj(one-9, downside-2)
#nsubj(one-9, though-3)
#aux(one-9, may-5)
#cop(one-9, be-6)
#det(one-9, a-7)
#amod(one-9, big-8)
#root(ROOT-0, one-9)
#prep_for(one-9, you-11)
result:
1	its	_	PRP$	PRP$	_	2	poss	_	_
2	quiet	_	NN	NN	_	0	root	_	_
3	.	_	.	.	_	0	erased	_	_
#poss(quiet-2, its-1)
#root(ROOT-0, quiet-2)
result:
1	really	_	RB	RB	_	0	root	_	_
2	quiet	_	JJ	JJ	_	1	dep	_	_
3	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, really-1)
#dep(really-1, quiet-2)
result:
1	grandma	_	NN	NN	_	0	root	_	_
2	in	_	IN	IN	_	1	prep	_	_
3	church	_	NN	NN	_	2	pobj	_	_
4	quiet	_	JJ	JJ	_	1	amod	_	_
5	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, grandma-1)
#prep_in(grandma-1, church-3)
#amod(grandma-1, quiet-4)
result:
1	i	_	FW	FW	_	4	nsubjpass	_	_
2	've	_	VBP	VBP	_	4	aux	_	_
3	gotten	_	VBN	VBN	_	4	auxpass	_	_
4	used	_	VBN	VBN	_	0	root	_	_
5	to	_	TO	TO	_	4	prep	_	_
6	it	_	PRP	PRP	_	5	pobj	_	_
7	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
8	holding	_	VBG	VBG	_	4	dep	_	_
9	it	_	PRP	PRP	_	8	dobj	_	_
10	in	_	IN	IN	_	8	prep	_	_
11	just	_	RB	RB	_	14	advmod	_	_
12	the	_	DT	DT	_	14	det	_	_
13	right	_	JJ	JJ	_	14	amod	_	_
14	realation	_	NN	NN	_	10	pobj	_	_
15	to	_	TO	TO	_	14	prep	_	_
16	the	_	DT	DT	_	17	det	_	_
17	ear	_	NN	NN	_	15	pobj	_	_
18	,	_	,	,	_	0	erased	_	_
19	ducking	_	VBG	VBG	_	8	dep	_	_
20	into	_	IN	IN	_	19	prep	_	_
21	quieter	_	NN	NN	_	22	nn	_	_
22	places	_	NNS	NNS	_	20	pobj	_	_
23	in	_	IN	IN	_	22	prep	_	_
24	bars	_	NNS	NNS	_	23	pobj	_	_
25	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
26	but	_	CC	CC	_	4	cc	_	_
27	when	_	WRB	WRB	_	29	advmod	_	_
28	others	_	NNS	NNS	_	29	nsubj	_	_
29	borrow	_	VB	VB	_	33	advcl	_	_
30	it	_	PRP	PRP	_	29	dobj	_	_
31	they	_	PRP	PRP	_	33	nsubjpass	_	_
32	're	_	VBP	VBP	_	33	auxpass	_	_
33	shocked	_	VBN	VBN	_	4	conj	_	_
34	i	_	FW	FW	_	36	nsubj	_	_
35	can	_	MD	MD	_	36	aux	_	_
36	use	_	VB	VB	_	33	ccomp	_	_
37	it	_	PRP	PRP	_	36	dobj	_	_
38	.	_	.	.	_	0	erased	_	_
#nsubjpass(used-4, i-1)
#aux(used-4, 've-2)
#auxpass(used-4, gotten-3)
#root(ROOT-0, used-4)
#prep_to(used-4, it-6)
#dep(used-4, holding-8)
#dobj(holding-8, it-9)
#advmod(realation-14, just-11)
#det(realation-14, the-12)
#amod(realation-14, right-13)
#prep_in(holding-8, realation-14)
#det(ear-17, the-16)
#prep_to(realation-14, ear-17)
#dep(holding-8, ducking-19)
#nn(places-22, quieter-21)
#prep_into(ducking-19, places-22)
#prep_in(places-22, bars-24)
#advmod(borrow-29, when-27)
#nsubj(borrow-29, others-28)
#advcl(shocked-33, borrow-29)
#dobj(borrow-29, it-30)
#nsubjpass(shocked-33, they-31)
#auxpass(shocked-33, 're-32)
#conj_but(used-4, shocked-33)
#nsubj(use-36, i-34)
#aux(use-36, can-35)
#ccomp(shocked-33, use-36)
#dobj(use-36, it-37)
result:
1	so	_	RB	RB	_	4	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	i	_	FW	FW	_	4	nsubj	_	_
4	recomend	_	VBD	VBD	_	0	root	_	_
5	it	_	PRP	PRP	_	4	dobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	but	_	CC	CC	_	9	cc	_	_
8	not	_	RB	RB	_	9	dep	_	_
9	for	_	IN	IN	_	4	dep	_	_
10	those	_	DT	DT	_	9	pobj	_	_
11	that	_	WDT	WDT	_	12	nsubj	_	_
12	have	_	VBP	VBP	_	10	rcmod	_	_
13	any	_	DT	DT	_	15	det	_	_
14	hearing	_	NN	NN	_	15	nn	_	_
15	troubles	_	NNS	NNS	_	12	dobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	or	_	CC	CC	_	4	cc	_	_
18	for	_	IN	IN	_	4	conj	_	_
19	those	_	DT	DT	_	18	pobj	_	_
20	that	_	WDT	WDT	_	21	nsubj	_	_
21	like	_	VBP	VBP	_	19	rcmod	_	_
22	to	_	TO	TO	_	23	aux	_	_
23	talk	_	VB	VB	_	21	xcomp	_	_
24	a	_	DT	DT	_	25	det	_	_
25	lot	_	NN	NN	_	23	dobj	_	_
26	in	_	IN	IN	_	4	prep	_	_
27	crowded	_	JJ	JJ	_	29	amod	_	_
28	public	_	JJ	JJ	_	29	amod	_	_
29	places	_	NNS	NNS	_	26	pobj	_	_
30	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
31	which	_	WDT	WDT	_	33	nsubj	_	_
32	is	_	VBZ	VBZ	_	33	cop	_	_
33	annoying	_	JJ	JJ	_	29	rcmod	_	_
34	,	_	,	,	_	0	erased	_	_
35	by	_	IN	IN	_	29	prep	_	_
36	the	_	DT	DT	_	37	det	_	_
37	way	_	NN	NN	_	35	pobj	_	_
38	.	_	.	.	_	0	erased	_	_
39	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
#advmod(recomend-4, so-1)
#nsubj(recomend-4, i-3)
#root(ROOT-0, recomend-4)
#dobj(recomend-4, it-5)
#cc(for-9, but-7)
#dep(for-9, not-8)
#dep(recomend-4, for-9)
#pobj(for-9, those-10)
#nsubj(have-12, those-10)
#rcmod(those-10, have-12)
#det(troubles-15, any-13)
#nn(troubles-15, hearing-14)
#dobj(have-12, troubles-15)
#conj_or(recomend-4, for-18)
#pobj(for-18, those-19)
#nsubj(like-21, those-19)
#nsubj(talk-23, those-19)
#rcmod(those-19, like-21)
#aux(talk-23, to-22)
#xcomp(like-21, talk-23)
#det(lot-25, a-24)
#dobj(talk-23, lot-25)
#amod(places-29, crowded-27)
#amod(places-29, public-28)
#prep_in(recomend-4, places-29)
#nsubj(annoying-33, places-29)
#cop(annoying-33, is-32)
#rcmod(places-29, annoying-33)
#det(way-37, the-36)
#prep_by(places-29, way-37)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	bought	_	VBD	VBD	_	0	root	_	_
3	this	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	2	dobj	_	_
5	when	_	WRB	WRB	_	8	advmod	_	_
6	it	_	PRP	PRP	_	8	nsubj	_	_
7	first	_	RB	RB	_	8	advmod	_	_
8	came	_	VBD	VBD	_	2	advcl	_	_
9	out	_	RP	RP	_	8	prt	_	_
10	in	_	IN	IN	_	8	prep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	summer	_	NN	NN	_	10	pobj	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(bought-2, i-1)
#root(ROOT-0, bought-2)
#det(phone-4, this-3)
#dobj(bought-2, phone-4)
#advmod(came-8, when-5)
#nsubj(came-8, it-6)
#advmod(came-8, first-7)
#advcl(bought-2, came-8)
#prt(came-8, out-9)
#det(summer-12, the-11)
#prep_in(came-8, summer-12)
result:
1	prior	_	RB	RB	_	12	advmod	_	_
2	to	_	TO	TO	_	1	prep	_	_
3	my	_	PRP$	PRP$	_	4	poss	_	_
4	switch	_	NN	NN	_	2	pobj	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	t-mobile	_	VB	VB	_	4	vmod	_	_
7	,	_	,	,	_	0	erased	_	_
8	sprint	_	NN	NN	_	12	nsubj	_	_
9	was	_	VBD	VBD	_	12	cop	_	_
10	my	_	PRP$	PRP$	_	12	poss	_	_
11	service	_	NN	NN	_	12	nn	_	_
12	provider	_	NN	NN	_	0	root	_	_
13	.	_	.	.	_	0	erased	_	_
#poss(switch-4, my-3)
#prep_prior_to(provider-12, switch-4)
#aux(t-mobile-6, to-5)
#vmod(switch-4, t-mobile-6)
#nsubj(provider-12, sprint-8)
#cop(provider-12, was-9)
#poss(provider-12, my-10)
#nn(provider-12, service-11)
#root(ROOT-0, provider-12)
result:
1	to	_	TO	TO	_	2	aux	_	_
2	say	_	VB	VB	_	9	advcl	_	_
3	the	_	DT	DT	_	4	det	_	_
4	least	_	JJS	JJS	_	2	dobj	_	_
5	,	_	,	,	_	0	erased	_	_
6	i	_	FW	FW	_	9	nsubjpass	_	_
7	was	_	VBD	VBD	_	9	auxpass	_	_
8	horribly	_	RB	RB	_	9	advmod	_	_
9	dissatisified	_	VBN	VBN	_	0	root	_	_
10	with	_	IN	IN	_	9	prep	_	_
11	my	_	PRP$	PRP$	_	12	poss	_	_
12	service	_	NN	NN	_	10	pobj	_	_
13	with	_	IN	IN	_	9	prep	_	_
14	sprint	_	NN	NN	_	13	pobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	which	_	WDT	WDT	_	17	nsubj	_	_
17	was	_	VBD	VBD	_	14	rcmod	_	_
18	why	_	WRB	WRB	_	23	advmod	_	_
19	t-mobile	_	NN	NN	_	23	nsubj	_	_
20	was	_	VBD	VBD	_	23	cop	_	_
21	so	_	RB	RB	_	23	advmod	_	_
22	fantastically	_	RB	RB	_	23	advmod	_	_
23	refreshing	_	JJ	JJ	_	17	advcl	_	_
24	.	_	.	.	_	0	erased	_	_
#aux(say-2, to-1)
#advcl(dissatisified-9, say-2)
#det(least-4, the-3)
#dobj(say-2, least-4)
#nsubjpass(dissatisified-9, i-6)
#auxpass(dissatisified-9, was-7)
#advmod(dissatisified-9, horribly-8)
#root(ROOT-0, dissatisified-9)
#poss(service-12, my-11)
#prep_with(dissatisified-9, service-12)
#prep_with(dissatisified-9, sprint-14)
#nsubj(was-17, sprint-14)
#rcmod(sprint-14, was-17)
#advmod(refreshing-23, why-18)
#nsubj(refreshing-23, t-mobile-19)
#cop(refreshing-23, was-20)
#advmod(refreshing-23, so-21)
#advmod(refreshing-23, fantastically-22)
#advcl(was-17, refreshing-23)
result:
1	my	_	PRP$	PRP$	_	4	poss	_	_
2	past	_	JJ	JJ	_	4	amod	_	_
3	two	_	CD	CD	_	2	dep	_	_
4	phones	_	NNS	NNS	_	8	nsubj	_	_
5	were	_	VBD	VBD	_	8	cop	_	_
6	all	_	DT	DT	_	8	det	_	_
7	flip	_	JJ	JJ	_	8	amod	_	_
8	phones	_	NNS	NNS	_	0	root	_	_
9	,	_	,	,	_	0	erased	_	_
10	and	_	CC	CC	_	8	cc	_	_
11	i	_	FW	FW	_	13	nsubj	_	_
12	was	_	VBD	VBD	_	13	aux	_	_
13	beginning	_	VBG	VBG	_	8	conj	_	_
14	to	_	TO	TO	_	13	prep	_	_
15	tire	_	NN	NN	_	14	pobj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	them	_	PRP	PRP	_	16	pobj	_	_
18	.	_	.	.	_	0	erased	_	_
#poss(phones-4, my-1)
#amod(phones-4, past-2)
#dep(past-2, two-3)
#nsubj(phones-8, phones-4)
#cop(phones-8, were-5)
#det(phones-8, all-6)
#amod(phones-8, flip-7)
#root(ROOT-0, phones-8)
#nsubj(beginning-13, i-11)
#aux(beginning-13, was-12)
#conj_and(phones-8, beginning-13)
#prep_to(beginning-13, tire-15)
#prep_of(tire-15, them-17)
result:
1	nokia	_	NN	NN	_	5	nsubj	_	_
2	was	_	VBD	VBD	_	5	cop	_	_
3	my	_	PRP$	PRP$	_	5	poss	_	_
4	first	_	JJ	JJ	_	5	amod	_	_
5	nonflip	_	NN	NN	_	0	root	_	_
6	phone	_	NN	NN	_	11	nsubj	_	_
7	,	_	,	,	_	0	erased	_	_
8	and	_	CC	CC	_	6	cc	_	_
9	i	_	FW	FW	_	6	conj	_	_
10	'm	_	VBP	VBP	_	11	cop	_	_
11	glad	_	JJ	JJ	_	5	dep	_	_
12	i	_	FW	FW	_	13	nsubj	_	_
13	decided	_	VBD	VBD	_	11	ccomp	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	go	_	VB	VB	_	13	xcomp	_	_
16	with	_	IN	IN	_	15	prep	_	_
17	them	_	PRP	PRP	_	16	pobj	_	_
18	.	_	.	.	_	0	erased	_	_
#nsubj(nonflip-5, nokia-1)
#cop(nonflip-5, was-2)
#poss(nonflip-5, my-3)
#amod(nonflip-5, first-4)
#root(ROOT-0, nonflip-5)
#nsubj(glad-11, phone-6)
#conj_and(phone-6, i-9)
#nsubj(glad-11, i-9)
#cop(glad-11, 'm-10)
#dep(nonflip-5, glad-11)
#nsubj(decided-13, i-12)
#nsubj(go-15, i-12)
#ccomp(glad-11, decided-13)
#aux(go-15, to-14)
#xcomp(decided-13, go-15)
#prep_with(go-15, them-17)
result:
1	first	_	JJ	JJ	_	8	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	all	_	DT	DT	_	2	pobj	_	_
4	,	_	,	,	_	0	erased	_	_
5	my	_	PRP$	PRP$	_	6	poss	_	_
6	calls	_	NNS	NNS	_	8	nsubj	_	_
7	were	_	VBD	VBD	_	8	cop	_	_
8	loud	_	JJ	JJ	_	0	root	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	clear	_	JJ	JJ	_	8	conj	_	_
11	,	_	,	,	_	0	erased	_	_
12	unlike	_	IN	IN	_	8	prep	_	_
13	with	_	IN	IN	_	12	pcomp	_	_
14	sprint	_	NN	NN	_	13	pobj	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(loud-8, first-1)
#nsubj(clear-10, first-1)
#prep_of(first-1, all-3)
#poss(calls-6, my-5)
#nsubj(loud-8, calls-6)
#cop(loud-8, were-7)
#root(ROOT-0, loud-8)
#conj_and(loud-8, clear-10)
#prep(loud-8, unlike-12)
#pcomp(unlike-12, with-13)
#pobj(with-13, sprint-14)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	could	_	MD	MD	_	3	aux	_	_
3	make	_	VB	VB	_	0	root	_	_
4	phone	_	NN	NN	_	5	nn	_	_
5	calls	_	NNS	NNS	_	3	dobj	_	_
6	from	_	IN	IN	_	5	prep	_	_
7	locations	_	NNS	NNS	_	6	pobj	_	_
8	i	_	FW	FW	_	5	dep	_	_
9	previously	_	RB	RB	_	10	advmod	_	_
10	could	_	MD	MD	_	3	dep	_	_
11	not	_	RB	RB	_	10	neg	_	_
12	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
13	like	_	IN	IN	_	10	dep	_	_
14	my	_	PRP$	PRP$	_	15	poss	_	_
15	apartment	_	NN	NN	_	13	pobj	_	_
16	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
17	.	_	.	.	_	0	erased	_	_
#nsubj(make-3, i-1)
#aux(make-3, could-2)
#root(ROOT-0, make-3)
#nn(calls-5, phone-4)
#dobj(make-3, calls-5)
#iobj(make-3, calls-5)
#prep_from(calls-5, locations-7)
#dep(calls-5, i-8)
#advmod(could-10, previously-9)
#dep(make-3, could-10)
#neg(could-10, not-11)
#dep(could-10, like-13)
#poss(apartment-15, my-14)
#pobj(like-13, apartment-15)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	small	_	JJ	JJ	_	0	root	_	_
5	,	_	,	,	_	0	erased	_	_
6	light	_	JJ	JJ	_	4	conj	_	_
7	,	_	,	,	_	0	erased	_	_
8	and	_	CC	CC	_	4	cc	_	_
9	very	_	RB	RB	_	10	advmod	_	_
10	attractive	_	JJ	JJ	_	4	conj	_	_
11	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(small-4, phone-2)
#nsubj(light-6, phone-2)
#nsubj(attractive-10, phone-2)
#cop(small-4, is-3)
#root(ROOT-0, small-4)
#conj_and(small-4, light-6)
#advmod(attractive-10, very-9)
#conj_and(small-4, attractive-10)
result:
1	the	_	DT	DT	_	3	det	_	_
2	battery	_	NN	NN	_	3	nn	_	_
3	life	_	NN	NN	_	5	nsubj	_	_
4	is	_	VBZ	VBZ	_	5	cop	_	_
5	amazing	_	JJ	JJ	_	0	root	_	_
6	.	_	.	.	_	0	erased	_	_
#det(life-3, the-1)
#nn(life-3, battery-2)
#nsubj(amazing-5, life-3)
#cop(amazing-5, is-4)
#root(ROOT-0, amazing-5)
result:
1	the	_	DT	DT	_	3	det	_	_
2	color	_	NN	NN	_	3	nn	_	_
3	screen	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	a	_	DT	DT	_	6	det	_	_
6	plus	_	NN	NN	_	0	root	_	_
7	,	_	,	,	_	0	erased	_	_
8	as	_	IN	IN	_	12	nsubj	_	_
9	are	_	VBP	VBP	_	12	cop	_	_
10	the	_	DT	DT	_	12	det	_	_
11	polyphonic	_	JJ	JJ	_	12	amod	_	_
12	ringtones	_	NNS	NNS	_	6	rcmod	_	_
13	.	_	.	.	_	0	erased	_	_
#det(screen-3, the-1)
#nn(screen-3, color-2)
#nsubj(plus-6, screen-3)
#cop(plus-6, is-4)
#det(plus-6, a-5)
#root(ROOT-0, plus-6)
#nsubj(ringtones-12, as-8)
#cop(ringtones-12, are-9)
#det(ringtones-12, the-10)
#amod(ringtones-12, polyphonic-11)
#rcmod(plus-6, ringtones-12)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	'm	_	VBP	VBP	_	4	cop	_	_
3	not	_	RB	RB	_	4	quantmod	_	_
4	one	_	CD	CD	_	0	root	_	_
5	who	_	WP	WP	_	6	nsubj	_	_
6	uses	_	VBZ	VBZ	_	4	rcmod	_	_
7	web	_	NN	NN	_	8	dep	_	_
8	browsing	_	VBG	VBG	_	6	acomp	_	_
9	,	_	,	,	_	0	erased	_	_
10	so	_	RB	RB	_	8	advmod	_	_
11	this	_	DT	DT	_	12	det	_	_
12	phone	_	NN	NN	_	14	dep	_	_
13	easily	_	RB	RB	_	14	advmod	_	_
14	met	_	VBN	VBN	_	8	dep	_	_
15	and	_	CC	CC	_	4	cc	_	_
16	surpassed	_	VBD	VBD	_	4	conj	_	_
17	my	_	PRP$	PRP$	_	18	poss	_	_
18	needs	_	NNS	NNS	_	16	dobj	_	_
19	.	_	.	.	_	0	erased	_	_
#nsubj(one-4, i-1)
#nsubj(surpassed-16, i-1)
#cop(one-4, 'm-2)
#quantmod(one-4, not-3)
#root(ROOT-0, one-4)
#nsubj(uses-6, one-4)
#rcmod(one-4, uses-6)
#dep(browsing-8, web-7)
#acomp(uses-6, browsing-8)
#advmod(browsing-8, so-10)
#det(phone-12, this-11)
#dep(met-14, phone-12)
#advmod(met-14, easily-13)
#dep(browsing-8, met-14)
#conj_and(one-4, surpassed-16)
#nsubj(uses-6, surpassed-16)
#poss(needs-18, my-17)
#dobj(surpassed-16, needs-18)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	highly	_	RB	RB	_	3	advmod	_	_
3	recommend	_	VBP	VBP	_	0	root	_	_
4	this	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	to	_	TO	TO	_	3	prep	_	_
7	anyone	_	NN	NN	_	6	pobj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(recommend-3, i-1)
#advmod(recommend-3, highly-2)
#root(ROOT-0, recommend-3)
#det(phone-5, this-4)
#dobj(recommend-3, phone-5)
#prep_to(recommend-3, anyone-7)
result:
1	i	_	FW	FW	_	6	nsubj	_	_
2	've	_	VBP	VBP	_	6	parataxis	_	_
3	yet	_	RB	RB	_	2	advmod	_	_
4	to	_	TO	TO	_	5	aux	_	_
5	be	_	VB	VB	_	2	xcomp	_	_
6	dissappointed	_	VBZ	VBZ	_	0	root	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(dissappointed-6, i-1)
#parataxis(dissappointed-6, 've-2)
#advmod('ve-2, yet-3)
#aux(be-5, to-4)
#xcomp('ve-2, be-5)
#root(ROOT-0, dissappointed-6)
result:
1	nokia	_	NN	NN	_	14	nsubj	_	_
2	6610	_	CD	CD	_	1	num	_	_
3	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
4	sound	_	JJ	JJ	_	5	amod	_	_
5	quality	_	NN	NN	_	1	appos	_	_
6	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
7	the	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	10	nsubj	_	_
9	is	_	VBZ	VBZ	_	10	cop	_	_
10	great	_	JJ	JJ	_	1	rcmod	_	_
11	with	_	IN	IN	_	10	prep	_	_
12	very	_	RB	RB	_	13	advmod	_	_
13	cool	_	JJ	JJ	_	11	pobj	_	_
14	features	_	VBZ	VBZ	_	0	root	_	_
15	&#38;	_	CD	CD	_	16	num	_	_
16	options	_	NNS	NNS	_	14	dobj	_	_
17	,	_	,	,	_	0	erased	_	_
18	but	_	CC	CC	_	14	cc	_	_
19	comparing	_	VBG	VBG	_	27	prep	_	_
20	to	_	TO	TO	_	19	pcomp	_	_
21	my	_	PRP$	PRP$	_	24	poss	_	_
22	older	_	JJR	JJR	_	24	amod	_	_
23	motorola	_	NN	NN	_	24	nn	_	_
24	phone	_	NN	NN	_	20	pobj	_	_
25	,	_	,	,	_	0	erased	_	_
26	it	_	PRP	PRP	_	27	nsubj	_	_
27	gets	_	VBZ	VBZ	_	14	conj	_	_
28	a	_	DT	DT	_	30	det	_	_
29	failing	_	VBG	VBG	_	30	amod	_	_
30	grade	_	NN	NN	_	27	dobj	_	_
31	in	_	IN	IN	_	30	prep	_	_
32	speaker	_	NN	NN	_	33	nn	_	_
33	quality	_	NN	NN	_	31	pobj	_	_
34	.	_	.	.	_	0	erased	_	_
#nsubj(features-14, nokia-1)
#num(nokia-1, 6610-2)
#amod(quality-5, sound-4)
#appos(nokia-1, quality-5)
#det(phone-8, the-7)
#nsubj(great-10, phone-8)
#cop(great-10, is-9)
#rcmod(nokia-1, great-10)
#advmod(cool-13, very-12)
#prep_with(great-10, cool-13)
#root(ROOT-0, features-14)
#num(options-16, &#38;-15)
#dobj(features-14, options-16)
#prep(gets-27, comparing-19)
#pcomp(comparing-19, to-20)
#poss(phone-24, my-21)
#amod(phone-24, older-22)
#nn(phone-24, motorola-23)
#pobj(to-20, phone-24)
#nsubj(gets-27, it-26)
#conj_but(features-14, gets-27)
#det(grade-30, a-28)
#amod(grade-30, failing-29)
#dobj(gets-27, grade-30)
#nn(quality-33, speaker-32)
#prep_in(grade-30, quality-33)
result:
1	i	_	FW	FW	_	17	nsubj	_	_
2	do	_	VB	VB	_	17	parataxis	_	_
3	here	_	RB	RB	_	2	advmod	_	_
4	a	_	DT	DT	_	8	det	_	_
5	constant	_	JJ	JJ	_	8	amod	_	_
6	high-pitched	_	JJ	JJ	_	8	amod	_	_
7	distorted	_	JJ	JJ	_	8	amod	_	_
8	sound	_	NN	NN	_	2	dobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	not	_	RB	RB	_	12	dep	_	_
11	to	_	TO	TO	_	12	aux	_	_
12	mention	_	VB	VB	_	8	vmod	_	_
13	the	_	DT	DT	_	14	det	_	_
14	volume	_	NN	NN	_	12	dobj	_	_
15	does	_	VBZ	VBZ	_	17	aux	_	_
16	not	_	RB	RB	_	17	neg	_	_
17	seem	_	VB	VB	_	0	root	_	_
18	to	_	TO	TO	_	19	aux	_	_
19	be	_	VB	VB	_	17	xcomp	_	_
20	loud	_	RB	RB	_	21	advmod	_	_
21	enough	_	RB	RB	_	19	advmod	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(seem-17, i-1)
#nsubj(be-19, i-1)
#parataxis(seem-17, do-2)
#advmod(do-2, here-3)
#det(sound-8, a-4)
#amod(sound-8, constant-5)
#amod(sound-8, high-pitched-6)
#amod(sound-8, distorted-7)
#dobj(do-2, sound-8)
#dep(mention-12, not-10)
#aux(mention-12, to-11)
#vmod(sound-8, mention-12)
#det(volume-14, the-13)
#dobj(mention-12, volume-14)
#aux(seem-17, does-15)
#neg(seem-17, not-16)
#root(ROOT-0, seem-17)
#aux(be-19, to-18)
#xcomp(seem-17, be-19)
#advmod(enough-21, loud-20)
#advmod(be-19, enough-21)
result:
1	it	_	PRP	PRP	_	3	nsubj	_	_
2	's	_	VBZ	VBZ	_	3	aux	_	_
3	going	_	VBG	VBG	_	0	root	_	_
4	back	_	RP	RP	_	3	prt	_	_
5	today	_	NN	NN	_	3	dobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	&#38;	_	CD	CD	_	5	amod	_	_
8	being	_	VBG	VBG	_	9	auxpass	_	_
9	replaced	_	VBN	VBN	_	3	vmod	_	_
10	with	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	14	det	_	_
12	new	_	JJ	JJ	_	14	amod	_	_
13	samsung	_	JJ	JJ	_	14	amod	_	_
14	x105	_	NNS	NNS	_	10	pobj	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(going-3, it-1)
#aux(going-3, 's-2)
#root(ROOT-0, going-3)
#prt(going-3, back-4)
#dobj(going-3, today-5)
#amod(today-5, &#38;-7)
#auxpass(replaced-9, being-8)
#vmod(going-3, replaced-9)
#det(x105-14, the-11)
#amod(x105-14, new-12)
#amod(x105-14, samsung-13)
#prep_with(replaced-9, x105-14)
result:
1	you	_	PRP	PRP	_	3	nsubj	_	_
2	do	_	VBP	VBP	_	3	aux	_	_
3	take	_	VB	VB	_	0	root	_	_
4	your	_	PRP$	PRP$	_	5	poss	_	_
5	chances	_	NNS	NNS	_	3	dobj	_	_
6	with	_	IN	IN	_	3	prep	_	_
7	this	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	6	pobj	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(take-3, you-1)
#aux(take-3, do-2)
#root(ROOT-0, take-3)
#poss(chances-5, your-4)
#dobj(take-3, chances-5)
#det(phone-8, this-7)
#prep_with(take-3, phone-8)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	considered	_	VBD	VBD	_	0	root	_	_
3	this	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	2	dobj	_	_
5	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
6	nokia	_	NN	NN	_	2	dep	_	_
7	6610	_	CD	CD	_	6	num	_	_
8	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
9	,	_	,	,	_	0	erased	_	_
10	mainly	_	RB	RB	_	12	advmod	_	_
11	because	_	IN	IN	_	12	mwe	_	_
12	of	_	IN	IN	_	2	prep	_	_
13	my	_	PRP$	PRP$	_	14	poss	_	_
14	sister	_	NN	NN	_	12	pobj	_	_
15	and	_	CC	CC	_	14	cc	_	_
16	the	_	DT	DT	_	17	det	_	_
17	features	_	NNS	NNS	_	14	conj	_	_
18	.	_	.	.	_	0	erased	_	_
#nsubj(considered-2, i-1)
#root(ROOT-0, considered-2)
#det(phone-4, this-3)
#dobj(considered-2, phone-4)
#dep(considered-2, nokia-6)
#num(nokia-6, 6610-7)
#advmod(considered-2, mainly-10)
#poss(sister-14, my-13)
#prep_because_of(considered-2, sister-14)
#det(features-17, the-16)
#prep_because_of(considered-2, features-17)
#conj_and(sister-14, features-17)
result:
1	it	_	PRP	PRP	_	5	nsubj	_	_
2	is	_	VBZ	VBZ	_	5	cop	_	_
3	a	_	DT	DT	_	5	det	_	_
4	great	_	JJ	JJ	_	5	amod	_	_
5	phone	_	NN	NN	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	if	_	IN	IN	_	10	mark	_	_
8	you	_	PRP	PRP	_	10	nsubj	_	_
9	are	_	VBP	VBP	_	10	aux	_	_
10	traveling	_	VBG	VBG	_	5	advcl	_	_
11	all	_	DT	DT	_	12	dep	_	_
12	over	_	IN	IN	_	10	prep	_	_
13	the	_	DT	DT	_	14	det	_	_
14	world	_	NN	NN	_	12	pobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	packed	_	VBN	VBN	_	14	vmod	_	_
17	with	_	IN	IN	_	16	prep	_	_
18	wonderful	_	JJ	JJ	_	19	amod	_	_
19	features	_	NNS	NNS	_	17	pobj	_	_
20	.	_	.	.	_	0	erased	_	_
#nsubj(phone-5, it-1)
#cop(phone-5, is-2)
#det(phone-5, a-3)
#amod(phone-5, great-4)
#root(ROOT-0, phone-5)
#mark(traveling-10, if-7)
#nsubj(traveling-10, you-8)
#aux(traveling-10, are-9)
#advcl(phone-5, traveling-10)
#dep(traveling-10, all-11)
#det(world-14, the-13)
#prep_over(traveling-10, world-14)
#vmod(world-14, packed-16)
#amod(features-19, wonderful-18)
#prep_with(packed-16, features-19)
result:
1	truly	_	RB	RB	_	4	nsubj	_	_
2	,	_	,	,	_	0	erased	_	_
3	i	_	FW	FW	_	1	dep	_	_
4	am	_	VBP	VBP	_	0	root	_	_
5	quite	_	RB	RB	_	4	dep	_	_
6	impressed	_	JJ	JJ	_	5	dep	_	_
7	.	_	.	.	_	0	erased	_	_
8	.	_	.	.	_	0	erased	_	_
9	!	_	.	.	_	0	erased	_	_
10	!	_	.	.	_	0	erased	_	_
#nsubj(am-4, truly-1)
#dep(truly-1, i-3)
#root(ROOT-0, am-4)
#dep(am-4, quite-5)
#dep(quite-5, impressed-6)
result:
1	this	_	DT	DT	_	6	nsubj	_	_
2	is	_	VBZ	VBZ	_	6	cop	_	_
3	a	_	DT	DT	_	6	det	_	_
4	very	_	RB	RB	_	5	advmod	_	_
5	light	_	JJ	JJ	_	6	amod	_	_
6	phone	_	NN	NN	_	0	root	_	_
7	-	_	:	:	_	0	erased	_	_
8	a	_	DT	DT	_	13	det	_	_
9	little	_	JJ	JJ	_	13	amod	_	_
10	less	_	JJR	JJR	_	11	mwe	_	_
11	than	_	IN	IN	_	12	quantmod	_	_
12	3	_	CD	CD	_	13	num	_	_
13	oz	_	NN	NN	_	6	dep	_	_
14	,	_	,	,	_	0	erased	_	_
15	with	_	IN	IN	_	6	prep	_	_
16	long	_	JJ	JJ	_	18	amod	_	_
17	battery	_	NN	NN	_	18	nn	_	_
18	life	_	NN	NN	_	15	pobj	_	_
19	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
20	not	_	RB	RB	_	22	dep	_	_
21	as	_	RB	RB	_	22	advmod	_	_
22	long	_	RB	RB	_	6	dep	_	_
23	as	_	IN	IN	_	22	prep	_	_
24	the	_	DT	DT	_	27	det	_	_
25	new	_	JJ	JJ	_	27	amod	_	_
26	polymer	_	NNP	NNP	_	27	nn	_	_
27	technology	_	NN	NN	_	23	pobj	_	_
28	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
29	.	_	.	.	_	0	erased	_	_
#nsubj(phone-6, this-1)
#cop(phone-6, is-2)
#det(phone-6, a-3)
#advmod(light-5, very-4)
#amod(phone-6, light-5)
#root(ROOT-0, phone-6)
#det(oz-13, a-8)
#amod(oz-13, little-9)
#mwe(than-11, less-10)
#quantmod(3-12, than-11)
#num(oz-13, 3-12)
#dep(phone-6, oz-13)
#amod(life-18, long-16)
#nn(life-18, battery-17)
#prep_with(phone-6, life-18)
#dep(long-22, not-20)
#advmod(long-22, as-21)
#dep(phone-6, long-22)
#det(technology-27, the-24)
#amod(technology-27, new-25)
#nn(technology-27, polymer-26)
#prep_as(long-22, technology-27)
result:
1	on	_	IN	IN	_	7	prep	_	_
2	an	_	DT	DT	_	3	det	_	_
3	average	_	NN	NN	_	1	pobj	_	_
4	,	_	,	,	_	0	erased	_	_
5	you	_	PRP	PRP	_	7	nsubj	_	_
6	would	_	MD	MD	_	7	aux	_	_
7	charge	_	VB	VB	_	0	root	_	_
8	it	_	PRP	PRP	_	7	dobj	_	_
9	once	_	RB	RB	_	11	advmod	_	_
10	a	_	DT	DT	_	11	det	_	_
11	week	_	NN	NN	_	7	tmod	_	_
12	.	_	.	.	_	0	erased	_	_
#det(average-3, an-2)
#prep_on(charge-7, average-3)
#nsubj(charge-7, you-5)
#aux(charge-7, would-6)
#root(ROOT-0, charge-7)
#dobj(charge-7, it-8)
#advmod(week-11, once-9)
#det(week-11, a-10)
#tmod(charge-7, week-11)
result:
1	the	_	DT	DT	_	3	det	_	_
2	hands-free	_	JJ	JJ	_	3	amod	_	_
3	speakerphone	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	quite	_	RB	RB	_	6	advmod	_	_
6	powerful	_	JJ	JJ	_	0	root	_	_
7	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
8	like	_	IN	IN	_	6	dep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	motorola	_	NN	NN	_	8	pobj	_	_
11	phone	_	NN	NN	_	10	dep	_	_
12	,	_	,	,	_	0	erased	_	_
13	i	_	FW	FW	_	10	appos	_	_
14	used	_	VBN	VBN	_	10	vmod	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	own	_	VB	VB	_	14	xcomp	_	_
17	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
18	.	_	.	.	_	0	erased	_	_
#det(speakerphone-3, the-1)
#amod(speakerphone-3, hands-free-2)
#nsubj(powerful-6, speakerphone-3)
#cop(powerful-6, is-4)
#advmod(powerful-6, quite-5)
#root(ROOT-0, powerful-6)
#dep(powerful-6, like-8)
#det(motorola-10, the-9)
#pobj(like-8, motorola-10)
#dep(motorola-10, phone-11)
#appos(motorola-10, i-13)
#vmod(motorola-10, used-14)
#aux(own-16, to-15)
#xcomp(used-14, own-16)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	simply	_	RB	RB	_	3	advmod	_	_
3	love	_	VBP	VBP	_	0	root	_	_
4	this	_	DT	DT	_	5	det	_	_
5	feature	_	NN	NN	_	3	dobj	_	_
6	.	_	.	.	_	0	erased	_	_
#nsubj(love-3, i-1)
#advmod(love-3, simply-2)
#root(ROOT-0, love-3)
#det(feature-5, this-4)
#dobj(love-3, feature-5)
result:
1	in	_	IN	IN	_	4	prep	_	_
2	addition	_	NN	NN	_	1	pobj	_	_
3	it	_	PRP	PRP	_	4	nsubj	_	_
4	comes	_	VBZ	VBZ	_	0	root	_	_
5	with	_	IN	IN	_	4	prep	_	_
6	a	_	DT	DT	_	10	det	_	_
7	sleek	_	JJ	JJ	_	10	amod	_	_
8	and	_	CC	CC	_	7	cc	_	_
9	powerful	_	JJ	JJ	_	7	conj	_	_
10	headset	_	NN	NN	_	5	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#prep_in(comes-4, addition-2)
#nsubj(comes-4, it-3)
#root(ROOT-0, comes-4)
#det(headset-10, a-6)
#amod(headset-10, sleek-7)
#conj_and(sleek-7, powerful-9)
#amod(headset-10, powerful-9)
#prep_with(comes-4, headset-10)
result:
1	the	_	DT	DT	_	5	det	_	_
2	built	_	VBN	VBN	_	5	amod	_	_
3	in	_	IN	IN	_	2	prep	_	_
4	fm	_	NN	NN	_	3	pobj	_	_
5	radio	_	NN	NN	_	7	nsubj	_	_
6	is	_	VBZ	VBZ	_	7	cop	_	_
7	excellent	_	JJ	JJ	_	0	root	_	_
8	for	_	IN	IN	_	7	prep	_	_
9	people	_	NNS	NNS	_	8	pobj	_	_
10	traveling	_	VBG	VBG	_	9	vmod	_	_
11	by	_	IN	IN	_	10	prep	_	_
12	public	_	JJ	JJ	_	13	amod	_	_
13	transport	_	NN	NN	_	11	pobj	_	_
14	.	_	.	.	_	0	erased	_	_
#det(radio-5, the-1)
#amod(radio-5, built-2)
#prep_in(built-2, fm-4)
#nsubj(excellent-7, radio-5)
#cop(excellent-7, is-6)
#root(ROOT-0, excellent-7)
#prep_for(excellent-7, people-9)
#vmod(people-9, traveling-10)
#amod(transport-13, public-12)
#agent(traveling-10, transport-13)
result:
1	if	_	IN	IN	_	3	mark	_	_
2	you	_	PRP	PRP	_	3	nsubj	_	_
3	buy	_	VBP	VBP	_	10	advcl	_	_
4	the	_	DT	DT	_	6	det	_	_
5	stereo	_	JJ	JJ	_	6	amod	_	_
6	headset	_	NN	NN	_	3	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	you	_	PRP	PRP	_	10	nsubj	_	_
9	will	_	MD	MD	_	10	aux	_	_
10	enjoy	_	VB	VB	_	0	root	_	_
11	it	_	PRP	PRP	_	10	dobj	_	_
12	much	_	RB	RB	_	13	advmod	_	_
13	more	_	RBR	RBR	_	10	advmod	_	_
14	.	_	.	.	_	0	erased	_	_
#mark(buy-3, if-1)
#nsubj(buy-3, you-2)
#advcl(enjoy-10, buy-3)
#det(headset-6, the-4)
#amod(headset-6, stereo-5)
#dobj(buy-3, headset-6)
#nsubj(enjoy-10, you-8)
#aux(enjoy-10, will-9)
#root(ROOT-0, enjoy-10)
#dobj(enjoy-10, it-11)
#advmod(more-13, much-12)
#advmod(enjoy-10, more-13)
result:
1	the	_	DT	DT	_	4	det	_	_
2	pc	_	NN	NN	_	4	nn	_	_
3	sync	_	NN	NN	_	4	nn	_	_
4	feature	_	NN	NN	_	6	nsubj	_	_
5	is	_	VBZ	VBZ	_	6	cop	_	_
6	superb	_	JJ	JJ	_	0	root	_	_
7	that	_	IN	IN	_	8	mark	_	_
8	comes	_	VBZ	VBZ	_	6	ccomp	_	_
9	with	_	IN	IN	_	8	prep	_	_
10	nokia	_	NN	NN	_	13	nn	_	_
11	pc	_	NN	NN	_	13	nn	_	_
12	suite	_	NN	NN	_	13	nn	_	_
13	software	_	NN	NN	_	9	pobj	_	_
14	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
15	with	_	IN	IN	_	8	dep	_	_
16	data	_	NNS	NNS	_	17	nn	_	_
17	cable	_	NN	NN	_	15	pobj	_	_
18	or	_	CC	CC	_	17	cc	_	_
19	infrared	_	JJ	JJ	_	20	amod	_	_
20	port	_	NN	NN	_	17	conj	_	_
21	or	_	CC	CC	_	20	cc	_	_
22	bluetooth	_	NN	NN	_	20	conj	_	_
23	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
24	.	_	.	.	_	0	erased	_	_
#det(feature-4, the-1)
#nn(feature-4, pc-2)
#nn(feature-4, sync-3)
#nsubj(superb-6, feature-4)
#cop(superb-6, is-5)
#root(ROOT-0, superb-6)
#mark(comes-8, that-7)
#ccomp(superb-6, comes-8)
#nn(software-13, nokia-10)
#nn(software-13, pc-11)
#nn(software-13, suite-12)
#prep_with(comes-8, software-13)
#dep(comes-8, with-15)
#nn(cable-17, data-16)
#pobj(with-15, cable-17)
#amod(port-20, infrared-19)
#pobj(with-15, port-20)
#conj_or(cable-17, port-20)
#conj_or(cable-17, bluetooth-22)
#conj_or(port-20, bluetooth-22)
result:
1	no	_	DT	DT	_	3	neg	_	_
2	more	_	JJR	JJR	_	3	amod	_	_
3	hazzles	_	NNS	NNS	_	14	nsubj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	keying	_	VBG	VBG	_	4	pcomp	_	_
6	in	_	IN	IN	_	5	prep	_	_
7	all	_	DT	DT	_	8	det	_	_
8	data	_	NNS	NNS	_	6	pobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	using	_	VBG	VBG	_	5	dep	_	_
11	the	_	DT	DT	_	13	det	_	_
12	small	_	JJ	JJ	_	13	amod	_	_
13	phone	_	NN	NN	_	10	dobj	_	_
14	keypad	_	VBD	VBD	_	0	root	_	_
15	.	_	.	.	_	0	erased	_	_
#neg(hazzles-3, no-1)
#amod(hazzles-3, more-2)
#nsubj(keypad-14, hazzles-3)
#prepc_of(hazzles-3, keying-5)
#det(data-8, all-7)
#prep_in(keying-5, data-8)
#dep(keying-5, using-10)
#det(phone-13, the-11)
#amod(phone-13, small-12)
#dobj(using-10, phone-13)
#root(ROOT-0, keypad-14)
result:
1	just	_	RB	RB	_	2	nsubj	_	_
2	maintain	_	VBP	VBP	_	0	root	_	_
3	them	_	PRP	PRP	_	2	dobj	_	_
4	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
5	phonebook	_	NN	NN	_	3	dep	_	_
6	,	_	,	,	_	0	erased	_	_
7	calendar	_	NN	NN	_	5	conj	_	_
8	and	_	CC	CC	_	5	cc	_	_
9	to-do	_	JJ	JJ	_	10	amod	_	_
10	list	_	NN	NN	_	5	conj	_	_
11	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
12	in	_	IN	IN	_	2	prep	_	_
13	ms	_	JJ	JJ	_	14	amod	_	_
14	outlook	_	NN	NN	_	12	pobj	_	_
15	or	_	CC	CC	_	14	cc	_	_
16	lotus	_	JJ	JJ	_	17	amod	_	_
17	notes	_	NNS	NNS	_	14	conj	_	_
18	and	_	CC	CC	_	2	cc	_	_
19	transfer	_	VB	VB	_	2	conj	_	_
20	data	_	NNS	NNS	_	19	dobj	_	_
21	back	_	RB	RB	_	19	advmod	_	_
22	and	_	CC	CC	_	21	cc	_	_
23	forth	_	RB	RB	_	21	conj	_	_
24	.	_	.	.	_	0	erased	_	_
#nsubj(maintain-2, just-1)
#nsubj(transfer-19, just-1)
#root(ROOT-0, maintain-2)
#dobj(maintain-2, them-3)
#dep(them-3, phonebook-5)
#dep(them-3, calendar-7)
#conj_and(phonebook-5, calendar-7)
#amod(list-10, to-do-9)
#dep(them-3, list-10)
#conj_and(phonebook-5, list-10)
#amod(outlook-14, ms-13)
#prep_in(maintain-2, outlook-14)
#amod(notes-17, lotus-16)
#prep_in(maintain-2, notes-17)
#conj_or(outlook-14, notes-17)
#conj_and(maintain-2, transfer-19)
#dobj(transfer-19, data-20)
#advmod(transfer-19, back-21)
#advmod(transfer-19, forth-23)
#conj_and(back-21, forth-23)
result:
1	additionally	_	RB	RB	_	37	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	it	_	PRP	PRP	_	4	nsubj	_	_
4	has	_	VBZ	VBZ	_	37	parataxis	_	_
5	more	_	JJR	JJR	_	7	amod	_	_
6	fun	_	NN	NN	_	7	nn	_	_
7	stuff	_	NN	NN	_	4	dobj	_	_
8	like	_	IN	IN	_	4	prep	_	_
9	more	_	JJR	JJR	_	10	amod	_	_
10	tones	_	NNS	NNS	_	8	pobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	wallpapers	_	NNS	NNS	_	37	nsubj	_	_
13	,	_	,	,	_	0	erased	_	_
14	screensaver	_	NN	NN	_	12	appos	_	_
15	,	_	,	,	_	0	erased	_	_
16	stop	_	VB	VB	_	17	dep	_	_
17	clock	_	NN	NN	_	12	appos	_	_
18	,	_	,	,	_	0	erased	_	_
19	alarm	_	NN	NN	_	12	appos	_	_
20	,	_	,	,	_	0	erased	_	_
21	java	_	NN	NN	_	22	nn	_	_
22	applications	_	NNS	NNS	_	12	appos	_	_
23	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
24	chess	_	NN	NN	_	28	nn	_	_
25	,	_	,	,	_	0	erased	_	_
26	currency	_	NN	NN	_	28	dep	_	_
27	converter	_	NN	NN	_	28	nn	_	_
28	etc.	_	NN	NN	_	22	appos	_	_
29	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
30	the	_	DT	DT	_	32	det	_	_
31	mobile	_	JJ	JJ	_	32	amod	_	_
32	text	_	NN	NN	_	22	dep	_	_
33	messaging	_	VBG	VBG	_	32	amod	_	_
34	,	_	,	,	_	0	erased	_	_
35	chat	_	NN	NN	_	12	appos	_	_
36	,	_	,	,	_	0	erased	_	_
37	picture	_	VBP	VBP	_	0	root	_	_
38	sharing	_	VBG	VBG	_	37	xcomp	_	_
39	etc.	_	FW	FW	_	38	prep	_	_
40	other	_	JJ	JJ	_	41	amod	_	_
41	nicities	_	NNS	NNS	_	39	pobj	_	_
42	,	_	,	,	_	0	erased	_	_
43	that	_	IN	IN	_	46	mark	_	_
44	you	_	PRP	PRP	_	46	nsubj	_	_
45	would	_	MD	MD	_	46	aux	_	_
46	enjoy	_	VB	VB	_	41	dep	_	_
47	.	_	.	.	_	0	erased	_	_
#advmod(picture-37, additionally-1)
#nsubj(has-4, it-3)
#parataxis(picture-37, has-4)
#amod(stuff-7, more-5)
#nn(stuff-7, fun-6)
#dobj(has-4, stuff-7)
#amod(tones-10, more-9)
#prep_like(has-4, tones-10)
#nsubj(picture-37, wallpapers-12)
#appos(wallpapers-12, screensaver-14)
#dep(clock-17, stop-16)
#appos(wallpapers-12, clock-17)
#appos(wallpapers-12, alarm-19)
#nn(applications-22, java-21)
#appos(wallpapers-12, applications-22)
#nn(etc.-28, chess-24)
#dep(etc.-28, currency-26)
#nn(etc.-28, converter-27)
#appos(applications-22, etc.-28)
#det(text-32, the-30)
#amod(text-32, mobile-31)
#dep(applications-22, text-32)
#amod(text-32, messaging-33)
#appos(wallpapers-12, chat-35)
#root(ROOT-0, picture-37)
#xcomp(picture-37, sharing-38)
#prep(sharing-38, etc.-39)
#amod(nicities-41, other-40)
#pobj(etc.-39, nicities-41)
#mark(enjoy-46, that-43)
#nsubj(enjoy-46, you-44)
#aux(enjoy-46, would-45)
#dep(nicities-41, enjoy-46)
result:
1	the	_	DT	DT	_	3	det	_	_
2	mms	_	NN	NN	_	3	nn	_	_
3	technology	_	NN	NN	_	7	nsubjpass	_	_
4	is	_	VBZ	VBZ	_	7	auxpass	_	_
5	very	_	RB	RB	_	6	advmod	_	_
6	well	_	RB	RB	_	7	advmod	_	_
7	integrated	_	VBN	VBN	_	0	root	_	_
8	with	_	IN	IN	_	7	prep	_	_
9	this	_	DT	DT	_	10	det	_	_
10	phone	_	NN	NN	_	8	pobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	which	_	WDT	WDT	_	15	dobj	_	_
13	you	_	PRP	PRP	_	15	nsubj	_	_
14	will	_	MD	MD	_	15	aux	_	_
15	enjoy	_	VB	VB	_	10	rcmod	_	_
16	.	_	.	.	_	0	erased	_	_
#det(technology-3, the-1)
#nn(technology-3, mms-2)
#nsubjpass(integrated-7, technology-3)
#auxpass(integrated-7, is-4)
#advmod(well-6, very-5)
#advmod(integrated-7, well-6)
#root(ROOT-0, integrated-7)
#det(phone-10, this-9)
#prep_with(integrated-7, phone-10)
#dobj(enjoy-15, phone-10)
#nsubj(enjoy-15, you-13)
#aux(enjoy-15, will-14)
#rcmod(phone-10, enjoy-15)
result:
1	the	_	DT	DT	_	3	det	_	_
2	built-in	_	JJ	JJ	_	3	amod	_	_
3	camera	_	NN	NN	_	9	nsubj	_	_
4	they	_	PRP	PRP	_	5	nsubj	_	_
5	offer	_	VBP	VBP	_	3	rcmod	_	_
6	these	_	DT	DT	_	7	det	_	_
7	days	_	NNS	NNS	_	5	tmod	_	_
8	is	_	VBZ	VBZ	_	9	cop	_	_
9	more	_	JJR	JJR	_	0	root	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	kids	_	NNS	NNS	_	12	nn	_	_
12	stuff	_	NN	NN	_	10	pobj	_	_
13	.	_	.	.	_	0	erased	_	_
#det(camera-3, the-1)
#amod(camera-3, built-in-2)
#nsubj(more-9, camera-3)
#nsubj(offer-5, they-4)
#rcmod(camera-3, offer-5)
#det(days-7, these-6)
#tmod(offer-5, days-7)
#cop(more-9, is-8)
#root(ROOT-0, more-9)
#nn(stuff-12, kids-11)
#prep_of(more-9, stuff-12)
result:
1	if	_	IN	IN	_	3	mark	_	_
2	you	_	PRP	PRP	_	3	nsubj	_	_
3	have	_	VBP	VBP	_	10	advcl	_	_
4	a	_	DT	DT	_	7	det	_	_
5	good	_	JJ	JJ	_	7	amod	_	_
6	digital	_	JJ	JJ	_	7	amod	_	_
7	camera	_	NN	NN	_	3	dobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	there	_	EX	EX	_	10	expl	_	_
10	is	_	VBZ	VBZ	_	0	root	_	_
11	no	_	DT	DT	_	12	neg	_	_
12	reason	_	NN	NN	_	10	nsubj	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	consider	_	VB	VB	_	12	vmod	_	_
15	the	_	DT	DT	_	17	det	_	_
16	camera	_	NN	NN	_	17	nn	_	_
17	capabilities	_	NNS	NNS	_	14	dobj	_	_
18	of	_	IN	IN	_	17	prep	_	_
19	a	_	DT	DT	_	21	det	_	_
20	mobile	_	JJ	JJ	_	21	amod	_	_
21	phone	_	NN	NN	_	18	pobj	_	_
22	.	_	.	.	_	0	erased	_	_
#mark(have-3, if-1)
#nsubj(have-3, you-2)
#advcl(is-10, have-3)
#det(camera-7, a-4)
#amod(camera-7, good-5)
#amod(camera-7, digital-6)
#dobj(have-3, camera-7)
#expl(is-10, there-9)
#root(ROOT-0, is-10)
#neg(reason-12, no-11)
#nsubj(is-10, reason-12)
#aux(consider-14, to-13)
#vmod(reason-12, consider-14)
#det(capabilities-17, the-15)
#nn(capabilities-17, camera-16)
#dobj(consider-14, capabilities-17)
#det(phone-21, a-19)
#amod(phone-21, mobile-20)
#prep_of(capabilities-17, phone-21)
result:
1	however	_	RB	RB	_	10	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	if	_	IN	IN	_	6	mark	_	_
4	you	_	PRP	PRP	_	6	nsubj	_	_
5	are	_	VBP	VBP	_	6	cop	_	_
6	keen	_	JJ	JJ	_	10	advcl	_	_
7	,	_	,	,	_	0	erased	_	_
8	you	_	PRP	PRP	_	10	nsubj	_	_
9	can	_	MD	MD	_	10	aux	_	_
10	attach	_	VB	VB	_	0	root	_	_
11	a	_	DT	DT	_	12	det	_	_
12	camera	_	NN	NN	_	10	dobj	_	_
13	to	_	TO	TO	_	10	prep	_	_
14	this	_	DT	DT	_	15	det	_	_
15	phone	_	NN	NN	_	13	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#advmod(attach-10, however-1)
#mark(keen-6, if-3)
#nsubj(keen-6, you-4)
#cop(keen-6, are-5)
#advcl(attach-10, keen-6)
#nsubj(attach-10, you-8)
#aux(attach-10, can-9)
#root(ROOT-0, attach-10)
#det(camera-12, a-11)
#dobj(attach-10, camera-12)
#det(phone-15, this-14)
#prep_to(attach-10, phone-15)
result:
1	i	_	FW	FW	_	0	root	_	_
2	have	_	VBP	VBP	_	5	aux	_	_
3	not	_	RB	RB	_	5	neg	_	_
4	yet	_	RB	RB	_	5	advmod	_	_
5	discovered	_	VBN	VBN	_	8	dep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	internet	_	NN	NN	_	8	nsubj	_	_
8	features	_	VBZ	VBZ	_	1	dep	_	_
9	yet	_	RB	RB	_	8	advmod	_	_
10	,	_	,	,	_	0	erased	_	_
11	which	_	WDT	WDT	_	15	dobj	_	_
12	i	_	FW	FW	_	15	nsubj	_	_
13	will	_	MD	MD	_	15	aux	_	_
14	be	_	VB	VB	_	15	aux	_	_
15	doing	_	VBG	VBG	_	8	ccomp	_	_
16	soon	_	RB	RB	_	15	advmod	_	_
17	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, i-1)
#aux(discovered-5, have-2)
#neg(discovered-5, not-3)
#advmod(discovered-5, yet-4)
#dep(features-8, discovered-5)
#det(internet-7, the-6)
#nsubj(features-8, internet-7)
#dep(i-1, features-8)
#advmod(features-8, yet-9)
#dobj(doing-15, which-11)
#nsubj(doing-15, i-12)
#aux(doing-15, will-13)
#aux(doing-15, be-14)
#ccomp(features-8, doing-15)
#advmod(doing-15, soon-16)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	felt	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	6	mark	_	_
4	i	_	FW	FW	_	6	nsubj	_	_
5	should	_	MD	MD	_	6	aux	_	_
6	write	_	VB	VB	_	2	ccomp	_	_
7	this	_	DT	DT	_	9	det	_	_
8	comment	_	NN	NN	_	9	nn	_	_
9	asap	_	NN	NN	_	6	dobj	_	_
10	,	_	,	,	_	0	erased	_	_
11	as	_	IN	IN	_	15	prep	_	_
12	i	_	FW	FW	_	11	pobj	_	_
13	am	_	VBP	VBP	_	15	auxpass	_	_
14	quite	_	RB	RB	_	15	advmod	_	_
15	excited	_	VBN	VBN	_	2	dep	_	_
16	in	_	IN	IN	_	15	prep	_	_
17	using	_	VBG	VBG	_	16	pcomp	_	_
18	its	_	PRP$	PRP$	_	19	poss	_	_
19	features	_	NNS	NNS	_	17	dobj	_	_
20	.	_	.	.	_	0	erased	_	_
#nsubj(felt-2, i-1)
#root(ROOT-0, felt-2)
#mark(write-6, that-3)
#nsubj(write-6, i-4)
#aux(write-6, should-5)
#ccomp(felt-2, write-6)
#det(asap-9, this-7)
#nn(asap-9, comment-8)
#dobj(write-6, asap-9)
#prep_as(excited-15, i-12)
#auxpass(excited-15, am-13)
#advmod(excited-15, quite-14)
#dep(felt-2, excited-15)
#prepc_in(excited-15, using-17)
#poss(features-19, its-18)
#dobj(using-17, features-19)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	can	_	MD	MD	_	3	aux	_	_
3	recommend	_	VB	VB	_	0	root	_	_
4	this	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	to	_	TO	TO	_	3	prep	_	_
7	anyone	_	NN	NN	_	6	pobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	anytime	_	RB	RB	_	3	advmod	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(recommend-3, i-1)
#aux(recommend-3, can-2)
#root(ROOT-0, recommend-3)
#det(phone-5, this-4)
#dobj(recommend-3, phone-5)
#prep_to(recommend-3, anyone-7)
#advmod(recommend-3, anytime-9)
result:
1	after	_	IN	IN	_	11	prep	_	_
2	using	_	VBG	VBG	_	1	pcomp	_	_
3	the	_	DT	DT	_	5	det	_	_
4	bulky	_	JJ	JJ	_	5	amod	_	_
5	3650	_	NNS	NNS	_	2	dobj	_	_
6	for	_	IN	IN	_	2	prep	_	_
7	three	_	CD	CD	_	8	num	_	_
8	weeks	_	NNS	NNS	_	6	pobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	i	_	FW	FW	_	11	nsubj	_	_
11	searched	_	VBD	VBD	_	0	root	_	_
12	for	_	IN	IN	_	11	prep	_	_
13	a	_	DT	DT	_	15	det	_	_
14	smaller	_	JJR	JJR	_	15	amod	_	_
15	alternative	_	NN	NN	_	12	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#prepc_after(searched-11, using-2)
#det(3650-5, the-3)
#amod(3650-5, bulky-4)
#dobj(using-2, 3650-5)
#num(weeks-8, three-7)
#prep_for(using-2, weeks-8)
#nsubj(searched-11, i-10)
#root(ROOT-0, searched-11)
#det(alternative-15, a-13)
#amod(alternative-15, smaller-14)
#prep_for(searched-11, alternative-15)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	was	_	VBD	VBD	_	4	cop	_	_
3	immediately	_	RB	RB	_	4	advmod	_	_
4	interested	_	JJ	JJ	_	0	root	_	_
5	in	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	6610	_	CD	CD	_	5	pobj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(interested-4, i-1)
#cop(interested-4, was-2)
#advmod(interested-4, immediately-3)
#root(ROOT-0, interested-4)
#det(6610-7, the-6)
#prep_in(interested-4, 6610-7)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	have	_	VBD	VBD	_	3	aux	_	_
3	used	_	VBN	VBN	_	0	root	_	_
4	this	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	for	_	IN	IN	_	3	prep	_	_
7	two	_	CD	CD	_	8	num	_	_
8	months	_	NNS	NNS	_	9	npadvmod	_	_
9	now	_	RB	RB	_	6	pcomp	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(used-3, i-1)
#aux(used-3, have-2)
#root(ROOT-0, used-3)
#det(phone-5, this-4)
#dobj(used-3, phone-5)
#prep(used-3, for-6)
#num(months-8, two-7)
#npadvmod(now-9, months-8)
#pcomp(for-6, now-9)
result:
1	not	_	RB	RB	_	2	dep	_	_
2	only	_	RB	RB	_	4	advmod	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	it	_	PRP	PRP	_	20	ccomp	_	_
5	the	_	DT	DT	_	7	det	_	_
6	perfect	_	JJ	JJ	_	7	amod	_	_
7	size	_	NN	NN	_	4	dep	_	_
8	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
9	not	_	RB	RB	_	11	neg	_	_
10	too	_	RB	RB	_	11	advmod	_	_
11	small	_	JJ	JJ	_	7	dep	_	_
12	,	_	,	,	_	0	erased	_	_
13	not	_	RB	RB	_	15	neg	_	_
14	too	_	RB	RB	_	15	advmod	_	_
15	large	_	JJ	JJ	_	11	appos	_	_
16	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
17	,	_	,	,	_	0	erased	_	_
18	it	_	PRP	PRP	_	20	nsubj	_	_
19	also	_	RB	RB	_	20	advmod	_	_
20	has	_	VBZ	VBZ	_	0	root	_	_
21	all	_	PDT	PDT	_	23	predet	_	_
22	the	_	DT	DT	_	23	det	_	_
23	features	_	NNS	NNS	_	20	dobj	_	_
24	a	_	DT	DT	_	27	det	_	_
25	high-tech	_	JJ	JJ	_	27	amod	_	_
26	phone	_	NN	NN	_	27	nn	_	_
27	user	_	NN	NN	_	29	nsubj	_	_
28	would	_	MD	MD	_	29	aux	_	_
29	want	_	VB	VB	_	23	rcmod	_	_
30	.	_	.	.	_	0	erased	_	_
#dep(only-2, not-1)
#advmod(it-4, only-2)
#cop(it-4, is-3)
#ccomp(has-20, it-4)
#det(size-7, the-5)
#amod(size-7, perfect-6)
#dep(it-4, size-7)
#neg(small-11, not-9)
#advmod(small-11, too-10)
#dep(size-7, small-11)
#neg(large-15, not-13)
#advmod(large-15, too-14)
#appos(small-11, large-15)
#nsubj(has-20, it-18)
#advmod(has-20, also-19)
#root(ROOT-0, has-20)
#predet(features-23, all-21)
#det(features-23, the-22)
#dobj(has-20, features-23)
#det(user-27, a-24)
#amod(user-27, high-tech-25)
#nn(user-27, phone-26)
#nsubj(want-29, user-27)
#aux(want-29, would-28)
#rcmod(features-23, want-29)
result:
1	if	_	IN	IN	_	4	mark	_	_
2	you	_	PRP	PRP	_	4	nsubj	_	_
3	can	_	MD	MD	_	4	aux	_	_
4	live	_	VB	VB	_	13	advcl	_	_
5	without	_	IN	IN	_	4	prep	_	_
6	an	_	DT	DT	_	8	det	_	_
7	integrated	_	JJ	JJ	_	8	amod	_	_
8	camera	_	NN	NN	_	5	pobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	you	_	PRP	PRP	_	13	nsubj	_	_
11	wo	_	MD	MD	_	13	aux	_	_
12	n't	_	RB	RB	_	13	neg	_	_
13	miss	_	VB	VB	_	0	root	_	_
14	much	_	RB	RB	_	15	advmod	_	_
15	more	_	JJR	JJR	_	13	acomp	_	_
16	.	_	.	.	_	0	erased	_	_
#mark(live-4, if-1)
#nsubj(live-4, you-2)
#aux(live-4, can-3)
#advcl(miss-13, live-4)
#det(camera-8, an-6)
#amod(camera-8, integrated-7)
#prep_without(live-4, camera-8)
#nsubj(miss-13, you-10)
#aux(miss-13, wo-11)
#neg(miss-13, n't-12)
#root(ROOT-0, miss-13)
#advmod(more-15, much-14)
#acomp(miss-13, more-15)
result:
1	in	_	IN	IN	_	9	prep	_	_
2	true	_	JJ	JJ	_	4	amod	_	_
3	nokia	_	NN	NN	_	4	nn	_	_
4	style	_	NN	NN	_	1	pobj	_	_
5	,	_	,	,	_	0	erased	_	_
6	the	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	9	nsubj	_	_
8	is	_	VBZ	VBZ	_	9	cop	_	_
9	simple	_	JJ	JJ	_	0	root	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	use	_	VB	VB	_	9	xcomp	_	_
12	and	_	CC	CC	_	9	cc	_	_
13	despite	_	IN	IN	_	23	prep	_	_
14	its	_	PRP$	PRP$	_	16	poss	_	_
15	delicate	_	JJ	JJ	_	16	amod	_	_
16	appearance	_	NN	NN	_	13	pobj	_	_
17	,	_	,	,	_	0	erased	_	_
18	this	_	DT	DT	_	20	det	_	_
19	little	_	JJ	JJ	_	20	amod	_	_
20	guy	_	NN	NN	_	23	nsubj	_	_
21	is	_	VBZ	VBZ	_	23	cop	_	_
22	as	_	RB	RB	_	23	advmod	_	_
23	durable	_	JJ	JJ	_	9	conj	_	_
24	as	_	IN	IN	_	29	mark	_	_
25	other	_	JJ	JJ	_	26	amod	_	_
26	nokias	_	NN	NN	_	29	nsubj	_	_
27	i	_	FW	FW	_	26	dep	_	_
28	have	_	VBP	VBP	_	29	aux	_	_
29	owned	_	VBN	VBN	_	23	advcl	_	_
30	.	_	.	.	_	0	erased	_	_
#amod(style-4, true-2)
#nn(style-4, nokia-3)
#prep_in(simple-9, style-4)
#det(phone-7, the-6)
#nsubj(simple-9, phone-7)
#nsubj(use-11, phone-7)
#cop(simple-9, is-8)
#root(ROOT-0, simple-9)
#aux(use-11, to-10)
#xcomp(simple-9, use-11)
#poss(appearance-16, its-14)
#amod(appearance-16, delicate-15)
#prep_despite(durable-23, appearance-16)
#det(guy-20, this-18)
#amod(guy-20, little-19)
#nsubj(durable-23, guy-20)
#cop(durable-23, is-21)
#advmod(durable-23, as-22)
#conj_and(simple-9, durable-23)
#mark(owned-29, as-24)
#amod(nokias-26, other-25)
#nsubj(owned-29, nokias-26)
#dep(nokias-26, i-27)
#aux(owned-29, have-28)
#advcl(durable-23, owned-29)
result:
1	the	_	DT	DT	_	3	det	_	_
2	phone	_	NN	NN	_	3	nn	_	_
3	book	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	very	_	RB	RB	_	6	advmod	_	_
6	user-friendly	_	JJ	JJ	_	0	root	_	_
7	and	_	CC	CC	_	6	cc	_	_
8	the	_	DT	DT	_	9	det	_	_
9	speakerphone	_	NN	NN	_	11	nsubj	_	_
10	is	_	VBZ	VBZ	_	11	cop	_	_
11	excellent	_	JJ	JJ	_	6	conj	_	_
12	.	_	.	.	_	0	erased	_	_
#det(book-3, the-1)
#nn(book-3, phone-2)
#nsubj(user-friendly-6, book-3)
#cop(user-friendly-6, is-4)
#advmod(user-friendly-6, very-5)
#root(ROOT-0, user-friendly-6)
#det(speakerphone-9, the-8)
#nsubj(excellent-11, speakerphone-9)
#cop(excellent-11, is-10)
#conj_and(user-friendly-6, excellent-11)
result:
1	even	_	RB	RB	_	2	advmod	_	_
2	better	_	RB	RB	_	10	advmod	_	_
3	,	_	,	,	_	0	erased	_	_
4	with	_	IN	IN	_	10	prep	_	_
5	the	_	DT	DT	_	7	det	_	_
6	optional	_	JJ	JJ	_	7	amod	_	_
7	headset	_	NN	NN	_	4	pobj	_	_
8	you	_	PRP	PRP	_	10	nsubj	_	_
9	can	_	MD	MD	_	10	aux	_	_
10	listen	_	VB	VB	_	0	root	_	_
11	to	_	TO	TO	_	10	prep	_	_
12	music	_	NN	NN	_	11	pobj	_	_
13	over	_	IN	IN	_	10	prep	_	_
14	the	_	DT	DT	_	16	det	_	_
15	integrated	_	JJ	JJ	_	16	amod	_	_
16	radio	_	NN	NN	_	13	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#advmod(better-2, even-1)
#advmod(listen-10, better-2)
#det(headset-7, the-5)
#amod(headset-7, optional-6)
#prep_with(listen-10, headset-7)
#nsubj(listen-10, you-8)
#aux(listen-10, can-9)
#root(ROOT-0, listen-10)
#prep_to(listen-10, music-12)
#det(radio-16, the-14)
#amod(radio-16, integrated-15)
#prep_over(listen-10, radio-16)
result:
1	if	_	IN	IN	_	3	mark	_	_
2	there	_	EX	EX	_	3	expl	_	_
3	are	_	VBP	VBP	_	11	advcl	_	_
4	any	_	DT	DT	_	5	det	_	_
5	drawbacks	_	NNS	NNS	_	3	nsubj	_	_
6	to	_	TO	TO	_	5	prep	_	_
7	this	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	6	pobj	_	_
9	here	_	RB	RB	_	3	advmod	_	_
10	they	_	PRP	PRP	_	11	nsubj	_	_
11	are	_	VBP	VBP	_	0	root	_	_
12	.	_	.	.	_	0	erased	_	_
#mark(are-3, if-1)
#expl(are-3, there-2)
#advcl(are-11, are-3)
#det(drawbacks-5, any-4)
#nsubj(are-3, drawbacks-5)
#det(phone-8, this-7)
#prep_to(drawbacks-5, phone-8)
#advmod(are-3, here-9)
#nsubj(are-11, they-10)
#root(ROOT-0, are-11)
result:
1	although	_	IN	IN	_	2	mark	_	_
2	i	_	FW	FW	_	0	root	_	_
3	find	_	VB	VB	_	16	ccomp	_	_
4	it	_	PRP	PRP	_	6	nsubj	_	_
5	more	_	RBR	RBR	_	6	advmod	_	_
6	convenient	_	JJ	JJ	_	3	xcomp	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	use	_	VB	VB	_	6	xcomp	_	_
9	1-touch	_	JJ	JJ	_	10	amod	_	_
10	dialing	_	NN	NN	_	8	dobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	this	_	DT	DT	_	13	det	_	_
13	phone	_	NN	NN	_	16	nsubj	_	_
14	does	_	VBZ	VBZ	_	16	aux	_	_
15	not	_	RB	RB	_	16	neg	_	_
16	have	_	VB	VB	_	2	dep	_	_
17	voice	_	NN	NN	_	16	dobj	_	_
18	dialing	_	VBG	VBG	_	16	xcomp	_	_
19	.	_	.	.	_	0	erased	_	_
#mark(i-2, although-1)
#root(ROOT-0, i-2)
#ccomp(have-16, find-3)
#nsubj(convenient-6, it-4)
#nsubj(use-8, it-4)
#advmod(convenient-6, more-5)
#xcomp(find-3, convenient-6)
#aux(use-8, to-7)
#xcomp(convenient-6, use-8)
#amod(dialing-10, 1-touch-9)
#dobj(use-8, dialing-10)
#det(phone-13, this-12)
#nsubj(have-16, phone-13)
#aux(have-16, does-14)
#neg(have-16, not-15)
#dep(i-2, have-16)
#dobj(have-16, voice-17)
#xcomp(have-16, dialing-18)
result:
1	the	_	DT	DT	_	2	det	_	_
2	keypad	_	NN	NN	_	6	nsubj	_	_
3	is	_	VBZ	VBZ	_	6	cop	_	_
4	a	_	DT	DT	_	6	det	_	_
5	decent	_	JJ	JJ	_	6	amod	_	_
6	size	_	NN	NN	_	0	root	_	_
7	,	_	,	,	_	0	erased	_	_
8	but	_	CC	CC	_	6	cc	_	_
9	the	_	DT	DT	_	12	det	_	_
10	power	_	NN	NN	_	12	nn	_	_
11	on/off	_	NN	NN	_	12	nn	_	_
12	key	_	NN	NN	_	14	nsubj	_	_
13	is	_	VBZ	VBZ	_	14	cop	_	_
14	small	_	JJ	JJ	_	6	conj	_	_
15	and	_	CC	CC	_	14	cc	_	_
16	difficult	_	JJ	JJ	_	14	conj	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	press	_	VB	VB	_	14	xcomp	_	_
19	.	_	.	.	_	0	erased	_	_
#det(keypad-2, the-1)
#nsubj(size-6, keypad-2)
#cop(size-6, is-3)
#det(size-6, a-4)
#amod(size-6, decent-5)
#root(ROOT-0, size-6)
#det(key-12, the-9)
#nn(key-12, power-10)
#nn(key-12, on/off-11)
#nsubj(small-14, key-12)
#nsubj(difficult-16, key-12)
#nsubj(press-18, key-12)
#cop(small-14, is-13)
#conj_but(size-6, small-14)
#conj_but(size-6, difficult-16)
#conj_and(small-14, difficult-16)
#aux(press-18, to-17)
#xcomp(small-14, press-18)
result:
1	however	_	RB	RB	_	7	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	the	_	DT	DT	_	5	det	_	_
4	battery	_	NN	NN	_	5	nn	_	_
5	life	_	NN	NN	_	7	nsubj	_	_
6	is	_	VBZ	VBZ	_	7	cop	_	_
7	good	_	JJ	JJ	_	0	root	_	_
8	enough	_	RB	RB	_	7	advmod	_	_
9	you	_	PRP	PRP	_	14	nsubjpass	_	_
10	should	_	MD	MD	_	14	aux	_	_
11	n't	_	RB	RB	_	14	neg	_	_
12	be	_	VB	VB	_	14	auxpass	_	_
13	overly	_	RB	RB	_	14	advmod	_	_
14	concerned	_	VBN	VBN	_	7	ccomp	_	_
15	with	_	IN	IN	_	14	prep	_	_
16	turning	_	VBG	VBG	_	15	pcomp	_	_
17	this	_	DT	DT	_	18	det	_	_
18	phone	_	NN	NN	_	16	dobj	_	_
19	off	_	RP	RP	_	16	prt	_	_
20	.	_	.	.	_	0	erased	_	_
#advmod(good-7, however-1)
#det(life-5, the-3)
#nn(life-5, battery-4)
#nsubj(good-7, life-5)
#cop(good-7, is-6)
#root(ROOT-0, good-7)
#advmod(good-7, enough-8)
#nsubjpass(concerned-14, you-9)
#aux(concerned-14, should-10)
#neg(concerned-14, n't-11)
#auxpass(concerned-14, be-12)
#advmod(concerned-14, overly-13)
#ccomp(good-7, concerned-14)
#prepc_with(concerned-14, turning-16)
#det(phone-18, this-17)
#dobj(turning-16, phone-18)
#prt(turning-16, off-19)
result:
1	in	_	IN	IN	_	14	prep	_	_
2	my	_	PRP$	PRP$	_	3	poss	_	_
3	opinion	_	NN	NN	_	1	pobj	_	_
4	the	_	DT	DT	_	6	det	_	_
5	worst	_	JJS	JJS	_	6	amod	_	_
6	issue	_	NN	NN	_	14	nsubj	_	_
7	on	_	IN	IN	_	6	prep	_	_
8	this	_	DT	DT	_	9	det	_	_
9	phone	_	NN	NN	_	7	pobj	_	_
10	is	_	VBZ	VBZ	_	14	cop	_	_
11	the	_	DT	DT	_	14	det	_	_
12	side-mounted	_	JJ	JJ	_	14	amod	_	_
13	volume	_	NN	NN	_	14	nn	_	_
14	control	_	NN	NN	_	0	root	_	_
15	.	_	.	.	_	0	erased	_	_
#poss(opinion-3, my-2)
#prep_in(control-14, opinion-3)
#det(issue-6, the-4)
#amod(issue-6, worst-5)
#nsubj(control-14, issue-6)
#det(phone-9, this-8)
#prep_on(issue-6, phone-9)
#cop(control-14, is-10)
#det(control-14, the-11)
#amod(control-14, side-mounted-12)
#nn(control-14, volume-13)
#root(ROOT-0, control-14)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	requires	_	VBZ	VBZ	_	0	root	_	_
3	significant	_	JJ	JJ	_	4	amod	_	_
4	force	_	NN	NN	_	2	dobj	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	operate	_	VB	VB	_	4	vmod	_	_
7	which	_	WDT	WDT	_	10	nsubj	_	_
8	can	_	MD	MD	_	10	aux	_	_
9	be	_	VB	VB	_	10	cop	_	_
10	scary	_	JJ	JJ	_	6	ccomp	_	_
11	on	_	IN	IN	_	10	prep	_	_
12	such	_	PDT	PDT	_	15	predet	_	_
13	a	_	DT	DT	_	15	det	_	_
14	small	_	JJ	JJ	_	15	amod	_	_
15	phone	_	NN	NN	_	11	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#nsubj(requires-2, it-1)
#root(ROOT-0, requires-2)
#amod(force-4, significant-3)
#dobj(requires-2, force-4)
#aux(operate-6, to-5)
#vmod(force-4, operate-6)
#nsubj(scary-10, which-7)
#aux(scary-10, can-8)
#cop(scary-10, be-9)
#ccomp(operate-6, scary-10)
#predet(phone-15, such-12)
#det(phone-15, a-13)
#amod(phone-15, small-14)
#prep_on(scary-10, phone-15)
result:
1	one	_	CD	CD	_	3	num	_	_
2	other	_	JJ	JJ	_	3	amod	_	_
3	issue	_	NN	NN	_	4	nsubj	_	_
4	is	_	VBZ	VBZ	_	0	root	_	_
5	that	_	IN	IN	_	10	mark	_	_
6	the	_	DT	DT	_	8	det	_	_
7	headphone	_	JJ	JJ	_	8	amod	_	_
8	jack	_	NN	NN	_	10	nsubj	_	_
9	is	_	VBZ	VBZ	_	10	cop	_	_
10	unique	_	JJ	JJ	_	4	ccomp	_	_
11	to	_	TO	TO	_	10	prep	_	_
12	nokia	_	NN	NN	_	11	pobj	_	_
13	,	_	,	,	_	0	erased	_	_
14	so	_	IN	IN	_	19	mark	_	_
15	standard	_	JJ	JJ	_	16	amod	_	_
16	headphones	_	NNS	NNS	_	19	nsubj	_	_
17	will	_	MD	MD	_	19	aux	_	_
18	not	_	RB	RB	_	19	neg	_	_
19	work	_	VB	VB	_	10	advcl	_	_
20	.	_	.	.	_	0	erased	_	_
#num(issue-3, one-1)
#amod(issue-3, other-2)
#nsubj(is-4, issue-3)
#root(ROOT-0, is-4)
#mark(unique-10, that-5)
#det(jack-8, the-6)
#amod(jack-8, headphone-7)
#nsubj(unique-10, jack-8)
#cop(unique-10, is-9)
#ccomp(is-4, unique-10)
#prep_to(unique-10, nokia-12)
#mark(work-19, so-14)
#amod(headphones-16, standard-15)
#nsubj(work-19, headphones-16)
#aux(work-19, will-17)
#neg(work-19, not-18)
#advcl(unique-10, work-19)
result:
1	overall	_	RB	RB	_	3	advmod	_	_
2	this	_	DT	DT	_	3	nsubj	_	_
3	is	_	VBZ	VBZ	_	0	root	_	_
4	the	_	DT	DT	_	6	det	_	_
5	best	_	JJS	JJS	_	6	amod	_	_
6	phone	_	NN	NN	_	10	nsubj	_	_
7	i	_	FW	FW	_	6	dep	_	_
8	have	_	VBP	VBP	_	10	aux	_	_
9	ever	_	RB	RB	_	10	advmod	_	_
10	owned	_	VBN	VBN	_	3	ccomp	_	_
11	.	_	.	.	_	0	erased	_	_
#advmod(is-3, overall-1)
#nsubj(is-3, this-2)
#root(ROOT-0, is-3)
#det(phone-6, the-4)
#amod(phone-6, best-5)
#nsubj(owned-10, phone-6)
#dep(phone-6, i-7)
#aux(owned-10, have-8)
#advmod(owned-10, ever-9)
#ccomp(is-3, owned-10)
result:
1	any	_	DT	DT	_	2	det	_	_
2	disadvantages	_	NNS	NNS	_	5	nsubjpass	_	_
3	are	_	VBP	VBP	_	5	auxpass	_	_
4	easily	_	RB	RB	_	5	advmod	_	_
5	outweighed	_	VBN	VBN	_	0	root	_	_
6	by	_	IN	IN	_	5	prep	_	_
7	its	_	PRP$	PRP$	_	8	poss	_	_
8	advantages	_	NNS	NNS	_	6	pobj	_	_
9	.	_	.	.	_	0	erased	_	_
#det(disadvantages-2, any-1)
#nsubjpass(outweighed-5, disadvantages-2)
#auxpass(outweighed-5, are-3)
#advmod(outweighed-5, easily-4)
#root(ROOT-0, outweighed-5)
#poss(advantages-8, its-7)
#agent(outweighed-5, advantages-8)
result:
1	nokia	_	NN	NN	_	4	nsubj	_	_
2	does	_	VBZ	VBZ	_	4	aux	_	_
3	not	_	RB	RB	_	4	neg	_	_
4	disappoint	_	VB	VB	_	0	root	_	_
5	in	_	IN	IN	_	4	prep	_	_
6	this	_	DT	DT	_	7	det	_	_
7	model	_	NN	NN	_	5	pobj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(disappoint-4, nokia-1)
#aux(disappoint-4, does-2)
#neg(disappoint-4, not-3)
#root(ROOT-0, disappoint-4)
#det(model-7, this-6)
#prep_in(disappoint-4, model-7)
result:
1	go	_	VB	VB	_	0	root	_	_
2	for	_	IN	IN	_	1	prep	_	_
3	it	_	PRP	PRP	_	2	pobj	_	_
4	!	_	.	.	_	0	erased	_	_
#root(ROOT-0, go-1)
#prep_for(go-1, it-3)
result:
1	i	_	FW	FW	_	5	nsubj	_	_
2	could	_	MD	MD	_	5	aux	_	_
3	n't	_	RB	RB	_	5	neg	_	_
4	be	_	VB	VB	_	5	cop	_	_
5	happier	_	JJR	JJR	_	11	ccomp	_	_
6	with	_	IN	IN	_	5	prep	_	_
7	t-mobile	_	NN	NN	_	6	pobj	_	_
8	either	_	RB	RB	_	5	advmod	_	_
9	,	_	,	,	_	0	erased	_	_
10	i	_	FW	FW	_	11	nsubj	_	_
11	switched	_	VBD	VBD	_	0	root	_	_
12	from	_	IN	IN	_	11	prep	_	_
13	cingular	_	NN	NN	_	12	pobj	_	_
14	.	_	.	.	_	0	erased	_	_
#nsubj(happier-5, i-1)
#aux(happier-5, could-2)
#neg(happier-5, n't-3)
#cop(happier-5, be-4)
#ccomp(switched-11, happier-5)
#prep_with(happier-5, t-mobile-7)
#advmod(happier-5, either-8)
#nsubj(switched-11, i-10)
#root(ROOT-0, switched-11)
#prep_from(switched-11, cingular-13)
result:
1	one	_	CD	CD	_	2	num	_	_
2	complaint	_	NN	NN	_	0	root	_	_
3	...	_	:	:	_	0	erased	_	_
4	the	_	DT	DT	_	5	det	_	_
5	screen	_	NN	NN	_	9	nsubjpass	_	_
6	is	_	VBZ	VBZ	_	9	auxpass	_	_
7	too	_	RB	RB	_	8	advmod	_	_
8	easily	_	RB	RB	_	9	advmod	_	_
9	scratched	_	VBN	VBN	_	2	dep	_	_
10	!	_	.	.	_	0	erased	_	_
#num(complaint-2, one-1)
#root(ROOT-0, complaint-2)
#det(screen-5, the-4)
#nsubjpass(scratched-9, screen-5)
#auxpass(scratched-9, is-6)
#advmod(easily-8, too-7)
#advmod(scratched-9, easily-8)
#dep(complaint-2, scratched-9)
result:
1	but	_	CC	CC	_	3	cc	_	_
2	there	_	EX	EX	_	3	expl	_	_
3	are	_	VBP	VBP	_	0	root	_	_
4	faceplates	_	JJ	JJ	_	3	acomp	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	replace	_	VB	VB	_	4	xcomp	_	_
7	it	_	PRP	PRP	_	6	iobj	_	_
8	i	_	FW	FW	_	6	dobj	_	_
9	guess	_	VB	VB	_	6	dep	_	_
10	...	_	:	:	_	0	erased	_	_
11	almost	_	RB	RB	_	12	advmod	_	_
12	there	_	RB	RB	_	9	advmod	_	_
13	.	_	.	.	_	0	erased	_	_
#cc(are-3, but-1)
#expl(are-3, there-2)
#root(ROOT-0, are-3)
#acomp(are-3, faceplates-4)
#aux(replace-6, to-5)
#xcomp(faceplates-4, replace-6)
#iobj(replace-6, it-7)
#dobj(replace-6, i-8)
#dep(replace-6, guess-9)
#advmod(there-12, almost-11)
#advmod(guess-9, there-12)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	got	_	VBD	VBD	_	0	root	_	_
3	this	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	2	dobj	_	_
5	in	_	IN	IN	_	2	prep	_	_
6	t-mobile	_	NN	NN	_	11	poss	_	_
7	's	_	POS	POS	_	6	possessive	_	_
8	current	_	JJ	JJ	_	11	amod	_	_
9	customer	_	NN	NN	_	11	nn	_	_
10	retention	_	NN	NN	_	11	nn	_	_
11	program	_	NN	NN	_	5	pobj	_	_
12	for	_	IN	IN	_	2	prep	_	_
13	very	_	RB	RB	_	14	advmod	_	_
14	little	_	JJ	JJ	_	15	amod	_	_
15	money	_	NN	NN	_	12	pobj	_	_
16	and	_	CC	CC	_	15	cc	_	_
17	no	_	DT	DT	_	19	neg	_	_
18	contract	_	NN	NN	_	19	nn	_	_
19	renewal	_	NN	NN	_	15	conj	_	_
20	.	_	.	.	_	0	erased	_	_
#nsubj(got-2, i-1)
#root(ROOT-0, got-2)
#det(phone-4, this-3)
#dobj(got-2, phone-4)
#poss(program-11, t-mobile-6)
#amod(program-11, current-8)
#nn(program-11, customer-9)
#nn(program-11, retention-10)
#prep_in(got-2, program-11)
#advmod(little-14, very-13)
#amod(money-15, little-14)
#prep_for(got-2, money-15)
#neg(renewal-19, no-17)
#nn(renewal-19, contract-18)
#prep_for(got-2, renewal-19)
#conj_and(money-15, renewal-19)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	was	_	VBD	VBD	_	0	root	_	_
3	getting	_	VBG	VBG	_	2	xcomp	_	_
4	so	_	RB	RB	_	5	advmod	_	_
5	sick	_	JJ	JJ	_	3	dobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	my	_	PRP$	PRP$	_	10	poss	_	_
8	old	_	JJ	JJ	_	10	amod	_	_
9	motorola	_	NN	NN	_	10	nn	_	_
10	l7089	_	NNS	NNS	_	6	pobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	but	_	CC	CC	_	2	cc	_	_
13	was	_	VBD	VBD	_	14	aux	_	_
14	waiting	_	VBG	VBG	_	2	conj	_	_
15	for	_	IN	IN	_	14	prep	_	_
16	the	_	DT	DT	_	18	det	_	_
17	right	_	JJ	JJ	_	18	amod	_	_
18	phone	_	NN	NN	_	15	pobj	_	_
19	to	_	TO	TO	_	20	aux	_	_
20	come	_	VB	VB	_	14	xcomp	_	_
21	along	_	RP	RP	_	20	prt	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(was-2, i-1)
#nsubj(waiting-14, i-1)
#nsubj(come-20, i-1)
#root(ROOT-0, was-2)
#xcomp(was-2, getting-3)
#advmod(sick-5, so-4)
#dobj(getting-3, sick-5)
#poss(l7089-10, my-7)
#amod(l7089-10, old-8)
#nn(l7089-10, motorola-9)
#prep_of(sick-5, l7089-10)
#aux(waiting-14, was-13)
#conj_but(was-2, waiting-14)
#det(phone-18, the-16)
#amod(phone-18, right-17)
#prep_for(waiting-14, phone-18)
#aux(come-20, to-19)
#xcomp(waiting-14, come-20)
#prt(come-20, along-21)
result:
1	this	_	DT	DT	_	4	nsubj	_	_
2	is	_	VBZ	VBZ	_	4	cop	_	_
3	almost	_	RB	RB	_	4	advmod	_	_
4	it	_	PRP	PRP	_	0	root	_	_
5	but	_	CC	CC	_	4	cc	_	_
6	not	_	RB	RB	_	7	dep	_	_
7	quite	_	RB	RB	_	4	advmod	_	_
8	but	_	CC	CC	_	11	cc	_	_
9	the	_	DT	DT	_	10	det	_	_
10	price	_	NN	NN	_	11	nsubj	_	_
11	was	_	VBD	VBD	_	4	ccomp	_	_
12	right	_	RB	RB	_	11	advmod	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(it-4, this-1)
#cop(it-4, is-2)
#advmod(it-4, almost-3)
#root(ROOT-0, it-4)
#dep(quite-7, not-6)
#advmod(it-4, quite-7)
#conj_but(it-4, quite-7)
#cc(was-11, but-8)
#det(price-10, the-9)
#nsubj(was-11, price-10)
#ccomp(it-4, was-11)
#conj_but(it-4, was-11)
#advmod(was-11, right-12)
result:
1	that	_	WDT	WDT	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	18	csubj	_	_
3	this	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	5	nsubj	_	_
5	does	_	VBZ	VBZ	_	2	ccomp	_	_
6	what	_	WP	WP	_	8	dobj	_	_
7	it	_	PRP	PRP	_	8	nsubj	_	_
8	does	_	VBZ	VBZ	_	5	ccomp	_	_
9	extremely	_	RB	RB	_	10	advmod	_	_
10	well	_	RB	RB	_	8	advmod	_	_
11	-	_	:	:	_	0	erased	_	_
12	way	_	RB	RB	_	13	advmod	_	_
13	better	_	JJR	JJR	_	16	amod	_	_
14	than	_	IN	IN	_	13	prep	_	_
15	anything	_	NN	NN	_	14	pobj	_	_
16	motorola	_	NN	NN	_	8	dobj	_	_
17	can	_	MD	MD	_	18	aux	_	_
18	produce	_	VB	VB	_	0	root	_	_
19	.	_	.	.	_	0	erased	_	_
#nsubj(said-2, that-1)
#csubj(produce-18, said-2)
#det(phone-4, this-3)
#nsubj(does-5, phone-4)
#ccomp(said-2, does-5)
#dobj(does-8, what-6)
#nsubj(does-8, it-7)
#ccomp(does-5, does-8)
#advmod(well-10, extremely-9)
#advmod(does-8, well-10)
#advmod(better-13, way-12)
#amod(motorola-16, better-13)
#prep_than(better-13, anything-15)
#dobj(does-8, motorola-16)
#parataxis(does-8, motorola-16)
#aux(produce-18, can-17)
#root(ROOT-0, produce-18)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	has	_	VBZ	VBZ	_	0	root	_	_
3	great	_	JJ	JJ	_	5	amod	_	_
4	battery	_	NN	NN	_	5	nn	_	_
5	life	_	NN	NN	_	2	dobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	fm	_	NN	NN	_	8	nn	_	_
8	radio	_	NN	NN	_	5	conj	_	_
9	,	_	,	,	_	0	erased	_	_
10	excellent	_	JJ	JJ	_	11	amod	_	_
11	signal	_	NN	NN	_	5	conj	_	_
12	,	_	,	,	_	0	erased	_	_
13	hands	_	NNS	NNS	_	5	conj	_	_
14	free	_	JJ	JJ	_	15	amod	_	_
15	speakerphone	_	JJ	JJ	_	13	amod	_	_
16	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
17	which	_	WDT	WDT	_	19	dobj	_	_
18	i	_	FW	FW	_	19	nsubj	_	_
19	have	_	VBP	VBP	_	13	dep	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	say	_	VB	VB	_	19	xcomp	_	_
22	is	_	VBZ	VBZ	_	26	cop	_	_
23	probably	_	RB	RB	_	26	advmod	_	_
24	my	_	PRP$	PRP$	_	26	poss	_	_
25	favorite	_	JJ	JJ	_	26	amod	_	_
26	function	_	NN	NN	_	21	dep	_	_
27	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
28	and	_	CC	CC	_	5	cc	_	_
29	downloadable	_	JJ	JJ	_	31	amod	_	_
30	java	_	NN	NN	_	31	nn	_	_
31	apps	_	NNS	NNS	_	5	conj	_	_
32	.	_	.	.	_	0	erased	_	_
#nsubj(has-2, it-1)
#root(ROOT-0, has-2)
#amod(life-5, great-3)
#nn(life-5, battery-4)
#dobj(has-2, life-5)
#nn(radio-8, fm-7)
#dobj(has-2, radio-8)
#conj_and(life-5, radio-8)
#amod(signal-11, excellent-10)
#dobj(has-2, signal-11)
#conj_and(life-5, signal-11)
#dobj(has-2, hands-13)
#conj_and(life-5, hands-13)
#amod(speakerphone-15, free-14)
#amod(hands-13, speakerphone-15)
#dobj(have-19, which-17)
#nsubj(say-21, which-17)
#nsubj(have-19, i-18)
#dep(hands-13, have-19)
#aux(say-21, to-20)
#xcomp(have-19, say-21)
#cop(function-26, is-22)
#advmod(function-26, probably-23)
#poss(function-26, my-24)
#amod(function-26, favorite-25)
#dep(say-21, function-26)
#amod(apps-31, downloadable-29)
#nn(apps-31, java-30)
#dobj(has-2, apps-31)
#conj_and(life-5, apps-31)
result:
1	what	_	WP	WP	_	3	dobj	_	_
2	it	_	PRP	PRP	_	3	nsubj	_	_
3	lacks	_	VBZ	VBZ	_	8	csubj	_	_
4	for	_	IN	IN	_	3	prep	_	_
5	me	_	PRP	PRP	_	4	pobj	_	_
6	is	_	VBZ	VBZ	_	8	cop	_	_
7	n't	_	RB	RB	_	8	neg	_	_
8	available	_	JJ	JJ	_	0	root	_	_
9	on	_	IN	IN	_	8	prep	_	_
10	one	_	CD	CD	_	11	num	_	_
11	phone	_	NN	NN	_	9	pobj	_	_
12	yet	_	RB	RB	_	8	advmod	_	_
13	,	_	,	,	_	0	erased	_	_
14	namely	_	RB	RB	_	15	advmod	_	_
15	gsm850	_	JJ	JJ	_	8	dep	_	_
16	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
17	also	_	RB	RB	_	19	dep	_	_
18	sometimes	_	RB	RB	_	19	advmod	_	_
19	known	_	VBN	VBN	_	8	dep	_	_
20	as	_	IN	IN	_	19	prep	_	_
21	gsm800	_	JJ	JJ	_	20	pobj	_	_
22	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
23	,	_	,	,	_	0	erased	_	_
24	bluetooth	_	NN	NN	_	8	advmod	_	_
25	and	_	CC	CC	_	24	cc	_	_
26	edge	_	NN	NN	_	24	conj	_	_
27	.	_	.	.	_	0	erased	_	_
#dobj(lacks-3, what-1)
#nsubj(lacks-3, it-2)
#csubj(available-8, lacks-3)
#prep_for(lacks-3, me-5)
#cop(available-8, is-6)
#neg(available-8, n't-7)
#root(ROOT-0, available-8)
#num(phone-11, one-10)
#prep_on(available-8, phone-11)
#advmod(available-8, yet-12)
#advmod(gsm850-15, namely-14)
#dep(available-8, gsm850-15)
#dep(known-19, also-17)
#advmod(known-19, sometimes-18)
#dep(available-8, known-19)
#prep_as(known-19, gsm800-21)
#advmod(available-8, bluetooth-24)
#advmod(available-8, edge-26)
#conj_and(bluetooth-24, edge-26)
result:
1	so	_	RB	RB	_	2	advmod	_	_
2	when	_	WRB	WRB	_	6	advmod	_	_
3	the	_	DT	DT	_	5	det	_	_
4	quad	_	JJ	JJ	_	5	amod	_	_
5	bands	_	NNS	NNS	_	6	nsubj	_	_
6	start	_	VBP	VBP	_	11	advcl	_	_
7	appearing	_	VBG	VBG	_	6	xcomp	_	_
8	i	_	FW	FW	_	7	dobj	_	_
9	will	_	MD	MD	_	11	aux	_	_
10	be	_	VB	VB	_	11	aux	_	_
11	upgrading	_	VBG	VBG	_	0	root	_	_
12	again	_	RB	RB	_	11	advmod	_	_
13	.	_	.	.	_	0	erased	_	_
#advmod(when-2, so-1)
#advmod(start-6, when-2)
#det(bands-5, the-3)
#amod(bands-5, quad-4)
#nsubj(start-6, bands-5)
#advcl(upgrading-11, start-6)
#csubj(upgrading-11, start-6)
#xcomp(start-6, appearing-7)
#dobj(appearing-7, i-8)
#aux(upgrading-11, will-9)
#aux(upgrading-11, be-10)
#root(ROOT-0, upgrading-11)
#advmod(upgrading-11, again-12)
result:
1	but	_	CC	CC	_	6	cc	_	_
2	for	_	IN	IN	_	6	prep	_	_
3	now	_	RB	RB	_	2	pcomp	_	_
4	this	_	DT	DT	_	6	nsubj	_	_
5	will	_	MD	MD	_	6	aux	_	_
6	do	_	VB	VB	_	0	root	_	_
7	.	_	.	.	_	0	erased	_	_
#cc(do-6, but-1)
#prep(do-6, for-2)
#pcomp(for-2, now-3)
#nsubj(do-6, this-4)
#aux(do-6, will-5)
#root(ROOT-0, do-6)
result:
1	oh	_	UH	UH	_	44	dep	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	before	_	IN	IN	_	11	mark	_	_
4	anyone	_	NN	NN	_	5	nn	_	_
5	comments	_	NNS	NNS	_	11	nsubj	_	_
6	yes	_	UH	UH	_	8	discourse	_	_
7	i	_	FW	FW	_	8	nsubj	_	_
8	know	_	VBP	VBP	_	5	rcmod	_	_
9	motorola	_	NN	NN	_	8	dobj	_	_
10	have	_	VBP	VBP	_	11	aux	_	_
11	announced	_	VBN	VBN	_	1	conj	_	_
12	a	_	DT	DT	_	17	det	_	_
13	quad	_	VBN	VBN	_	17	amod	_	_
14	band	_	NN	NN	_	17	nn	_	_
15	edge	_	NN	NN	_	17	nn	_	_
16	bluetooth	_	NN	NN	_	17	nn	_	_
17	phone	_	NN	NN	_	11	dobj	_	_
18	,	_	,	,	_	0	erased	_	_
19	but	_	CC	CC	_	17	cc	_	_
20	its	_	PRP$	PRP$	_	32	poss	_	_
21	not	_	RB	RB	_	22	neg	_	_
22	shipping	_	VBG	VBG	_	32	amod	_	_
23	at	_	IN	IN	_	22	prep	_	_
24	time	_	NN	NN	_	23	pobj	_	_
25	of	_	IN	IN	_	24	prep	_	_
26	writing	_	VBG	VBG	_	25	pobj	_	_
27	and	_	CC	CC	_	26	cc	_	_
28	the	_	DT	DT	_	31	det	_	_
29	tri-band	_	JJ	JJ	_	31	amod	_	_
30	gsm850	_	JJ	JJ	_	31	amod	_	_
31	phones	_	NNS	NNS	_	26	conj	_	_
32	lack	_	NN	NN	_	17	conj	_	_
33	the	_	DT	DT	_	35	det	_	_
34	gsm900	_	JJ	JJ	_	35	amod	_	_
35	band	_	NN	NN	_	44	nsubj	_	_
36	which	_	WDT	WDT	_	38	nsubj	_	_
37	is	_	VBZ	VBZ	_	38	cop	_	_
38	important	_	JJ	JJ	_	35	rcmod	_	_
39	if	_	IN	IN	_	41	mark	_	_
40	you	_	PRP	PRP	_	41	nsubj	_	_
41	like	_	VBP	VBP	_	38	advcl	_	_
42	me	_	PRP	PRP	_	41	dobj	_	_
43	globally	_	RB	RB	_	41	advmod	_	_
44	roam	_	VBP	VBP	_	0	root	_	_
45	.	_	.	.	_	0	erased	_	_
#dep(roam-44, oh-1)
#mark(announced-11, before-3)
#nn(comments-5, anyone-4)
#nsubj(announced-11, comments-5)
#discourse(know-8, yes-6)
#nsubj(know-8, i-7)
#rcmod(comments-5, know-8)
#dobj(know-8, motorola-9)
#aux(announced-11, have-10)
#conj_and(oh-1, announced-11)
#dep(roam-44, announced-11)
#det(phone-17, a-12)
#amod(phone-17, quad-13)
#nn(phone-17, band-14)
#nn(phone-17, edge-15)
#nn(phone-17, bluetooth-16)
#dobj(announced-11, phone-17)
#poss(lack-32, its-20)
#neg(shipping-22, not-21)
#amod(lack-32, shipping-22)
#prep_at(shipping-22, time-24)
#prep_of(time-24, writing-26)
#det(phones-31, the-28)
#amod(phones-31, tri-band-29)
#amod(phones-31, gsm850-30)
#prep_of(time-24, phones-31)
#conj_and(writing-26, phones-31)
#dobj(announced-11, lack-32)
#conj_but(phone-17, lack-32)
#det(band-35, the-33)
#amod(band-35, gsm900-34)
#nsubj(important-38, band-35)
#nsubj(roam-44, band-35)
#cop(important-38, is-37)
#rcmod(band-35, important-38)
#mark(like-41, if-39)
#nsubj(like-41, you-40)
#advcl(important-38, like-41)
#dobj(like-41, me-42)
#advmod(like-41, globally-43)
#root(ROOT-0, roam-44)
result:
1	great	_	JJ	JJ	_	2	nsubj	_	_
2	phone	_	VBP	VBP	_	0	root	_	_
3	.	_	.	.	_	0	erased	_	_
4	.	_	.	.	_	0	erased	_	_
5	.	_	.	.	_	0	erased	_	_
#nsubj(phone-2, great-1)
#root(ROOT-0, phone-2)
result:
1	great	_	JJ	JJ	_	2	nsubj	_	_
2	features	_	VBZ	VBZ	_	0	root	_	_
3	.	_	.	.	_	0	erased	_	_
4	.	_	.	.	_	0	erased	_	_
5	.	_	.	.	_	0	erased	_	_
#nsubj(features-2, great-1)
#root(ROOT-0, features-2)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	purchased	_	VBD	VBD	_	0	root	_	_
3	this	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	2	dobj	_	_
5	after	_	IN	IN	_	2	prep	_	_
6	having	_	VBG	VBG	_	12	aux	_	_
7	been	_	VBN	VBN	_	12	cop	_	_
8	an	_	DT	DT	_	12	det	_	_
9	at	_	IN	IN	_	11	quantmod	_	_
10	&#38;	_	CD	CD	_	11	number	_	_
11	t	_	CD	CD	_	12	num	_	_
12	subscriber	_	NN	NN	_	5	pcomp	_	_
13	with	_	IN	IN	_	12	prep	_	_
14	a	_	DT	DT	_	15	det	_	_
15	nokia	_	NN	NN	_	13	pobj	_	_
16	8260	_	CD	CD	_	17	number	_	_
17	phone	_	NN	NN	_	15	amod	_	_
18	for	_	IN	IN	_	2	prep	_	_
19	over	_	IN	IN	_	20	quantmod	_	_
20	three	_	CD	CD	_	21	num	_	_
21	years	_	NNS	NNS	_	18	pobj	_	_
22	.	_	.	.	_	0	erased	_	_
#nsubj(purchased-2, i-1)
#root(ROOT-0, purchased-2)
#det(phone-4, this-3)
#dobj(purchased-2, phone-4)
#aux(subscriber-12, having-6)
#cop(subscriber-12, been-7)
#det(subscriber-12, an-8)
#quantmod(t-11, at-9)
#number(t-11, &#38;-10)
#num(subscriber-12, t-11)
#prepc_after(purchased-2, subscriber-12)
#det(nokia-15, a-14)
#prep_with(subscriber-12, nokia-15)
#number(phone-17, 8260-16)
#amod(nokia-15, phone-17)
#quantmod(three-20, over-19)
#num(years-21, three-20)
#prep_for(purchased-2, years-21)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	did	_	VBD	VBD	_	0	root	_	_
3	a	_	DT	DT	_	4	det	_	_
4	ton	_	NN	NN	_	2	dobj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	research	_	NN	NN	_	5	pobj	_	_
7	and	_	CC	CC	_	2	cc	_	_
8	settled	_	VBD	VBD	_	2	conj	_	_
9	on	_	IN	IN	_	8	prep	_	_
10	this	_	DT	DT	_	11	det	_	_
11	phone	_	NN	NN	_	9	pobj	_	_
12	because	_	IN	IN	_	19	mark	_	_
13	of	_	IN	IN	_	19	prep	_	_
14	the	_	DT	DT	_	16	det	_	_
15	small	_	JJ	JJ	_	16	amod	_	_
16	size	_	NN	NN	_	13	pobj	_	_
17	,	_	,	,	_	0	erased	_	_
18	speakerphone	_	JJ	JJ	_	19	amod	_	_
19	option	_	NN	NN	_	11	dep	_	_
20	,	_	,	,	_	0	erased	_	_
21	great	_	JJ	JJ	_	22	advmod	_	_
22	priced	_	VBN	VBN	_	19	vmod	_	_
23	calling	_	VBG	VBG	_	22	xcomp	_	_
24	plan	_	NN	NN	_	23	dobj	_	_
25	and	_	CC	CC	_	24	cc	_	_
26	access	_	NN	NN	_	24	conj	_	_
27	to	_	TO	TO	_	23	prep	_	_
28	my	_	PRP$	PRP$	_	30	poss	_	_
29	corporate	_	JJ	JJ	_	30	amod	_	_
30	email	_	NN	NN	_	27	pobj	_	_
31	.	_	.	.	_	0	erased	_	_
#nsubj(did-2, i-1)
#nsubj(settled-8, i-1)
#root(ROOT-0, did-2)
#det(ton-4, a-3)
#dobj(did-2, ton-4)
#prep_of(ton-4, research-6)
#conj_and(did-2, settled-8)
#det(phone-11, this-10)
#prep_on(settled-8, phone-11)
#mark(option-19, because-12)
#det(size-16, the-14)
#amod(size-16, small-15)
#prep_of(option-19, size-16)
#amod(option-19, speakerphone-18)
#dep(phone-11, option-19)
#advmod(priced-22, great-21)
#vmod(option-19, priced-22)
#xcomp(priced-22, calling-23)
#dobj(calling-23, plan-24)
#dobj(calling-23, access-26)
#conj_and(plan-24, access-26)
#poss(email-30, my-28)
#amod(email-30, corporate-29)
#prep_to(calling-23, email-30)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	went	_	VBD	VBD	_	0	root	_	_
3	to	_	TO	TO	_	2	prep	_	_
4	an	_	DT	DT	_	8	det	_	_
5	at	_	IN	IN	_	6	quantmod	_	_
6	&#38;	_	CD	CD	_	8	num	_	_
7	t	_	NN	NN	_	8	nn	_	_
8	store	_	NN	NN	_	3	pobj	_	_
9	before	_	IN	IN	_	11	mark	_	_
10	i	_	FW	FW	_	11	nsubj	_	_
11	bought	_	VBD	VBD	_	2	advcl	_	_
12	this	_	DT	DT	_	13	det	_	_
13	phone	_	NN	NN	_	11	dobj	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	see	_	VB	VB	_	11	vmod	_	_
16	if	_	IN	IN	_	19	mark	_	_
17	it	_	PRP	PRP	_	19	nsubj	_	_
18	was	_	VBD	VBD	_	19	cop	_	_
19	possible	_	JJ	JJ	_	15	advcl	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	get	_	VB	VB	_	19	xcomp	_	_
22	corporate	_	JJ	JJ	_	23	amod	_	_
23	email	_	NN	NN	_	21	dobj	_	_
24	with	_	IN	IN	_	21	prep	_	_
25	any	_	DT	DT	_	24	pobj	_	_
26	of	_	IN	IN	_	25	prep	_	_
27	their	_	PRP$	PRP$	_	28	poss	_	_
28	services	_	NNS	NNS	_	26	pobj	_	_
29	and	_	CC	CC	_	2	cc	_	_
30	they	_	PRP	PRP	_	31	nsubj	_	_
31	looked	_	VBD	VBD	_	2	conj	_	_
32	at	_	IN	IN	_	31	prep	_	_
33	me	_	PRP	PRP	_	32	pobj	_	_
34	like	_	IN	IN	_	36	mark	_	_
35	i	_	FW	FW	_	36	nsubj	_	_
36	had	_	VBD	VBD	_	31	advcl	_	_
37	three	_	CD	CD	_	38	num	_	_
38	heads	_	NNS	NNS	_	36	dobj	_	_
39	.	_	.	.	_	0	erased	_	_
#nsubj(went-2, i-1)
#root(ROOT-0, went-2)
#det(store-8, an-4)
#quantmod(&#38;-6, at-5)
#num(store-8, &#38;-6)
#nn(store-8, t-7)
#prep_to(went-2, store-8)
#mark(bought-11, before-9)
#nsubj(bought-11, i-10)
#advcl(went-2, bought-11)
#det(phone-13, this-12)
#dobj(bought-11, phone-13)
#aux(see-15, to-14)
#vmod(bought-11, see-15)
#mark(possible-19, if-16)
#nsubj(possible-19, it-17)
#nsubj(get-21, it-17)
#cop(possible-19, was-18)
#advcl(see-15, possible-19)
#aux(get-21, to-20)
#xcomp(possible-19, get-21)
#amod(email-23, corporate-22)
#dobj(get-21, email-23)
#prep_with(get-21, any-25)
#poss(services-28, their-27)
#prep_of(any-25, services-28)
#nsubj(looked-31, they-30)
#conj_and(went-2, looked-31)
#prep_at(looked-31, me-33)
#mark(had-36, like-34)
#nsubj(had-36, i-35)
#advcl(looked-31, had-36)
#num(heads-38, three-37)
#dobj(had-36, heads-38)
result:
1	they	_	PRP	PRP	_	2	nsubj	_	_
2	told	_	VBD	VBD	_	0	root	_	_
3	me	_	PRP	PRP	_	2	dobj	_	_
4	i	_	FW	FW	_	6	nsubj	_	_
5	would	_	MD	MD	_	6	aux	_	_
6	have	_	VB	VB	_	2	dep	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	connect	_	VB	VB	_	6	xcomp	_	_
9	to	_	TO	TO	_	8	prep	_	_
10	my	_	PRP$	PRP$	_	11	poss	_	_
11	laptop	_	NN	NN	_	9	pobj	_	_
12	,	_	,	,	_	0	erased	_	_
13	which	_	WDT	WDT	_	14	nsubj	_	_
14	had	_	VBD	VBD	_	11	rcmod	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	be	_	VB	VB	_	14	xcomp	_	_
17	on	_	IN	IN	_	16	prep	_	_
18	and	_	CC	CC	_	14	cc	_	_
19	connected	_	VBN	VBN	_	14	conj	_	_
20	to	_	TO	TO	_	19	prep	_	_
21	my	_	PRP$	PRP$	_	23	poss	_	_
22	corporate	_	JJ	JJ	_	23	amod	_	_
23	network	_	NN	NN	_	20	pobj	_	_
24	through	_	IN	IN	_	19	prep	_	_
25	the	_	DT	DT	_	26	det	_	_
26	phone	_	NN	NN	_	24	pobj	_	_
27	in	_	IN	IN	_	19	prep	_	_
28	order	_	NN	NN	_	27	pobj	_	_
29	to	_	TO	TO	_	30	aux	_	_
30	access	_	VB	VB	_	19	xcomp	_	_
31	my	_	PRP$	PRP$	_	33	poss	_	_
32	corporate	_	JJ	JJ	_	33	amod	_	_
33	email	_	NN	NN	_	30	dobj	_	_
34	.	_	.	.	_	0	erased	_	_
#nsubj(told-2, they-1)
#root(ROOT-0, told-2)
#dobj(told-2, me-3)
#nsubj(have-6, i-4)
#nsubj(connect-8, i-4)
#aux(have-6, would-5)
#dep(told-2, have-6)
#aux(connect-8, to-7)
#xcomp(have-6, connect-8)
#poss(laptop-11, my-10)
#prep_to(connect-8, laptop-11)
#nsubj(had-14, laptop-11)
#nsubj(be-16, laptop-11)
#prep_on(be-16, laptop-11)
#nsubj(connected-19, laptop-11)
#nsubj(access-30, laptop-11)
#rcmod(laptop-11, had-14)
#aux(be-16, to-15)
#xcomp(had-14, be-16)
#rcmod(laptop-11, connected-19)
#conj_and(had-14, connected-19)
#poss(network-23, my-21)
#amod(network-23, corporate-22)
#prep_to(connected-19, network-23)
#det(phone-26, the-25)
#prep_through(connected-19, phone-26)
#prep_in(connected-19, order-28)
#aux(access-30, to-29)
#xcomp(connected-19, access-30)
#poss(email-33, my-31)
#amod(email-33, corporate-32)
#dobj(access-30, email-33)
result:
1	with	_	IN	IN	_	12	prep	_	_
2	the	_	DT	DT	_	5	det	_	_
3	t-mobile	_	JJ	JJ	_	5	amod	_	_
4	unlimited	_	JJ	JJ	_	5	amod	_	_
5	t-zones	_	NNS	NNS	_	1	pobj	_	_
6	for	_	IN	IN	_	5	prep	_	_
7	$	_	$	$	_	6	pobj	_	_
8	10	_	CD	CD	_	7	num	_	_
9	,	_	,	,	_	0	erased	_	_
10	i	_	FW	FW	_	12	nsubj	_	_
11	can	_	MD	MD	_	12	aux	_	_
12	check	_	VB	VB	_	0	root	_	_
13	any	_	DT	DT	_	14	det	_	_
14	number	_	NN	NN	_	12	dobj	_	_
15	of	_	IN	IN	_	14	prep	_	_
16	email	_	NN	NN	_	17	nn	_	_
17	addresses	_	NNS	NNS	_	15	pobj	_	_
18	and	_	CC	CC	_	12	cc	_	_
19	use	_	VB	VB	_	12	conj	_	_
20	unlimited	_	JJ	JJ	_	21	amod	_	_
21	internet	_	NN	NN	_	19	dobj	_	_
22	.	_	.	.	_	0	erased	_	_
#det(t-zones-5, the-2)
#amod(t-zones-5, t-mobile-3)
#amod(t-zones-5, unlimited-4)
#prep_with(check-12, t-zones-5)
#prep_for(t-zones-5, $-7)
#num($-7, 10-8)
#nsubj(check-12, i-10)
#nsubj(use-19, i-10)
#aux(check-12, can-11)
#root(ROOT-0, check-12)
#det(number-14, any-13)
#dobj(check-12, number-14)
#nn(addresses-17, email-16)
#prep_of(number-14, addresses-17)
#conj_and(check-12, use-19)
#amod(internet-21, unlimited-20)
#dobj(use-19, internet-21)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	have	_	VBD	VBD	_	3	aux	_	_
3	had	_	VBN	VBN	_	0	root	_	_
4	no	_	DT	DT	_	5	neg	_	_
5	problems	_	NNS	NNS	_	3	dobj	_	_
6	with	_	IN	IN	_	3	prep	_	_
7	the	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	6	pobj	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(had-3, i-1)
#aux(had-3, have-2)
#root(ROOT-0, had-3)
#neg(problems-5, no-4)
#dobj(had-3, problems-5)
#det(phone-8, the-7)
#prep_with(had-3, phone-8)
result:
1	friends	_	NNS	NNS	_	6	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	mine	_	NN	NN	_	2	pobj	_	_
4	are	_	VBP	VBP	_	6	aux	_	_
5	always	_	RB	RB	_	6	advmod	_	_
6	asking	_	VBG	VBG	_	0	root	_	_
7	about	_	IN	IN	_	6	prep	_	_
8	it	_	PRP	PRP	_	7	pobj	_	_
9	and	_	CC	CC	_	6	cc	_	_
10	wanting	_	VBG	VBG	_	6	conj	_	_
11	to	_	TO	TO	_	12	aux	_	_
12	use	_	VB	VB	_	10	xcomp	_	_
13	it	_	PRP	PRP	_	12	dobj	_	_
14	.	_	.	.	_	0	erased	_	_
#nsubj(asking-6, friends-1)
#nsubj(wanting-10, friends-1)
#nsubj(use-12, friends-1)
#prep_of(friends-1, mine-3)
#aux(asking-6, are-4)
#advmod(asking-6, always-5)
#root(ROOT-0, asking-6)
#prep_about(asking-6, it-8)
#conj_and(asking-6, wanting-10)
#aux(use-12, to-11)
#xcomp(wanting-10, use-12)
#dobj(use-12, it-13)
result:
1	i	_	FW	FW	_	7	nsubj	_	_
2	've	_	VBP	VBP	_	7	parataxis	_	_
3	even	_	RB	RB	_	4	advmod	_	_
4	had	_	VBD	VBD	_	2	dep	_	_
5	one	_	CD	CD	_	6	num	_	_
6	friend	_	NN	NN	_	4	nsubj	_	_
7	buy	_	VBP	VBP	_	0	root	_	_
8	one	_	CD	CD	_	7	dobj	_	_
9	immediately	_	RB	RB	_	10	advmod	_	_
10	after	_	IN	IN	_	7	prep	_	_
11	a	_	DT	DT	_	13	det	_	_
12	test	_	NN	NN	_	13	nn	_	_
13	drive	_	NN	NN	_	10	pobj	_	_
14	.	_	.	.	_	0	erased	_	_
#nsubj(buy-7, i-1)
#parataxis(buy-7, 've-2)
#advmod(had-4, even-3)
#dep('ve-2, had-4)
#num(friend-6, one-5)
#nsubj(had-4, friend-6)
#root(ROOT-0, buy-7)
#dobj(buy-7, one-8)
#advmod(buy-7, immediately-9)
#det(drive-13, a-11)
#nn(drive-13, test-12)
#prep_after(buy-7, drive-13)
result:
1	great	_	JJ	JJ	_	2	amod	_	_
2	phone	_	NN	NN	_	6	nsubj	_	_
3	,	_	,	,	_	0	erased	_	_
4	i	_	FW	FW	_	6	nsubj	_	_
5	'd	_	MD	MD	_	6	aux	_	_
6	buy	_	VB	VB	_	0	root	_	_
7	another	_	DT	DT	_	6	dobj	_	_
8	.	_	.	.	_	0	erased	_	_
#amod(phone-2, great-1)
#nsubj(buy-6, phone-2)
#nsubj(buy-6, i-4)
#aux(buy-6, 'd-5)
#root(ROOT-0, buy-6)
#dobj(buy-6, another-7)
result:
1	excellent	_	JJ	JJ	_	2	amod	_	_
2	phone	_	NN	NN	_	6	nsubj	_	_
3	,	_	,	,	_	0	erased	_	_
4	the	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	6	nsubj	_	_
6	looks	_	VBZ	VBZ	_	0	root	_	_
7	much	_	RB	RB	_	8	advmod	_	_
8	better	_	JJR	JJR	_	6	acomp	_	_
9	than	_	IN	IN	_	8	prep	_	_
10	what	_	WP	WP	_	12	nsubj	_	_
11	u	_	RB	RB	_	12	advmod	_	_
12	see	_	VBP	VBP	_	9	pcomp	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	the	_	DT	DT	_	15	det	_	_
15	pictures	_	NNS	NNS	_	13	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#amod(phone-2, excellent-1)
#nsubj(looks-6, phone-2)
#det(phone-5, the-4)
#nsubj(looks-6, phone-5)
#root(ROOT-0, looks-6)
#advmod(better-8, much-7)
#acomp(looks-6, better-8)
#nsubj(see-12, what-10)
#advmod(see-12, u-11)
#prepc_than(better-8, see-12)
#det(pictures-15, the-14)
#prep_in(see-12, pictures-15)
result:
1	bluetooth	_	JJ	JJ	_	2	amod	_	_
2	functionality	_	NN	NN	_	5	nsubj	_	_
3	would	_	MD	MD	_	5	aux	_	_
4	have	_	VB	VB	_	5	aux	_	_
5	made	_	VBN	VBN	_	0	root	_	_
6	the	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	9	nsubj	_	_
8	even	_	RB	RB	_	9	advmod	_	_
9	better	_	JJR	JJR	_	5	xcomp	_	_
10	.	_	.	.	_	0	erased	_	_
#amod(functionality-2, bluetooth-1)
#nsubj(made-5, functionality-2)
#aux(made-5, would-3)
#aux(made-5, have-4)
#root(ROOT-0, made-5)
#det(phone-7, the-6)
#nsubj(better-9, phone-7)
#advmod(better-9, even-8)
#xcomp(made-5, better-9)
result:
1	one	_	CD	CD	_	3	num	_	_
2	more	_	JJR	JJR	_	1	quantmod	_	_
3	thing	_	NN	NN	_	14	nsubj	_	_
4	,	_	,	,	_	0	erased	_	_
5	the	_	DT	DT	_	7	det	_	_
6	default	_	JJ	JJ	_	7	amod	_	_
7	ringtones	_	NNS	NNS	_	14	nsubj	_	_
8	that	_	WDT	WDT	_	9	nsubj	_	_
9	come	_	VBP	VBP	_	7	rcmod	_	_
10	with	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	phone	_	NN	NN	_	10	pobj	_	_
13	are	_	VBP	VBP	_	14	cop	_	_
14	horrible	_	JJ	JJ	_	0	root	_	_
15	.	_	.	.	_	0	erased	_	_
#num(thing-3, one-1)
#quantmod(one-1, more-2)
#nsubj(horrible-14, thing-3)
#det(ringtones-7, the-5)
#amod(ringtones-7, default-6)
#nsubj(come-9, ringtones-7)
#nsubj(horrible-14, ringtones-7)
#rcmod(ringtones-7, come-9)
#det(phone-12, the-11)
#prep_with(come-9, phone-12)
#cop(horrible-14, are-13)
#root(ROOT-0, horrible-14)
result:
1	overall	_	JJ	JJ	_	4	dep	_	_
2	an	_	DT	DT	_	4	det	_	_
3	excellent	_	JJ	JJ	_	4	amod	_	_
4	phone	_	NN	NN	_	0	root	_	_
5	.	_	.	.	_	0	erased	_	_
#dep(phone-4, overall-1)
#det(phone-4, an-2)
#amod(phone-4, excellent-3)
#root(ROOT-0, phone-4)
result:
1	the	_	DT	DT	_	2	det	_	_
2	service	_	NN	NN	_	7	nsubj	_	_
3	from	_	IN	IN	_	2	prep	_	_
4	t-mobile	_	NN	NN	_	3	pobj	_	_
5	is	_	VBZ	VBZ	_	7	cop	_	_
6	very	_	RB	RB	_	7	advmod	_	_
7	good	_	JJ	JJ	_	0	root	_	_
8	too	_	RB	RB	_	7	advmod	_	_
9	.	_	.	.	_	0	erased	_	_
#det(service-2, the-1)
#nsubj(good-7, service-2)
#prep_from(service-2, t-mobile-4)
#cop(good-7, is-5)
#advmod(good-7, very-6)
#root(ROOT-0, good-7)
#advmod(good-7, too-8)
result:
1	in	_	IN	IN	_	0	root	_	_
2	all	_	PDT	PDT	_	5	predet	_	_
3	a	_	DT	DT	_	5	det	_	_
4	winning	_	JJ	JJ	_	5	amod	_	_
5	combination	_	NN	NN	_	1	pobj	_	_
6	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, in-1)
#predet(combination-5, all-2)
#det(combination-5, a-3)
#amod(combination-5, winning-4)
#pobj(in-1, combination-5)
result:
1	worth	_	IN	IN	_	0	root	_	_
2	every	_	DT	DT	_	3	det	_	_
3	penny	_	NN	NN	_	1	pobj	_	_
4	!	_	.	.	_	0	erased	_	_
#root(ROOT-0, worth-1)
#det(penny-3, every-2)
#pobj(worth-1, penny-3)
result:
1	great	_	JJ	JJ	_	2	amod	_	_
2	phone	_	NN	NN	_	12	dep	_	_
3	,	_	,	,	_	0	erased	_	_
4	easy	_	JJ	JJ	_	12	dep	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	use	_	VB	VB	_	4	xcomp	_	_
7	,	_	,	,	_	0	erased	_	_
8	excellent	_	JJ	JJ	_	9	amod	_	_
9	network	_	NN	NN	_	6	dep	_	_
10	,	_	,	,	_	0	erased	_	_
11	no	_	DT	DT	_	12	advmod	_	_
12	regrets	_	VBZ	VBZ	_	0	root	_	_
13	!	_	.	.	_	0	erased	_	_
14	!	_	.	.	_	0	erased	_	_
15	!	_	.	.	_	0	erased	_	_
#amod(phone-2, great-1)
#dep(regrets-12, phone-2)
#dep(regrets-12, easy-4)
#aux(use-6, to-5)
#xcomp(easy-4, use-6)
#amod(network-9, excellent-8)
#dep(use-6, network-9)
#advmod(regrets-12, no-11)
#root(ROOT-0, regrets-12)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	purchased	_	VBD	VBD	_	0	root	_	_
3	this	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	13	nsubj	_	_
5	for	_	IN	IN	_	4	prep	_	_
6	just	_	RB	RB	_	7	quantmod	_	_
7	50	_	CD	CD	_	5	pobj	_	_
8	$	_	$	$	_	7	dep	_	_
9	and	_	CC	CC	_	10	cc	_	_
10	there	_	RB	RB	_	8	num	_	_
11	is	_	VBZ	VBZ	_	13	cop	_	_
12	no	_	DT	DT	_	13	neg	_	_
13	end	_	NN	NN	_	2	ccomp	_	_
14	to	_	TO	TO	_	18	prep	_	_
15	what	_	WP	WP	_	14	pobj	_	_
16	i	_	FW	FW	_	18	nsubj	_	_
17	can	_	MD	MD	_	18	aux	_	_
18	do	_	VB	VB	_	13	rcmod	_	_
19	with	_	IN	IN	_	18	prep	_	_
20	it	_	PRP	PRP	_	19	pobj	_	_
21	.	_	.	.	_	0	erased	_	_
#nsubj(purchased-2, i-1)
#root(ROOT-0, purchased-2)
#det(phone-4, this-3)
#nsubj(end-13, phone-4)
#quantmod(50-7, just-6)
#prep_for(phone-4, 50-7)
#dep(50-7, $-8)
#cc(there-10, and-9)
#num($-8, there-10)
#cop(end-13, is-11)
#neg(end-13, no-12)
#ccomp(purchased-2, end-13)
#prep_to(do-18, end-13)
#nsubj(do-18, i-16)
#aux(do-18, can-17)
#rcmod(end-13, do-18)
#prep_with(do-18, it-20)
result:
1	nokia	_	NN	NN	_	5	nsubj	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	t-mobile	_	NN	NN	_	1	conj	_	_
4	really	_	RB	RB	_	5	advmod	_	_
5	teamed	_	VBD	VBD	_	0	root	_	_
6	up	_	RP	RP	_	5	prt	_	_
7	well	_	RB	RB	_	5	advmod	_	_
8	on	_	IN	IN	_	5	prep	_	_
9	this	_	DT	DT	_	10	det	_	_
10	baby	_	NN	NN	_	8	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#nsubj(teamed-5, nokia-1)
#conj_and(nokia-1, t-mobile-3)
#nsubj(teamed-5, t-mobile-3)
#advmod(teamed-5, really-4)
#root(ROOT-0, teamed-5)
#prt(teamed-5, up-6)
#advmod(teamed-5, well-7)
#det(baby-10, this-9)
#prep_on(teamed-5, baby-10)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	puts	_	VBZ	VBZ	_	0	root	_	_
3	an	_	DT	DT	_	4	det	_	_
4	end	_	NN	NN	_	2	dobj	_	_
5	to	_	TO	TO	_	2	prep	_	_
6	organizational	_	JJ	JJ	_	7	amod	_	_
7	deficiencies	_	NNS	NNS	_	5	pobj	_	_
8	as	_	RB	RB	_	9	advmod	_	_
9	well	_	RB	RB	_	7	advmod	_	_
10	as	_	IN	IN	_	9	prep	_	_
11	communications	_	NNS	NNS	_	10	pobj	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	internet	_	NN	NN	_	11	conj	_	_
14	,	_	,	,	_	0	erased	_	_
15	without	_	IN	IN	_	2	prep	_	_
16	a	_	DT	DT	_	18	det	_	_
17	bulky	_	JJ	JJ	_	18	amod	_	_
18	phone	_	NN	NN	_	15	pobj	_	_
19	like	_	IN	IN	_	2	prep	_	_
20	the	_	DT	DT	_	21	det	_	_
21	treo	_	NN	NN	_	19	pobj	_	_
22	or	_	CC	CC	_	21	cc	_	_
23	something	_	NN	NN	_	21	conj	_	_
24	,	_	,	,	_	0	erased	_	_
25	which	_	WDT	WDT	_	27	dobj	_	_
26	i	_	FW	FW	_	27	nsubj	_	_
27	had	_	VBD	VBD	_	21	rcmod	_	_
28	to	_	TO	TO	_	27	prep	_	_
29	cell	_	NN	NN	_	28	pobj	_	_
30	because	_	IN	IN	_	34	mark	_	_
31	i	_	FW	FW	_	34	nsubj	_	_
32	was	_	VBD	VBD	_	34	cop	_	_
33	so	_	RB	RB	_	34	advmod	_	_
34	unhappy	_	JJ	JJ	_	27	advcl	_	_
35	with	_	IN	IN	_	34	prep	_	_
36	it	_	PRP	PRP	_	35	pobj	_	_
37	.	_	.	.	_	0	erased	_	_
#nsubj(puts-2, it-1)
#root(ROOT-0, puts-2)
#det(end-4, an-3)
#dobj(puts-2, end-4)
#amod(deficiencies-7, organizational-6)
#prep_to(puts-2, deficiencies-7)
#advmod(well-9, as-8)
#mwe(well-9, as-8)
#advmod(deficiencies-7, well-9)
#prep_as(well-9, communications-11)
#prep_as(well-9, internet-13)
#conj_and(communications-11, internet-13)
#det(phone-18, a-16)
#amod(phone-18, bulky-17)
#prep_without(puts-2, phone-18)
#det(treo-21, the-20)
#prep_like(puts-2, treo-21)
#dobj(had-27, treo-21)
#prep_like(puts-2, something-23)
#conj_or(treo-21, something-23)
#dobj(had-27, something-23)
#nsubj(had-27, i-26)
#rcmod(treo-21, had-27)
#prep_to(had-27, cell-29)
#mark(unhappy-34, because-30)
#nsubj(unhappy-34, i-31)
#cop(unhappy-34, was-32)
#advmod(unhappy-34, so-33)
#advcl(had-27, unhappy-34)
#prep_with(unhappy-34, it-36)
result:
1	now	_	RB	RB	_	9	advmod	_	_
2	my	_	PRP$	PRP$	_	4	poss	_	_
3	little	_	JJ	JJ	_	4	amod	_	_
4	6610	_	NN	NN	_	9	nsubj	_	_
5	is	_	VBZ	VBZ	_	9	cop	_	_
6	the	_	DT	DT	_	9	det	_	_
7	most	_	RBS	RBS	_	8	advmod	_	_
8	coveted	_	JJ	JJ	_	9	amod	_	_
9	item	_	NN	NN	_	0	root	_	_
10	at	_	IN	IN	_	9	prep	_	_
11	school	_	NN	NN	_	10	pobj	_	_
12	!	_	.	.	_	0	erased	_	_
#advmod(item-9, now-1)
#poss(6610-4, my-2)
#amod(6610-4, little-3)
#nsubj(item-9, 6610-4)
#cop(item-9, is-5)
#det(item-9, the-6)
#advmod(coveted-8, most-7)
#amod(item-9, coveted-8)
#root(ROOT-0, item-9)
#prep_at(item-9, school-11)
result:
1	people	_	NNS	NNS	_	3	nsubj	_	_
2	have	_	VBP	VBP	_	3	aux	_	_
3	paid	_	VBN	VBN	_	0	root	_	_
4	me	_	PRP	PRP	_	8	nsubj	_	_
5	money	_	NN	NN	_	8	dep	_	_
6	just	_	RB	RB	_	8	advmod	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	borrow	_	VB	VB	_	3	xcomp	_	_
9	it	_	PRP	PRP	_	8	dobj	_	_
10	because	_	IN	IN	_	8	prep	_	_
11	its	_	PRP$	PRP$	_	13	poss	_	_
12	so	_	RB	RB	_	13	advmod	_	_
13	elegant	_	JJ	JJ	_	10	pobj	_	_
14	.	_	.	.	_	0	erased	_	_
#nsubj(paid-3, people-1)
#aux(paid-3, have-2)
#root(ROOT-0, paid-3)
#nsubj(borrow-8, me-4)
#dep(borrow-8, money-5)
#advmod(borrow-8, just-6)
#aux(borrow-8, to-7)
#xcomp(paid-3, borrow-8)
#dobj(borrow-8, it-9)
#poss(elegant-13, its-11)
#advmod(elegant-13, so-12)
#prep_because(borrow-8, elegant-13)
result:
1	service	_	NN	NN	_	3	nsubj	_	_
2	is	_	VBZ	VBZ	_	3	cop	_	_
3	great	_	JJ	JJ	_	0	root	_	_
4	as	_	RB	RB	_	5	advmod	_	_
5	far	_	RB	RB	_	3	advmod	_	_
6	as	_	IN	IN	_	9	mark	_	_
7	i	_	FW	FW	_	9	nsubj	_	_
8	can	_	MD	MD	_	9	aux	_	_
9	tell	_	VB	VB	_	5	advcl	_	_
10	,	_	,	,	_	0	erased	_	_
11	features	_	NNS	NNS	_	12	nsubj	_	_
12	work	_	VBP	VBP	_	9	parataxis	_	_
13	like	_	IN	IN	_	12	prep	_	_
14	a	_	DT	DT	_	15	det	_	_
15	charm	_	NN	NN	_	13	pobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	ringtones	_	NNS	NNS	_	20	nsubj	_	_
18	are	_	VBP	VBP	_	20	cop	_	_
19	high	_	JJ	JJ	_	20	amod	_	_
20	quality	_	NN	NN	_	9	ccomp	_	_
21	if	_	IN	IN	_	23	mark	_	_
22	you	_	PRP	PRP	_	23	nsubj	_	_
23	buy	_	VBP	VBP	_	3	advcl	_	_
24	them	_	PRP	PRP	_	23	dobj	_	_
25	from	_	IN	IN	_	23	prep	_	_
26	t-mobile	_	NN	NN	_	25	pobj	_	_
27	and	_	CC	CC	_	23	cc	_	_
28	aim	_	NN	NN	_	30	nsubj	_	_
29	is	_	VBZ	VBZ	_	30	cop	_	_
30	great	_	JJ	JJ	_	23	conj	_	_
31	.	_	.	.	_	0	erased	_	_
#nsubj(great-3, service-1)
#cop(great-3, is-2)
#root(ROOT-0, great-3)
#advmod(far-5, as-4)
#advmod(great-3, far-5)
#mark(tell-9, as-6)
#nsubj(tell-9, i-7)
#aux(tell-9, can-8)
#advcl(far-5, tell-9)
#ccomp(far-5, tell-9)
#nsubj(work-12, features-11)
#parataxis(tell-9, work-12)
#det(charm-15, a-14)
#prep_like(work-12, charm-15)
#nsubj(quality-20, ringtones-17)
#cop(quality-20, are-18)
#amod(quality-20, high-19)
#ccomp(tell-9, quality-20)
#mark(buy-23, if-21)
#nsubj(buy-23, you-22)
#advcl(great-3, buy-23)
#dobj(buy-23, them-24)
#prep_from(buy-23, t-mobile-26)
#nsubj(great-30, aim-28)
#cop(great-30, is-29)
#advcl(great-3, great-30)
#conj_and(buy-23, great-30)
result:
1	now	_	RB	RB	_	5	advmod	_	_
2	i	_	FW	FW	_	5	nsubj	_	_
3	can	_	MD	MD	_	5	aux	_	_
4	always	_	RB	RB	_	5	advmod	_	_
5	be	_	VB	VB	_	0	root	_	_
6	in	_	IN	IN	_	5	prep	_	_
7	contact	_	NN	NN	_	6	pobj	_	_
8	.	_	.	.	_	0	erased	_	_
#advmod(be-5, now-1)
#nsubj(be-5, i-2)
#aux(be-5, can-3)
#advmod(be-5, always-4)
#root(ROOT-0, be-5)
#prep_in(be-5, contact-7)
result:
1	this	_	DT	DT	_	6	nsubj	_	_
2	is	_	VBZ	VBZ	_	6	cop	_	_
3	probably	_	RB	RB	_	6	advmod	_	_
4	your	_	PRP$	PRP$	_	6	poss	_	_
5	best	_	JJS	JJS	_	6	amod	_	_
6	bet	_	NN	NN	_	0	root	_	_
7	if	_	IN	IN	_	10	mark	_	_
8	you	_	PRP	PRP	_	10	nsubj	_	_
9	are	_	VBP	VBP	_	10	aux	_	_
10	looking	_	VBG	VBG	_	6	dep	_	_
11	for	_	IN	IN	_	10	prep	_	_
12	a	_	DT	DT	_	13	det	_	_
13	phone	_	NN	NN	_	11	pobj	_	_
14	in	_	IN	IN	_	10	prep	_	_
15	this	_	DT	DT	_	17	det	_	_
16	price	_	NN	NN	_	17	nn	_	_
17	range	_	NN	NN	_	14	pobj	_	_
18	,	_	,	,	_	0	erased	_	_
19	or	_	CC	CC	_	10	cc	_	_
20	like	_	IN	IN	_	25	prep	_	_
21	me	_	PRP	PRP	_	20	pobj	_	_
22	,	_	,	,	_	0	erased	_	_
23	do	_	VBP	VBP	_	25	aux	_	_
24	not	_	RB	RB	_	25	neg	_	_
25	have	_	VB	VB	_	10	conj	_	_
26	the	_	DT	DT	_	27	det	_	_
27	patience	_	NN	NN	_	25	dobj	_	_
28	to	_	TO	TO	_	29	aux	_	_
29	deal	_	VB	VB	_	27	vmod	_	_
30	with	_	IN	IN	_	29	prep	_	_
31	annoying	_	JJ	JJ	_	33	amod	_	_
32	flip	_	JJ	JJ	_	33	amod	_	_
33	phones	_	NNS	NNS	_	30	pobj	_	_
34	.	_	.	.	_	0	erased	_	_
#nsubj(bet-6, this-1)
#cop(bet-6, is-2)
#advmod(bet-6, probably-3)
#poss(bet-6, your-4)
#amod(bet-6, best-5)
#root(ROOT-0, bet-6)
#mark(looking-10, if-7)
#nsubj(looking-10, you-8)
#nsubj(have-25, you-8)
#aux(looking-10, are-9)
#dep(bet-6, looking-10)
#det(phone-13, a-12)
#prep_for(looking-10, phone-13)
#det(range-17, this-15)
#nn(range-17, price-16)
#prep_in(looking-10, range-17)
#prep_like(have-25, me-21)
#aux(have-25, do-23)
#neg(have-25, not-24)
#dep(bet-6, have-25)
#conj_or(looking-10, have-25)
#det(patience-27, the-26)
#dobj(have-25, patience-27)
#aux(deal-29, to-28)
#vmod(patience-27, deal-29)
#amod(phones-33, annoying-31)
#amod(phones-33, flip-32)
#prep_with(deal-29, phones-33)
result:
1	a	_	DT	DT	_	3	det	_	_
2	great	_	JJ	JJ	_	3	amod	_	_
3	deal	_	NN	NN	_	0	root	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	general	_	JJ	JJ	_	4	pobj	_	_
6	!	_	.	.	_	0	erased	_	_
#det(deal-3, a-1)
#amod(deal-3, great-2)
#root(ROOT-0, deal-3)
#prep_in(deal-3, general-5)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	would	_	MD	MD	_	4	aux	_	_
3	not	_	RB	RB	_	4	neg	_	_
4	give	_	VB	VB	_	0	root	_	_
5	up	_	RP	RP	_	4	prt	_	_
6	this	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	4	dobj	_	_
8	for	_	IN	IN	_	4	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	world	_	NN	NN	_	8	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#nsubj(give-4, i-1)
#aux(give-4, would-2)
#neg(give-4, not-3)
#root(ROOT-0, give-4)
#prt(give-4, up-5)
#det(phone-7, this-6)
#dobj(give-4, phone-7)
#det(world-10, the-9)
#prep_for(give-4, world-10)
result:
1	1	_	CD	CD	_	2	num	_	_
2	month	_	NN	NN	_	12	tmod	_	_
3	,	_	,	,	_	0	erased	_	_
4	no	_	DT	DT	_	5	neg	_	_
5	problems	_	NNS	NNS	_	12	nsubj	_	_
6	,	_	,	,	_	0	erased	_	_
7	great	_	JJ	JJ	_	8	amod	_	_
8	phone	_	NN	NN	_	5	appos	_	_
9	i	_	FW	FW	_	8	dep	_	_
10	'm	_	VBP	VBP	_	12	cop	_	_
11	very	_	RB	RB	_	12	advmod	_	_
12	pleased	_	JJ	JJ	_	0	root	_	_
13	with	_	IN	IN	_	12	prep	_	_
14	my	_	PRP$	PRP$	_	16	poss	_	_
15	6610	_	CD	CD	_	16	num	_	_
16	phone	_	NN	NN	_	13	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#num(month-2, 1-1)
#tmod(pleased-12, month-2)
#neg(problems-5, no-4)
#nsubj(pleased-12, problems-5)
#amod(phone-8, great-7)
#appos(problems-5, phone-8)
#dep(phone-8, i-9)
#cop(pleased-12, 'm-10)
#advmod(pleased-12, very-11)
#root(ROOT-0, pleased-12)
#poss(phone-16, my-14)
#num(phone-16, 6610-15)
#prep_with(pleased-12, phone-16)
result:
1	yes	_	UH	UH	_	6	discourse	_	_
2	,	_	,	,	_	0	erased	_	_
3	the	_	DT	DT	_	4	det	_	_
4	features	_	NNS	NNS	_	6	nsubj	_	_
5	are	_	VBP	VBP	_	6	cop	_	_
6	numerous	_	JJ	JJ	_	0	root	_	_
7	.	_	.	.	_	0	erased	_	_
#discourse(numerous-6, yes-1)
#det(features-4, the-3)
#nsubj(numerous-6, features-4)
#cop(numerous-6, are-5)
#root(ROOT-0, numerous-6)
result:
1	the	_	DT	DT	_	2	det	_	_
2	speakerphone	_	NN	NN	_	3	nsubj	_	_
3	works	_	VBZ	VBZ	_	0	root	_	_
4	better	_	RBR	RBR	_	3	acomp	_	_
5	than	_	IN	IN	_	11	mark	_	_
6	any	_	DT	DT	_	7	det	_	_
7	speakerphone	_	NN	NN	_	11	nsubj	_	_
8	i	_	FW	FW	_	7	dep	_	_
9	've	_	VBP	VBP	_	11	aux	_	_
10	ever	_	RB	RB	_	11	advmod	_	_
11	had	_	VBN	VBN	_	4	ccomp	_	_
12	.	_	.	.	_	0	erased	_	_
#det(speakerphone-2, the-1)
#nsubj(works-3, speakerphone-2)
#root(ROOT-0, works-3)
#acomp(works-3, better-4)
#mark(had-11, than-5)
#det(speakerphone-7, any-6)
#nsubj(had-11, speakerphone-7)
#dep(speakerphone-7, i-8)
#aux(had-11, 've-9)
#advmod(had-11, ever-10)
#ccomp(better-4, had-11)
result:
1	people	_	NNS	NNS	_	20	nsubj	_	_
2	i	_	FW	FW	_	3	nn	_	_
3	talk	_	NN	NN	_	9	nsubjpass	_	_
4	to	_	TO	TO	_	3	prep	_	_
5	on	_	IN	IN	_	3	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	speakerphone	_	NN	NN	_	5	pobj	_	_
8	are	_	VBP	VBP	_	9	auxpass	_	_
9	shocked	_	VBN	VBN	_	1	rcmod	_	_
10	when	_	WRB	WRB	_	12	advmod	_	_
11	it	_	PRP	PRP	_	12	nsubj	_	_
12	comes	_	VBZ	VBZ	_	9	advcl	_	_
13	out	_	RP	RP	_	12	prt	_	_
14	at	_	IN	IN	_	12	prep	_	_
15	times	_	NNS	NNS	_	14	pobj	_	_
16	that	_	IN	IN	_	12	prep	_	_
17	i	_	FW	FW	_	16	pobj	_	_
18	'm	_	VBP	VBP	_	20	aux	_	_
19	even	_	RB	RB	_	20	advmod	_	_
20	using	_	VBG	VBG	_	0	root	_	_
21	a	_	DT	DT	_	22	det	_	_
22	speakerphone	_	NN	NN	_	20	dobj	_	_
23	.	_	.	.	_	0	erased	_	_
#nsubj(using-20, people-1)
#nn(talk-3, i-2)
#nsubjpass(shocked-9, talk-3)
#prep(talk-3, to-4)
#det(speakerphone-7, the-6)
#prep_on(talk-3, speakerphone-7)
#auxpass(shocked-9, are-8)
#rcmod(people-1, shocked-9)
#advmod(comes-12, when-10)
#nsubj(comes-12, it-11)
#advcl(shocked-9, comes-12)
#prt(comes-12, out-13)
#prep_at(comes-12, times-15)
#prep_that(comes-12, i-17)
#aux(using-20, 'm-18)
#advmod(using-20, even-19)
#root(ROOT-0, using-20)
#det(speakerphone-22, a-21)
#dobj(using-20, speakerphone-22)
result:
1	the	_	DT	DT	_	3	det	_	_
2	sound	_	JJ	JJ	_	3	amod	_	_
3	quality	_	NN	NN	_	5	nsubj	_	_
4	is	_	VBZ	VBZ	_	5	cop	_	_
5	excellent	_	JJ	JJ	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	except	_	IN	IN	_	5	advmod	_	_
8	,	_	,	,	_	0	erased	_	_
9	maybe	_	RB	RB	_	10	advmod	_	_
10	a	_	DT	DT	_	5	dep	_	_
11	*	_	SYM	SYM	_	15	dep	_	_
12	tad	_	RB	RB	_	15	advmod	_	_
13	*	_	SYM	SYM	_	15	dep	_	_
14	too	_	RB	RB	_	15	advmod	_	_
15	quiet	_	JJ	JJ	_	10	dep	_	_
16	at	_	IN	IN	_	15	prep	_	_
17	times	_	NNS	NNS	_	16	pobj	_	_
18	when	_	WRB	WRB	_	20	advmod	_	_
19	there	_	EX	EX	_	20	expl	_	_
20	are	_	VBP	VBP	_	17	rcmod	_	_
21	quieter	_	NN	NN	_	22	nn	_	_
22	talkers	_	NNS	NNS	_	20	nsubj	_	_
23	on	_	IN	IN	_	22	prep	_	_
24	the	_	DT	DT	_	26	det	_	_
25	other	_	JJ	JJ	_	26	amod	_	_
26	end	_	NN	NN	_	23	pobj	_	_
27	of	_	IN	IN	_	26	prep	_	_
28	the	_	DT	DT	_	29	det	_	_
29	line	_	NN	NN	_	27	pobj	_	_
30	.	_	.	.	_	0	erased	_	_
#det(quality-3, the-1)
#amod(quality-3, sound-2)
#nsubj(excellent-5, quality-3)
#cop(excellent-5, is-4)
#root(ROOT-0, excellent-5)
#advmod(excellent-5, except-7)
#advmod(a-10, maybe-9)
#dep(excellent-5, a-10)
#dep(quiet-15, *-11)
#advmod(quiet-15, tad-12)
#dep(quiet-15, *-13)
#advmod(quiet-15, too-14)
#dep(a-10, quiet-15)
#prep_at(quiet-15, times-17)
#advmod(are-20, when-18)
#expl(are-20, there-19)
#rcmod(times-17, are-20)
#nn(talkers-22, quieter-21)
#nsubj(are-20, talkers-22)
#det(end-26, the-24)
#amod(end-26, other-25)
#prep_on(talkers-22, end-26)
#det(line-29, the-28)
#prep_of(end-26, line-29)
result:
1	the	_	DT	DT	_	3	det	_	_
2	included	_	VBN	VBN	_	3	amod	_	_
3	earpiece	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	very	_	RB	RB	_	6	advmod	_	_
6	comfortable	_	JJ	JJ	_	0	root	_	_
7	and	_	CC	CC	_	6	cc	_	_
8	easy	_	JJ	JJ	_	6	conj	_	_
9	to	_	TO	TO	_	10	aux	_	_
10	use	_	VB	VB	_	8	xcomp	_	_
11	.	_	.	.	_	0	erased	_	_
#det(earpiece-3, the-1)
#amod(earpiece-3, included-2)
#nsubj(comfortable-6, earpiece-3)
#nsubj(easy-8, earpiece-3)
#nsubj(use-10, earpiece-3)
#cop(comfortable-6, is-4)
#advmod(comfortable-6, very-5)
#root(ROOT-0, comfortable-6)
#conj_and(comfortable-6, easy-8)
#aux(use-10, to-9)
#xcomp(easy-8, use-10)
result:
1	i	_	FW	FW	_	22	nsubj	_	_
2	have	_	VBP	VBP	_	4	aux	_	_
3	not	_	RB	RB	_	4	neg	_	_
4	had	_	VBN	VBN	_	22	parataxis	_	_
5	any	_	DT	DT	_	7	det	_	_
6	distortion	_	NN	NN	_	7	nn	_	_
7	problems	_	NNS	NNS	_	4	dobj	_	_
8	with	_	IN	IN	_	4	prep	_	_
9	this	_	DT	DT	_	10	det	_	_
10	phone	_	NN	NN	_	8	pobj	_	_
11	and	_	CC	CC	_	4	cc	_	_
12	am	_	VBP	VBP	_	14	cop	_	_
13	more	_	RBR	RBR	_	14	advmod	_	_
14	pleased	_	JJ	JJ	_	4	conj	_	_
15	with	_	IN	IN	_	14	prep	_	_
16	this	_	DT	DT	_	17	det	_	_
17	phone	_	NN	NN	_	15	pobj	_	_
18	than	_	IN	IN	_	14	prep	_	_
19	any	_	DT	DT	_	20	det	_	_
20	i	_	FW	FW	_	18	pobj	_	_
21	've	_	VBP	VBP	_	22	aux	_	_
22	used	_	VBN	VBN	_	0	root	_	_
23	before	_	IN	IN	_	22	prep	_	_
24	.	_	.	.	_	0	erased	_	_
#nsubj(used-22, i-1)
#aux(had-4, have-2)
#neg(had-4, not-3)
#parataxis(used-22, had-4)
#det(problems-7, any-5)
#nn(problems-7, distortion-6)
#dobj(had-4, problems-7)
#det(phone-10, this-9)
#prep_with(had-4, phone-10)
#cop(pleased-14, am-12)
#advmod(pleased-14, more-13)
#conj_and(had-4, pleased-14)
#parataxis(used-22, pleased-14)
#det(phone-17, this-16)
#prep_with(pleased-14, phone-17)
#det(i-20, any-19)
#prep_than(pleased-14, i-20)
#aux(used-22, 've-21)
#root(ROOT-0, used-22)
#prep(used-22, before-23)
result:
1	nokia	_	NN	NN	_	4	nsubj	_	_
2	has	_	VBZ	VBZ	_	4	aux	_	_
3	definitely	_	RB	RB	_	4	advmod	_	_
4	won	_	VBD	VBD	_	0	root	_	_
5	me	_	PRP	PRP	_	4	dobj	_	_
6	over	_	RP	RP	_	4	prt	_	_
7	with	_	IN	IN	_	4	prep	_	_
8	this	_	DT	DT	_	9	det	_	_
9	one	_	CD	CD	_	7	pobj	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(won-4, nokia-1)
#aux(won-4, has-2)
#advmod(won-4, definitely-3)
#root(ROOT-0, won-4)
#dobj(won-4, me-5)
#prt(won-4, over-6)
#det(one-9, this-8)
#prep_with(won-4, one-9)
result:
1	first	_	RB	RB	_	2	advmod	_	_
2	let	_	VB	VB	_	0	root	_	_
3	me	_	PRP	PRP	_	4	nsubj	_	_
4	say	_	VB	VB	_	2	ccomp	_	_
5	that	_	IN	IN	_	9	mark	_	_
6	it	_	PRP	PRP	_	9	nsubj	_	_
7	is	_	VBZ	VBZ	_	9	cop	_	_
8	much	_	RB	RB	_	9	advmod	_	_
9	smaller	_	JJR	JJR	_	4	ccomp	_	_
10	than	_	IN	IN	_	12	mark	_	_
11	it	_	PRP	PRP	_	12	nsubj	_	_
12	looks	_	VBZ	VBZ	_	9	ccomp	_	_
13	on	_	IN	IN	_	12	prep	_	_
14	the	_	DT	DT	_	15	det	_	_
15	web	_	NN	NN	_	13	pobj	_	_
16	and	_	CC	CC	_	12	cc	_	_
17	it	_	PRP	PRP	_	19	nsubj	_	_
18	also	_	RB	RB	_	19	advmod	_	_
19	looks	_	VBZ	VBZ	_	12	conj	_	_
20	better	_	JJR	JJR	_	19	acomp	_	_
21	.	_	.	.	_	0	erased	_	_
#advmod(let-2, first-1)
#root(ROOT-0, let-2)
#nsubj(say-4, me-3)
#ccomp(let-2, say-4)
#mark(smaller-9, that-5)
#nsubj(smaller-9, it-6)
#cop(smaller-9, is-7)
#advmod(smaller-9, much-8)
#ccomp(say-4, smaller-9)
#mark(looks-12, than-10)
#nsubj(looks-12, it-11)
#ccomp(smaller-9, looks-12)
#det(web-15, the-14)
#prep_on(looks-12, web-15)
#nsubj(looks-19, it-17)
#advmod(looks-19, also-18)
#ccomp(smaller-9, looks-19)
#conj_and(looks-12, looks-19)
#acomp(looks-19, better-20)
result:
1	the	_	DT	DT	_	3	det	_	_
2	radio	_	NN	NN	_	3	nn	_	_
3	feature	_	NN	NN	_	4	nsubj	_	_
4	has	_	VBZ	VBZ	_	0	root	_	_
5	superb	_	JJ	JJ	_	7	amod	_	_
6	sound	_	JJ	JJ	_	7	amod	_	_
7	quality	_	NN	NN	_	4	dobj	_	_
8	.	_	.	.	_	0	erased	_	_
#det(feature-3, the-1)
#nn(feature-3, radio-2)
#nsubj(has-4, feature-3)
#root(ROOT-0, has-4)
#amod(quality-7, superb-5)
#amod(quality-7, sound-6)
#dobj(has-4, quality-7)
result:
1	i	_	FW	FW	_	12	nsubj	_	_
2	've	_	VBP	VBP	_	3	aux	_	_
3	compared	_	VBN	VBN	_	12	parataxis	_	_
4	this	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	to	_	TO	TO	_	3	prep	_	_
7	others	_	NNS	NNS	_	6	pobj	_	_
8	such	_	JJ	JJ	_	9	mwe	_	_
9	as	_	IN	IN	_	7	prep	_	_
10	6100	_	CD	CD	_	9	pobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	siemens	_	VBZ	VBZ	_	0	root	_	_
13	sl55	_	JJ	JJ	_	12	acomp	_	_
14	.	_	.	.	_	0	erased	_	_
#nsubj(siemens-12, i-1)
#aux(compared-3, 've-2)
#parataxis(siemens-12, compared-3)
#det(phone-5, this-4)
#dobj(compared-3, phone-5)
#prep_to(compared-3, others-7)
#prep_such_as(others-7, 6100-10)
#root(ROOT-0, siemens-12)
#acomp(siemens-12, sl55-13)
result:
1	even	_	RB	RB	_	6	advmod	_	_
2	though	_	IN	IN	_	6	mark	_	_
3	they	_	PRP	PRP	_	6	nsubj	_	_
4	might	_	MD	MD	_	6	aux	_	_
5	be	_	VB	VB	_	6	cop	_	_
6	smaller	_	JJR	JJR	_	9	advcl	_	_
7	many	_	JJ	JJ	_	8	amod	_	_
8	people	_	NNS	NNS	_	9	nsubj	_	_
9	seem	_	VBP	VBP	_	0	root	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	have	_	VB	VB	_	9	xcomp	_	_
12	alot	_	NN	NN	_	11	dobj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	problems	_	NNS	NNS	_	13	pobj	_	_
15	with	_	IN	IN	_	14	prep	_	_
16	them	_	PRP	PRP	_	15	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#advmod(smaller-6, even-1)
#mark(smaller-6, though-2)
#nsubj(smaller-6, they-3)
#aux(smaller-6, might-4)
#cop(smaller-6, be-5)
#advcl(seem-9, smaller-6)
#amod(people-8, many-7)
#nsubj(seem-9, people-8)
#nsubj(have-11, people-8)
#root(ROOT-0, seem-9)
#aux(have-11, to-10)
#xcomp(seem-9, have-11)
#dobj(have-11, alot-12)
#prep_of(alot-12, problems-14)
#prep_with(problems-14, them-16)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	has	_	VBZ	VBZ	_	0	root	_	_
3	a	_	DT	DT	_	5	det	_	_
4	classic	_	JJ	JJ	_	5	amod	_	_
5	design	_	NN	NN	_	2	dobj	_	_
6	yet	_	CC	CC	_	2	cc	_	_
7	looks	_	VBZ	VBZ	_	2	conj	_	_
8	hip	_	NN	NN	_	7	dobj	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(has-2, it-1)
#nsubj(looks-7, it-1)
#root(ROOT-0, has-2)
#det(design-5, a-3)
#amod(design-5, classic-4)
#dobj(has-2, design-5)
#conj_yet(has-2, looks-7)
#dobj(looks-7, hip-8)
result:
1	is	_	VBZ	VBZ	_	5	auxpass	_	_
2	a	_	DT	DT	_	3	det	_	_
3	lot	_	NN	NN	_	4	npadvmod	_	_
4	better	_	JJR	JJR	_	5	advmod	_	_
5	compared	_	VBN	VBN	_	0	root	_	_
6	to	_	TO	TO	_	5	prep	_	_
7	the	_	DT	DT	_	10	det	_	_
8	toy	_	NN	NN	_	10	nn	_	_
9	phone	_	NN	NN	_	10	nn	_	_
10	design	_	NN	NN	_	6	pobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	nokia	_	NN	NN	_	11	pobj	_	_
14	7210	_	CD	CD	_	13	num	_	_
15	with	_	IN	IN	_	5	prep	_	_
16	its	_	PRP$	PRP$	_	18	poss	_	_
17	cheap	_	JJ	JJ	_	18	amod	_	_
18	feel	_	NN	NN	_	15	pobj	_	_
19	.	_	.	.	_	0	erased	_	_
#auxpass(compared-5, is-1)
#det(lot-3, a-2)
#npadvmod(better-4, lot-3)
#advmod(compared-5, better-4)
#root(ROOT-0, compared-5)
#det(design-10, the-7)
#nn(design-10, toy-8)
#nn(design-10, phone-9)
#prep_to(compared-5, design-10)
#det(nokia-13, the-12)
#prep_of(design-10, nokia-13)
#num(nokia-13, 7210-14)
#poss(feel-18, its-16)
#amod(feel-18, cheap-17)
#prep_with(compared-5, feel-18)
result:
1	it	_	PRP	PRP	_	4	nsubj	_	_
2	is	_	VBZ	VBZ	_	4	cop	_	_
3	extremely	_	RB	RB	_	4	advmod	_	_
4	light	_	JJ	JJ	_	0	root	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	dissapears	_	JJ	JJ	_	4	conj	_	_
7	in	_	IN	IN	_	4	prep	_	_
8	your	_	PRP$	PRP$	_	9	poss	_	_
9	pocket	_	NN	NN	_	7	pobj	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(light-4, it-1)
#nsubj(dissapears-6, it-1)
#cop(light-4, is-2)
#advmod(light-4, extremely-3)
#root(ROOT-0, light-4)
#conj_and(light-4, dissapears-6)
#poss(pocket-9, your-8)
#prep_in(light-4, pocket-9)
result:
1	for	_	IN	IN	_	10	prep	_	_
2	those	_	DT	DT	_	1	pobj	_	_
3	that	_	WDT	WDT	_	5	nsubj	_	_
4	are	_	VBP	VBP	_	5	aux	_	_
5	looking	_	VBG	VBG	_	2	rcmod	_	_
6	for	_	IN	IN	_	5	prep	_	_
7	camera	_	NN	NN	_	8	nn	_	_
8	phones	_	NNS	NNS	_	6	pobj	_	_
9	just	_	RB	RB	_	10	nsubj	_	_
10	get	_	VBP	VBP	_	0	root	_	_
11	the	_	DT	DT	_	13	det	_	_
12	camera	_	NN	NN	_	13	nn	_	_
13	attachement	_	NN	NN	_	10	dobj	_	_
14	and	_	CC	CC	_	10	cc	_	_
15	comes	_	VBZ	VBZ	_	10	conj	_	_
16	with	_	IN	IN	_	15	prep	_	_
17	the	_	DT	DT	_	19	det	_	_
18	stereo	_	JJ	JJ	_	19	amod	_	_
19	headphones	_	NNS	NNS	_	16	pobj	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	listen	_	VB	VB	_	15	xcomp	_	_
22	to	_	TO	TO	_	21	prep	_	_
23	the	_	DT	DT	_	24	det	_	_
24	radio	_	NN	NN	_	22	pobj	_	_
25	in	_	IN	IN	_	21	prep	_	_
26	style	_	NN	NN	_	25	pobj	_	_
27	.	_	.	.	_	0	erased	_	_
#nsubj(looking-5, those-2)
#prep_for(get-10, those-2)
#aux(looking-5, are-4)
#rcmod(those-2, looking-5)
#nn(phones-8, camera-7)
#prep_for(looking-5, phones-8)
#nsubj(get-10, just-9)
#nsubj(comes-15, just-9)
#nsubj(listen-21, just-9)
#root(ROOT-0, get-10)
#det(attachement-13, the-11)
#nn(attachement-13, camera-12)
#dobj(get-10, attachement-13)
#conj_and(get-10, comes-15)
#det(headphones-19, the-17)
#amod(headphones-19, stereo-18)
#prep_with(comes-15, headphones-19)
#aux(listen-21, to-20)
#xcomp(comes-15, listen-21)
#det(radio-24, the-23)
#prep_to(listen-21, radio-24)
#prep_in(listen-21, style-26)
result:
1	the	_	DT	DT	_	2	det	_	_
2	battery	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	alot	_	JJ	JJ	_	0	root	_	_
5	better	_	RBR	RBR	_	4	advmod	_	_
6	than	_	IN	IN	_	5	prep	_	_
7	most	_	JJS	JJS	_	6	pobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	phones	_	NNS	NNS	_	8	pobj	_	_
11	out	_	IN	IN	_	10	prep	_	_
12	there	_	EX	EX	_	11	pobj	_	_
13	.	_	.	.	_	0	erased	_	_
#det(battery-2, the-1)
#nsubj(alot-4, battery-2)
#cop(alot-4, is-3)
#root(ROOT-0, alot-4)
#advmod(alot-4, better-5)
#prep_than(better-5, most-7)
#det(phones-10, the-9)
#prep_of(most-7, phones-10)
#prep_out(phones-10, there-12)
result:
1	one	_	CD	CD	_	2	num	_	_
2	thing	_	NN	NN	_	8	nsubj	_	_
3	that	_	WDT	WDT	_	5	dobj	_	_
4	i	_	FW	FW	_	5	nsubj	_	_
5	found	_	VBD	VBD	_	2	rcmod	_	_
6	out	_	RP	RP	_	5	prt	_	_
7	recently	_	RB	RB	_	5	advmod	_	_
8	is	_	VBZ	VBZ	_	0	root	_	_
9	that	_	IN	IN	_	13	mark	_	_
10	you	_	PRP	PRP	_	13	nsubj	_	_
11	do	_	VBP	VBP	_	13	aux	_	_
12	n't	_	RB	RB	_	13	neg	_	_
13	need	_	VB	VB	_	8	ccomp	_	_
14	t-zones	_	NNS	NNS	_	13	dobj	_	_
15	from	_	IN	IN	_	13	prep	_	_
16	tmobile	_	NN	NN	_	15	pobj	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	go	_	VB	VB	_	13	vmod	_	_
19	online	_	JJ	JJ	_	18	acomp	_	_
20	.	_	.	.	_	0	erased	_	_
#num(thing-2, one-1)
#dobj(found-5, thing-2)
#nsubj(is-8, thing-2)
#nsubj(found-5, i-4)
#rcmod(thing-2, found-5)
#prt(found-5, out-6)
#advmod(found-5, recently-7)
#root(ROOT-0, is-8)
#mark(need-13, that-9)
#nsubj(need-13, you-10)
#aux(need-13, do-11)
#neg(need-13, n't-12)
#ccomp(is-8, need-13)
#dobj(need-13, t-zones-14)
#prep_from(need-13, tmobile-16)
#aux(go-18, to-17)
#vmod(need-13, go-18)
#acomp(go-18, online-19)
result:
1	every	_	DT	DT	_	3	det	_	_
2	t-mobile	_	JJ	JJ	_	3	amod	_	_
3	plan	_	NN	NN	_	4	nsubj	_	_
4	comes	_	VBZ	VBZ	_	0	root	_	_
5	with	_	IN	IN	_	4	prep	_	_
6	gsm	_	NN	NN	_	7	nn	_	_
7	data	_	NNS	NNS	_	5	pobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	meaning	_	VBG	VBG	_	7	vmod	_	_
10	that	_	IN	IN	_	20	mark	_	_
11	instead	_	RB	RB	_	20	nsubj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	speeds	_	NNS	NNS	_	12	pobj	_	_
14	of	_	IN	IN	_	13	prep	_	_
15	56	_	CD	CD	_	16	num	_	_
16	kbps	_	NNS	NNS	_	14	pobj	_	_
17	is	_	VBZ	VBZ	_	20	cop	_	_
18	around	_	IN	IN	_	19	quantmod	_	_
19	9	_	CD	CD	_	20	num	_	_
20	kbps	_	NNS	NNS	_	9	ccomp	_	_
21	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
22	with	_	IN	IN	_	4	dep	_	_
23	those	_	DT	DT	_	25	det	_	_
24	small	_	JJ	JJ	_	25	amod	_	_
25	size	_	NN	NN	_	22	pobj	_	_
26	wap	_	NN	NN	_	27	nn	_	_
27	websites	_	NNS	NNS	_	28	nsubj	_	_
28	do	_	VBP	VBP	_	25	rcmod	_	_
29	you	_	PRP	PRP	_	28	dobj	_	_
30	really	_	RB	RB	_	31	advmod	_	_
31	think	_	VB	VB	_	28	dep	_	_
32	it	_	PRP	PRP	_	33	nsubj	_	_
33	makes	_	VBZ	VBZ	_	31	ccomp	_	_
34	a	_	DT	DT	_	35	det	_	_
35	difference	_	NN	NN	_	33	dobj	_	_
36	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
37	.	_	.	.	_	0	erased	_	_
#det(plan-3, every-1)
#amod(plan-3, t-mobile-2)
#nsubj(comes-4, plan-3)
#root(ROOT-0, comes-4)
#nn(data-7, gsm-6)
#prep_with(comes-4, data-7)
#vmod(data-7, meaning-9)
#mark(kbps-20, that-10)
#nsubj(kbps-20, instead-11)
#prep_of(instead-11, speeds-13)
#num(kbps-16, 56-15)
#prep_of(speeds-13, kbps-16)
#cop(kbps-20, is-17)
#quantmod(9-19, around-18)
#num(kbps-20, 9-19)
#ccomp(meaning-9, kbps-20)
#dep(comes-4, with-22)
#det(size-25, those-23)
#amod(size-25, small-24)
#pobj(with-22, size-25)
#nn(websites-27, wap-26)
#nsubj(do-28, websites-27)
#rcmod(size-25, do-28)
#dobj(do-28, you-29)
#advmod(think-31, really-30)
#dep(do-28, think-31)
#nsubj(makes-33, it-32)
#ccomp(think-31, makes-33)
#det(difference-35, a-34)
#dobj(makes-33, difference-35)
result:
1	anyways	_	NNS	NNS	_	3	nsubj	_	_
2	there	_	EX	EX	_	3	expl	_	_
3	are	_	VBP	VBP	_	0	root	_	_
4	ways	_	NNS	NNS	_	3	dobj	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	set	_	VB	VB	_	3	xcomp	_	_
7	up	_	RP	RP	_	6	prt	_	_
8	your	_	PRP$	PRP$	_	9	poss	_	_
9	6610	_	CD	CD	_	6	dobj	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	connect	_	VB	VB	_	6	vmod	_	_
12	to	_	TO	TO	_	13	aux	_	_
13	csd	_	VB	VB	_	11	xcomp	_	_
14	which	_	WDT	WDT	_	15	nsubj	_	_
15	uses	_	VBZ	VBZ	_	13	dep	_	_
16	regular	_	JJ	JJ	_	17	amod	_	_
17	minutes	_	NNS	NNS	_	15	dobj	_	_
18	and	_	CC	CC	_	15	cc	_	_
19	you	_	PRP	PRP	_	21	nsubj	_	_
20	are	_	VBP	VBP	_	21	aux	_	_
21	surfing	_	VBG	VBG	_	15	conj	_	_
22	the	_	DT	DT	_	23	det	_	_
23	net	_	NN	NN	_	21	dobj	_	_
24	,	_	,	,	_	0	erased	_	_
25	being	_	VBG	VBG	_	26	cop	_	_
26	able	_	JJ	JJ	_	21	vmod	_	_
27	to	_	TO	TO	_	28	aux	_	_
28	download	_	VB	VB	_	26	xcomp	_	_
29	pics	_	NNS	NNS	_	28	dobj	_	_
30	and	_	CC	CC	_	29	cc	_	_
31	ringtones	_	NNS	NNS	_	29	conj	_	_
32	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
33	not	_	RB	RB	_	35	neg	_	_
34	java	_	NN	NN	_	35	nn	_	_
35	apps	_	NNS	NNS	_	38	nsubj	_	_
36	,	_	,	,	_	0	erased	_	_
37	you	_	PRP	PRP	_	38	nsubj	_	_
38	need	_	VBP	VBP	_	3	parataxis	_	_
39	t-zones	_	JJ	JJ	_	38	acomp	_	_
40	for	_	IN	IN	_	39	prep	_	_
41	that	_	WDT	WDT	_	40	pobj	_	_
42	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
43	.	_	.	.	_	0	erased	_	_
#nsubj(are-3, anyways-1)
#expl(are-3, there-2)
#root(ROOT-0, are-3)
#dobj(are-3, ways-4)
#nsubj(set-6, ways-4)
#aux(set-6, to-5)
#xcomp(are-3, set-6)
#prt(set-6, up-7)
#poss(6610-9, your-8)
#dobj(set-6, 6610-9)
#aux(connect-11, to-10)
#vmod(set-6, connect-11)
#aux(csd-13, to-12)
#xcomp(connect-11, csd-13)
#nsubj(uses-15, which-14)
#dep(csd-13, uses-15)
#amod(minutes-17, regular-16)
#dobj(uses-15, minutes-17)
#nsubj(surfing-21, you-19)
#aux(surfing-21, are-20)
#dep(csd-13, surfing-21)
#conj_and(uses-15, surfing-21)
#det(net-23, the-22)
#dobj(surfing-21, net-23)
#cop(able-26, being-25)
#vmod(surfing-21, able-26)
#aux(download-28, to-27)
#xcomp(able-26, download-28)
#dobj(download-28, pics-29)
#dobj(download-28, ringtones-31)
#conj_and(pics-29, ringtones-31)
#neg(apps-35, not-33)
#nn(apps-35, java-34)
#nsubj(need-38, apps-35)
#nsubj(need-38, you-37)
#parataxis(are-3, need-38)
#acomp(need-38, t-zones-39)
#prep_for(t-zones-39, that-41)
result:
1	tmobiles	_	NNS	NNS	_	4	nsubj	_	_
2	might	_	MD	MD	_	4	aux	_	_
3	not	_	RB	RB	_	4	neg	_	_
4	have	_	VB	VB	_	0	root	_	_
5	the	_	DT	DT	_	7	det	_	_
6	best	_	JJS	JJS	_	7	amod	_	_
7	reception	_	NN	NN	_	4	dobj	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	some	_	DT	DT	_	10	det	_	_
10	areas	_	NNS	NNS	_	8	pobj	_	_
11	but	_	CC	CC	_	12	cc	_	_
12	with	_	IN	IN	_	4	prep	_	_
13	amazing	_	JJ	JJ	_	14	amod	_	_
14	phones	_	NNS	NNS	_	12	pobj	_	_
15	such	_	JJ	JJ	_	16	mwe	_	_
16	as	_	IN	IN	_	14	prep	_	_
17	nokia	_	NN	NN	_	16	pobj	_	_
18	6610	_	CD	CD	_	17	num	_	_
19	and	_	CC	CC	_	17	cc	_	_
20	cheap	_	JJ	JJ	_	21	amod	_	_
21	plans	_	NNS	NNS	_	17	conj	_	_
22	that	_	IN	IN	_	24	mark	_	_
23	you	_	PRP	PRP	_	24	nsubj	_	_
24	get	_	VBP	VBP	_	4	ccomp	_	_
25	way	_	NN	NN	_	24	iobj	_	_
26	more	_	JJR	JJR	_	27	amod	_	_
27	minutes	_	NNS	NNS	_	24	dobj	_	_
28	than	_	IN	IN	_	24	prep	_	_
29	any	_	DT	DT	_	31	det	_	_
30	other	_	JJ	JJ	_	31	amod	_	_
31	plans	_	NNS	NNS	_	28	pobj	_	_
32	.	_	.	.	_	0	erased	_	_
#nsubj(have-4, tmobiles-1)
#aux(have-4, might-2)
#neg(have-4, not-3)
#root(ROOT-0, have-4)
#det(reception-7, the-5)
#amod(reception-7, best-6)
#dobj(have-4, reception-7)
#det(areas-10, some-9)
#prep_in(reception-7, areas-10)
#cc(have-4, but-11)
#amod(phones-14, amazing-13)
#prep_with(have-4, phones-14)
#prep_such_as(phones-14, nokia-17)
#num(nokia-17, 6610-18)
#amod(plans-21, cheap-20)
#prep_such_as(phones-14, plans-21)
#conj_and(nokia-17, plans-21)
#mark(get-24, that-22)
#nsubj(get-24, you-23)
#ccomp(have-4, get-24)
#iobj(get-24, way-25)
#amod(minutes-27, more-26)
#dobj(get-24, minutes-27)
#det(plans-31, any-29)
#amod(plans-31, other-30)
#prep_than(get-24, plans-31)
result:
1	if	_	IN	IN	_	3	mark	_	_
2	you	_	PRP	PRP	_	3	nsubj	_	_
3	thought	_	VBD	VBD	_	8	nsubj	_	_
4	about	_	IN	IN	_	3	prep	_	_
5	getting	_	VBG	VBG	_	4	pcomp	_	_
6	this	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	5	dobj	_	_
8	buy	_	VBP	VBP	_	0	root	_	_
9	it	_	PRP	PRP	_	8	dobj	_	_
10	.	_	.	.	_	0	erased	_	_
#mark(thought-3, if-1)
#nsubj(thought-3, you-2)
#nsubj(buy-8, thought-3)
#prepc_about(thought-3, getting-5)
#det(phone-7, this-6)
#dobj(getting-5, phone-7)
#root(ROOT-0, buy-8)
#dobj(buy-8, it-9)
result:
1	this	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	great	_	JJ	JJ	_	0	root	_	_
5	as	_	IN	IN	_	4	prep	_	_
6	a	_	DT	DT	_	7	det	_	_
7	whole	_	NN	NN	_	5	pobj	_	_
8	and	_	CC	CC	_	4	cc	_	_
9	is	_	VBZ	VBZ	_	4	conj	_	_
10	not	_	RB	RB	_	9	neg	_	_
11	like	_	IN	IN	_	9	prep	_	_
12	others	_	NNS	NNS	_	11	pobj	_	_
13	with	_	IN	IN	_	12	prep	_	_
14	one	_	CD	CD	_	18	num	_	_
15	or	_	CC	CC	_	14	cc	_	_
16	two	_	CD	CD	_	14	conj	_	_
17	good	_	JJ	JJ	_	18	amod	_	_
18	qualities	_	NNS	NNS	_	13	pobj	_	_
19	.	_	.	.	_	0	erased	_	_
#det(phone-2, this-1)
#nsubj(great-4, phone-2)
#nsubj(is-9, phone-2)
#cop(great-4, is-3)
#root(ROOT-0, great-4)
#det(whole-7, a-6)
#prep_as(great-4, whole-7)
#conj_and(great-4, is-9)
#neg(is-9, not-10)
#prep_like(is-9, others-12)
#num(qualities-18, one-14)
#conj_or(one-14, two-16)
#num(qualities-18, two-16)
#amod(qualities-18, good-17)
#prep_with(others-12, qualities-18)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	currrently	_	RB	RB	_	3	advmod	_	_
3	have	_	VBP	VBP	_	0	root	_	_
4	service	_	NN	NN	_	3	dobj	_	_
5	with	_	IN	IN	_	3	prep	_	_
6	t-mobile	_	NN	NN	_	5	pobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	verizon	_	NN	NN	_	6	conj	_	_
9	,	_	,	,	_	0	erased	_	_
10	and	_	CC	CC	_	6	cc	_	_
11	t-mobile	_	NN	NN	_	6	conj	_	_
12	.	_	.	.	_	0	erased	_	_
#nsubj(have-3, i-1)
#advmod(have-3, currrently-2)
#root(ROOT-0, have-3)
#dobj(have-3, service-4)
#prep_with(have-3, t-mobile-6)
#prep_with(have-3, verizon-8)
#conj_and(t-mobile-6, verizon-8)
#prep_with(have-3, t-mobile-11)
#conj_and(t-mobile-6, t-mobile-11)
result:
1	the	_	DT	DT	_	2	det	_	_
2	reason	_	NN	NN	_	5	nsubj	_	_
3	so	_	RB	RB	_	4	advmod	_	_
4	many	_	JJ	JJ	_	2	amod	_	_
5	is	_	VBZ	VBZ	_	0	root	_	_
6	that	_	IN	IN	_	22	mark	_	_
7	i	_	FW	FW	_	22	nsubj	_	_
8	am	_	RB	RB	_	10	advmod	_	_
9	a	_	DT	DT	_	10	det	_	_
10	contractor	_	NN	NN	_	7	dep	_	_
11	and	_	CC	CC	_	10	cc	_	_
12	all	_	DT	DT	_	16	nsubj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	my	_	PRP$	PRP$	_	15	poss	_	_
15	subs	_	NNS	NNS	_	13	pobj	_	_
16	have	_	VBP	VBP	_	10	conj	_	_
17	these	_	DT	DT	_	18	det	_	_
18	carriers	_	NNS	NNS	_	16	dobj	_	_
19	and	_	CC	CC	_	18	cc	_	_
20	i	_	FW	FW	_	18	conj	_	_
21	can	_	MD	MD	_	22	aux	_	_
22	benifit	_	VB	VB	_	5	ccomp	_	_
23	from	_	IN	IN	_	22	prep	_	_
24	the	_	DT	DT	_	33	det	_	_
25	mobile	_	JJ	JJ	_	33	amod	_	_
26	to	_	TO	TO	_	25	prep	_	_
27	mobile	_	JJ	JJ	_	28	amod	_	_
28	features	_	NNS	NNS	_	26	pobj	_	_
29	that	_	IN	IN	_	31	mark	_	_
30	companies	_	NNS	NNS	_	31	nsubj	_	_
31	are	_	VBP	VBP	_	28	dep	_	_
32	now	_	RB	RB	_	31	advmod	_	_
33	offering	_	NN	NN	_	23	pobj	_	_
34	!	_	.	.	_	0	erased	_	_
#det(reason-2, the-1)
#nsubj(is-5, reason-2)
#advmod(many-4, so-3)
#amod(reason-2, many-4)
#root(ROOT-0, is-5)
#mark(benifit-22, that-6)
#nsubj(benifit-22, i-7)
#advmod(contractor-10, am-8)
#det(contractor-10, a-9)
#dep(i-7, contractor-10)
#nsubj(have-16, all-12)
#poss(subs-15, my-14)
#prep_of(all-12, subs-15)
#dep(i-7, have-16)
#conj_and(contractor-10, have-16)
#det(carriers-18, these-17)
#dobj(have-16, carriers-18)
#dobj(have-16, i-20)
#conj_and(carriers-18, i-20)
#aux(benifit-22, can-21)
#ccomp(is-5, benifit-22)
#det(offering-33, the-24)
#amod(offering-33, mobile-25)
#amod(features-28, mobile-27)
#prep_to(mobile-25, features-28)
#mark(are-31, that-29)
#nsubj(are-31, companies-30)
#dep(features-28, are-31)
#advmod(are-31, now-32)
#prep_from(benifit-22, offering-33)
result:
1	that	_	IN	IN	_	2	mark	_	_
2	beside	_	RB	RB	_	0	root	_	_
3	you	_	PRP	PRP	_	5	nsubj	_	_
4	are	_	VBP	VBP	_	5	cop	_	_
5	prob	_	JJ	JJ	_	2	dep	_	_
6	.	_	.	.	_	0	erased	_	_
#mark(beside-2, that-1)
#root(ROOT-0, beside-2)
#nsubj(prob-5, you-3)
#cop(prob-5, are-4)
#dep(beside-2, prob-5)
result:
1	very	_	RB	RB	_	3	advmod	_	_
2	well	_	RB	RB	_	3	advmod	_	_
3	aware	_	JJ	JJ	_	0	root	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	many	_	JJ	JJ	_	4	pobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	the	_	DT	DT	_	8	det	_	_
8	features	_	NNS	NNS	_	6	pobj	_	_
9	that	_	IN	IN	_	13	mark	_	_
10	this	_	DT	DT	_	11	det	_	_
11	phone	_	NN	NN	_	13	nsubjpass	_	_
12	is	_	VBZ	VBZ	_	13	auxpass	_	_
13	known	_	VBN	VBN	_	8	dep	_	_
14	for	_	IN	IN	_	13	prep	_	_
15	,	_	,	,	_	0	erased	_	_
16	and	_	CC	CC	_	5	cc	_	_
17	one	_	CD	CD	_	5	conj	_	_
18	that	_	WDT	WDT	_	23	nsubjpass	_	_
19	has	_	VBZ	VBZ	_	23	aux	_	_
20	not	_	RB	RB	_	23	neg	_	_
21	yet	_	RB	RB	_	23	advmod	_	_
22	been	_	VBN	VBN	_	23	auxpass	_	_
23	mentioned	_	VBN	VBN	_	17	rcmod	_	_
24	:	_	:	:	_	0	erased	_	_
25	using	_	VBG	VBG	_	3	dep	_	_
26	this	_	DT	DT	_	27	det	_	_
27	phone	_	NN	NN	_	25	dobj	_	_
28	as	_	IN	IN	_	25	prep	_	_
29	a	_	DT	DT	_	30	det	_	_
30	modem	_	NN	NN	_	28	pobj	_	_
31	for	_	IN	IN	_	30	prep	_	_
32	any	_	DT	DT	_	33	det	_	_
33	computer	_	NN	NN	_	31	pobj	_	_
34	with	_	IN	IN	_	25	prep	_	_
35	a	_	DT	DT	_	38	det	_	_
36	usb	_	NN	NN	_	38	nn	_	_
37	1.0	_	CD	CD	_	38	num	_	_
38	port	_	NN	NN	_	34	pobj	_	_
39	!	_	.	.	_	0	erased	_	_
#advmod(aware-3, very-1)
#advmod(aware-3, well-2)
#root(ROOT-0, aware-3)
#prep_of(aware-3, many-5)
#det(features-8, the-7)
#prep_of(many-5, features-8)
#mark(known-13, that-9)
#det(phone-11, this-10)
#nsubjpass(known-13, phone-11)
#auxpass(known-13, is-12)
#dep(features-8, known-13)
#prep(known-13, for-14)
#prep_of(aware-3, one-17)
#conj_and(many-5, one-17)
#nsubjpass(mentioned-23, one-17)
#aux(mentioned-23, has-19)
#neg(mentioned-23, not-20)
#advmod(mentioned-23, yet-21)
#auxpass(mentioned-23, been-22)
#rcmod(one-17, mentioned-23)
#dep(aware-3, using-25)
#det(phone-27, this-26)
#dobj(using-25, phone-27)
#det(modem-30, a-29)
#prep_as(using-25, modem-30)
#det(computer-33, any-32)
#prep_for(modem-30, computer-33)
#det(port-38, a-35)
#nn(port-38, usb-36)
#num(port-38, 1.0-37)
#prep_with(using-25, port-38)
result:
1	using	_	VBG	VBG	_	7	dep	_	_
2	the	_	DT	DT	_	4	det	_	_
3	gprs	_	JJ	JJ	_	4	amod	_	_
4	option	_	NN	NN	_	1	dobj	_	_
5	you	_	PRP	PRP	_	7	nsubj	_	_
6	can	_	MD	MD	_	7	aux	_	_
7	pay	_	VB	VB	_	0	root	_	_
8	19.99	_	CD	CD	_	7	dobj	_	_
9	extra	_	JJ	JJ	_	11	amod	_	_
10	a	_	DT	DT	_	11	det	_	_
11	month	_	NN	NN	_	7	tmod	_	_
12	and	_	CC	CC	_	7	cc	_	_
13	have	_	VB	VB	_	7	conj	_	_
14	unlimited	_	JJ	JJ	_	16	amod	_	_
15	internet	_	NN	NN	_	16	nn	_	_
16	access	_	NN	NN	_	13	dobj	_	_
17	added	_	VBN	VBN	_	16	vmod	_	_
18	to	_	TO	TO	_	17	prep	_	_
19	you	_	PRP	PRP	_	18	pobj	_	_
20	account	_	NN	NN	_	7	dobj	_	_
21	.	_	.	.	_	0	erased	_	_
#dep(pay-7, using-1)
#det(option-4, the-2)
#amod(option-4, gprs-3)
#dobj(using-1, option-4)
#nsubj(pay-7, you-5)
#nsubj(have-13, you-5)
#aux(pay-7, can-6)
#root(ROOT-0, pay-7)
#dobj(pay-7, 19.99-8)
#amod(month-11, extra-9)
#det(month-11, a-10)
#tmod(pay-7, month-11)
#conj_and(pay-7, have-13)
#amod(access-16, unlimited-14)
#nn(access-16, internet-15)
#dobj(have-13, access-16)
#vmod(access-16, added-17)
#prep_to(added-17, you-19)
#dobj(pay-7, account-20)
result:
1	yes	_	UH	UH	_	5	discourse	_	_
2	it	_	PRP	PRP	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	56k	_	JJ	JJ	_	5	amod	_	_
5	speed	_	NN	NN	_	0	root	_	_
6	,	_	,	,	_	0	erased	_	_
7	but	_	CC	CC	_	5	cc	_	_
8	the	_	DT	DT	_	9	det	_	_
9	functionality	_	NN	NN	_	10	nsubj	_	_
10	is	_	VBZ	VBZ	_	5	conj	_	_
11	what	_	WP	WP	_	15	pobj	_	_
12	you	_	PRP	PRP	_	14	nsubj	_	_
13	are	_	VBP	VBP	_	14	aux	_	_
14	paying	_	VBG	VBG	_	10	ccomp	_	_
15	for	_	IN	IN	_	14	prep	_	_
16	.	_	.	.	_	0	erased	_	_
#discourse(speed-5, yes-1)
#nsubj(speed-5, it-2)
#cop(speed-5, is-3)
#amod(speed-5, 56k-4)
#root(ROOT-0, speed-5)
#det(functionality-9, the-8)
#nsubj(is-10, functionality-9)
#conj_but(speed-5, is-10)
#prep_for(paying-14, what-11)
#nsubj(paying-14, you-12)
#aux(paying-14, are-13)
#ccomp(is-10, paying-14)
result:
1	i	_	FW	FW	_	15	nsubj	_	_
2	myself	_	PRP	PRP	_	3	nsubj	_	_
3	find	_	VBP	VBP	_	1	rcmod	_	_
4	this	_	DT	DT	_	13	det	_	_
5	great	_	JJ	JJ	_	13	amod	_	_
6	for	_	IN	IN	_	5	prep	_	_
7	when	_	WRB	WRB	_	9	advmod	_	_
8	i	_	FW	FW	_	9	nsubj	_	_
9	am	_	VBP	VBP	_	6	pcomp	_	_
10	at	_	IN	IN	_	9	prep	_	_
11	a	_	DT	DT	_	12	det	_	_
12	site	_	NN	NN	_	10	pobj	_	_
13	i	_	FW	FW	_	3	dobj	_	_
14	can	_	MD	MD	_	15	aux	_	_
15	run	_	VB	VB	_	0	root	_	_
16	to	_	TO	TO	_	15	prep	_	_
17	my	_	PRP$	PRP$	_	18	poss	_	_
18	truck	_	NN	NN	_	16	pobj	_	_
19	and	_	CC	CC	_	15	cc	_	_
20	hook	_	NN	NN	_	15	conj	_	_
21	up	_	RP	RP	_	20	prt	_	_
22	my	_	PRP$	PRP$	_	24	poss	_	_
23	modem	_	NN	NN	_	24	nn	_	_
24	cable	_	NN	NN	_	20	dobj	_	_
25	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
26	49.99	_	CD	CD	_	24	dep	_	_
27	@	_	SYM	SYM	_	24	dep	_	_
28	nokiausa.com	_	NN	NN	_	24	amod	_	_
29	or	_	CC	CC	_	28	cc	_	_
30	t-mobile	_	JJ	JJ	_	28	conj	_	_
31	.	_	.	.	_	0	erased	_	_
#nsubj(run-15, i-1)
#nsubj(find-3, myself-2)
#rcmod(i-1, find-3)
#det(i-13, this-4)
#amod(i-13, great-5)
#advmod(am-9, when-7)
#nsubj(am-9, i-8)
#prepc_for(great-5, am-9)
#det(site-12, a-11)
#prep_at(am-9, site-12)
#dobj(find-3, i-13)
#aux(run-15, can-14)
#root(ROOT-0, run-15)
#poss(truck-18, my-17)
#prep_to(run-15, truck-18)
#conj_and(run-15, hook-20)
#prt(hook-20, up-21)
#poss(cable-24, my-22)
#nn(cable-24, modem-23)
#dobj(hook-20, cable-24)
#dep(cable-24, 49.99-26)
#dep(cable-24, @-27)
#amod(cable-24, nokiausa.com-28)
#amod(cable-24, t-mobile-30)
#conj_or(nokiausa.com-28, t-mobile-30)
result:
1	com	_	NN	NN	_	3	nsubj	_	_
2	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
3	press	_	VB	VB	_	17	advcl	_	_
4	dial	_	VB	VB	_	3	xcomp	_	_
5	up	_	RP	RP	_	4	prt	_	_
6	on	_	IN	IN	_	4	prep	_	_
7	my	_	PRP$	PRP$	_	8	poss	_	_
8	laptop	_	NN	NN	_	6	pobj	_	_
9	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
10	by	_	IN	IN	_	8	dep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	way	_	NN	NN	_	10	pobj	_	_
13	it	_	PRP	PRP	_	17	nsubj	_	_
14	is	_	VBZ	VBZ	_	17	cop	_	_
15	a	_	DT	DT	_	17	det	_	_
16	mac	_	NN	NN	_	17	nn	_	_
17	pb	_	NN	NN	_	0	root	_	_
18	1gz	_	JJ	JJ	_	17	dep	_	_
19	.	_	.	.	_	0	erased	_	_
#nsubj(press-3, com-1)
#advcl(pb-17, press-3)
#xcomp(press-3, dial-4)
#prt(dial-4, up-5)
#poss(laptop-8, my-7)
#prep_on(dial-4, laptop-8)
#dep(laptop-8, by-10)
#det(way-12, the-11)
#pobj(by-10, way-12)
#nsubj(pb-17, it-13)
#cop(pb-17, is-14)
#det(pb-17, a-15)
#nn(pb-17, mac-16)
#root(ROOT-0, pb-17)
#dep(pb-17, 1gz-18)
result:
1	and	_	CC	CC	_	9	cc	_	_
2	in	_	IN	IN	_	9	prep	_	_
3	a	_	DT	DT	_	4	det	_	_
4	matter	_	NN	NN	_	2	pobj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	seconds	_	NNS	NNS	_	5	pobj	_	_
7	i	_	FW	FW	_	9	nsubj	_	_
8	can	_	MD	MD	_	9	aux	_	_
9	access	_	VB	VB	_	0	root	_	_
10	my	_	PRP$	PRP$	_	11	poss	_	_
11	email	_	NN	NN	_	9	dobj	_	_
12	,	_	,	,	_	0	erased	_	_
13	fax	_	NN	NN	_	11	conj	_	_
14	,	_	,	,	_	0	erased	_	_
15	and	_	CC	CC	_	11	cc	_	_
16	the	_	DT	DT	_	18	det	_	_
17	entire	_	JJ	JJ	_	18	amod	_	_
18	web	_	NN	NN	_	11	conj	_	_
19	from	_	IN	IN	_	9	prep	_	_
20	my	_	PRP$	PRP$	_	21	poss	_	_
21	truck	_	NN	NN	_	19	pobj	_	_
22	!	_	.	.	_	0	erased	_	_
#cc(access-9, and-1)
#det(matter-4, a-3)
#prep_in(access-9, matter-4)
#prep_of(matter-4, seconds-6)
#nsubj(access-9, i-7)
#aux(access-9, can-8)
#root(ROOT-0, access-9)
#poss(email-11, my-10)
#dobj(access-9, email-11)
#dobj(access-9, fax-13)
#conj_and(email-11, fax-13)
#det(web-18, the-16)
#amod(web-18, entire-17)
#dobj(access-9, web-18)
#conj_and(email-11, web-18)
#poss(truck-21, my-20)
#prep_from(access-9, truck-21)
result:
1	the	_	DT	DT	_	3	det	_	_
2	only	_	JJ	JJ	_	3	amod	_	_
3	problem	_	NN	NN	_	12	nsubj	_	_
4	that	_	IN	IN	_	7	mark	_	_
5	i	_	FW	FW	_	7	nsubj	_	_
6	have	_	VBP	VBP	_	7	aux	_	_
7	found	_	VBN	VBN	_	3	dep	_	_
8	with	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	11	det	_	_
10	internet	_	NN	NN	_	11	nn	_	_
11	service	_	NN	NN	_	8	pobj	_	_
12	is	_	VBZ	VBZ	_	0	root	_	_
13	that	_	IN	IN	_	15	mark	_	_
14	it	_	PRP	PRP	_	15	nsubj	_	_
15	does	_	VBZ	VBZ	_	12	ccomp	_	_
16	not	_	RB	RB	_	15	neg	_	_
17	access	_	NN	NN	_	18	nn	_	_
18	mls	_	NN	NN	_	15	dobj	_	_
19	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
20	real	_	JJ	JJ	_	23	amod	_	_
21	estate	_	NN	NN	_	23	nn	_	_
22	broker	_	NN	NN	_	23	nn	_	_
23	software	_	NN	NN	_	18	appos	_	_
24	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
25	very	_	RB	RB	_	26	advmod	_	_
26	well	_	RB	RB	_	18	cc	_	_
27	at	_	IN	IN	_	28	quantmod	_	_
28	all	_	PDT	PDT	_	18	conj	_	_
29	.	_	.	.	_	0	erased	_	_
#det(problem-3, the-1)
#amod(problem-3, only-2)
#nsubj(is-12, problem-3)
#mark(found-7, that-4)
#nsubj(found-7, i-5)
#aux(found-7, have-6)
#dep(problem-3, found-7)
#det(service-11, the-9)
#nn(service-11, internet-10)
#prep_with(found-7, service-11)
#root(ROOT-0, is-12)
#mark(does-15, that-13)
#nsubj(does-15, it-14)
#ccomp(is-12, does-15)
#neg(does-15, not-16)
#nn(mls-18, access-17)
#dobj(does-15, mls-18)
#amod(software-23, real-20)
#nn(software-23, estate-21)
#nn(software-23, broker-22)
#appos(mls-18, software-23)
#quantmod(all-28, at-27)
#dobj(does-15, all-28)
#conj_and(mls-18, all-28)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	find	_	VBP	VBP	_	0	root	_	_
3	a	_	DT	DT	_	5	det	_	_
4	great	_	JJ	JJ	_	5	amod	_	_
5	amount	_	NN	NN	_	2	dobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	value	_	NN	NN	_	6	pobj	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	this	_	DT	DT	_	10	det	_	_
10	option	_	NN	NN	_	8	pobj	_	_
11	for	_	IN	IN	_	10	prep	_	_
12	any	_	DT	DT	_	11	pobj	_	_
13	and	_	CC	CC	_	12	cc	_	_
14	all	_	PDT	PDT	_	16	predet	_	_
15	the	_	DT	DT	_	16	det	_	_
16	people	_	NNS	NNS	_	12	conj	_	_
17	that	_	WDT	WDT	_	18	nsubj	_	_
18	travel	_	VBP	VBP	_	16	rcmod	_	_
19	buy	_	VB	VB	_	18	xcomp	_	_
20	car	_	NN	NN	_	19	dobj	_	_
21	and	_	CC	CC	_	18	cc	_	_
22	do	_	VBP	VBP	_	24	aux	_	_
23	not	_	RB	RB	_	24	neg	_	_
24	have	_	VB	VB	_	18	conj	_	_
25	access	_	NN	NN	_	24	dobj	_	_
26	to	_	TO	TO	_	24	prep	_	_
27	the	_	DT	DT	_	30	det	_	_
28	t-mobile	_	JJ	JJ	_	30	amod	_	_
29	''	_	''	''	_	0	erased	_	_
30	hot-spots	_	NNS	NNS	_	26	pobj	_	_
31	''	_	''	''	_	0	erased	_	_
32	.	_	.	.	_	0	erased	_	_
#nsubj(find-2, i-1)
#root(ROOT-0, find-2)
#det(amount-5, a-3)
#amod(amount-5, great-4)
#dobj(find-2, amount-5)
#prep_of(amount-5, value-7)
#det(option-10, this-9)
#prep_in(value-7, option-10)
#prep_for(option-10, any-12)
#predet(people-16, all-14)
#det(people-16, the-15)
#prep_for(option-10, people-16)
#conj_and(any-12, people-16)
#nsubj(travel-18, people-16)
#nsubj(have-24, people-16)
#rcmod(people-16, travel-18)
#xcomp(travel-18, buy-19)
#dobj(buy-19, car-20)
#aux(have-24, do-22)
#neg(have-24, not-23)
#rcmod(people-16, have-24)
#conj_and(travel-18, have-24)
#dobj(have-24, access-25)
#det(hot-spots-30, the-27)
#amod(hot-spots-30, t-mobile-28)
#prep_to(have-24, hot-spots-30)
result:
1	it	_	PRP	PRP	_	2	nsubj	_	_
2	does	_	VBZ	VBZ	_	0	root	_	_
3	well	_	RB	RB	_	2	advmod	_	_
4	in	_	IN	IN	_	2	prep	_	_
5	all	_	DT	DT	_	6	det	_	_
6	aspects	_	NNS	NNS	_	4	pobj	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	internet	_	NN	NN	_	9	nn	_	_
9	browsing	_	NN	NN	_	7	pobj	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(does-2, it-1)
#root(ROOT-0, does-2)
#advmod(does-2, well-3)
#det(aspects-6, all-5)
#prep_in(does-2, aspects-6)
#nn(browsing-9, internet-8)
#prep_of(aspects-6, browsing-9)
result:
1	as	_	IN	IN	_	4	mark	_	_
2	i	_	FW	FW	_	4	nsubj	_	_
3	also	_	RB	RB	_	4	advmod	_	_
4	leave	_	VBP	VBP	_	11	advcl	_	_
5	you	_	PRP	PRP	_	4	dobj	_	_
6	with	_	IN	IN	_	4	prep	_	_
7	this	_	DT	DT	_	8	det	_	_
8	review	_	NN	NN	_	6	pobj	_	_
9	i	_	FW	FW	_	11	nsubj	_	_
10	would	_	MD	MD	_	11	aux	_	_
11	like	_	VB	VB	_	0	root	_	_
12	to	_	TO	TO	_	13	aux	_	_
13	thank	_	VB	VB	_	11	xcomp	_	_
14	you	_	PRP	PRP	_	13	dobj	_	_
15	for	_	IN	IN	_	13	prep	_	_
16	reading	_	VBG	VBG	_	15	pcomp	_	_
17	it	_	PRP	PRP	_	16	dobj	_	_
18	.	_	.	.	_	0	erased	_	_
#mark(leave-4, as-1)
#nsubj(leave-4, i-2)
#advmod(leave-4, also-3)
#advcl(like-11, leave-4)
#dobj(leave-4, you-5)
#det(review-8, this-7)
#prep_with(leave-4, review-8)
#nsubj(like-11, i-9)
#nsubj(thank-13, i-9)
#aux(like-11, would-10)
#root(ROOT-0, like-11)
#aux(thank-13, to-12)
#xcomp(like-11, thank-13)
#dobj(thank-13, you-14)
#prepc_for(thank-13, reading-16)
#dobj(reading-16, it-17)
result:
1	do	_	VBP	VBP	_	0	root	_	_
2	too	_	RB	RB	_	3	advmod	_	_
3	many	_	JJ	JJ	_	4	amod	_	_
4	stuffs	_	NNS	NNS	_	1	dobj	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	get	_	VB	VB	_	4	vmod	_	_
7	to	_	TO	TO	_	6	prep	_	_
8	a	_	DT	DT	_	10	det	_	_
9	free	_	JJ	JJ	_	10	amod	_	_
10	phone	_	NN	NN	_	7	pobj	_	_
11	after	_	IN	IN	_	6	prep	_	_
12	rebate	_	NN	NN	_	11	pobj	_	_
13	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, do-1)
#advmod(many-3, too-2)
#amod(stuffs-4, many-3)
#dobj(do-1, stuffs-4)
#aux(get-6, to-5)
#vmod(stuffs-4, get-6)
#det(phone-10, a-8)
#amod(phone-10, free-9)
#prep_to(get-6, phone-10)
#prep_after(get-6, rebate-12)
result:
1	also	_	RB	RB	_	5	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	if	_	IN	IN	_	5	prep	_	_
4	i	_	FW	FW	_	3	pobj	_	_
5	want	_	VBP	VBP	_	0	root	_	_
6	a	_	DT	DT	_	8	det	_	_
7	family	_	NN	NN	_	8	nn	_	_
8	plan	_	NN	NN	_	5	dobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	which	_	WDT	WDT	_	13	dep	_	_
11	mean	_	VBP	VBP	_	13	aux	_	_
12	i	_	FW	FW	_	13	nsubj	_	_
13	need	_	VB	VB	_	5	dep	_	_
14	tw	_	NN	NN	_	15	nn	_	_
15	phones	_	NNS	NNS	_	13	dobj	_	_
16	on	_	IN	IN	_	13	prep	_	_
17	a	_	DT	DT	_	18	det	_	_
18	plan	_	NN	NN	_	16	pobj	_	_
19	.	_	.	.	_	0	erased	_	_
20	.	_	.	.	_	0	erased	_	_
21	.	_	.	.	_	0	erased	_	_
#advmod(want-5, also-1)
#prep_if(want-5, i-4)
#root(ROOT-0, want-5)
#det(plan-8, a-6)
#nn(plan-8, family-7)
#dobj(want-5, plan-8)
#dep(need-13, which-10)
#aux(need-13, mean-11)
#nsubj(need-13, i-12)
#dep(want-5, need-13)
#nn(phones-15, tw-14)
#dobj(need-13, phones-15)
#det(plan-18, a-17)
#prep_on(need-13, plan-18)
result:
1	so	_	RB	RB	_	5	advmod	_	_
2	how	_	WRB	WRB	_	3	advmod	_	_
3	can	_	MD	MD	_	5	nsubj	_	_
4	i	_	FW	FW	_	3	dep	_	_
5	do	_	VBP	VBP	_	0	root	_	_
6	that	_	IN	IN	_	11	mark	_	_
7	...	_	:	:	_	0	erased	_	_
8	are	_	VBP	VBP	_	11	cop	_	_
9	n't	_	RB	RB	_	11	neg	_	_
10	that	_	DT	DT	_	11	dep	_	_
11	free	_	JJ	JJ	_	5	ccomp	_	_
12	for	_	IN	IN	_	11	prep	_	_
13	two	_	CD	CD	_	12	pobj	_	_
14	after	_	IN	IN	_	11	prep	_	_
15	the	_	DT	DT	_	16	det	_	_
16	rebates	_	NNS	NNS	_	14	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#advmod(do-5, so-1)
#advmod(can-3, how-2)
#nsubj(do-5, can-3)
#dep(can-3, i-4)
#root(ROOT-0, do-5)
#mark(free-11, that-6)
#cop(free-11, are-8)
#neg(free-11, n't-9)
#dep(free-11, that-10)
#ccomp(do-5, free-11)
#prep_for(free-11, two-13)
#det(rebates-16, the-15)
#prep_after(free-11, rebates-16)
result:
1	and	_	CC	CC	_	5	cc	_	_
2	how	_	WRB	WRB	_	3	advmod	_	_
3	can	_	MD	MD	_	5	nsubj	_	_
4	i	_	FW	FW	_	3	dep	_	_
5	do	_	VBP	VBP	_	0	root	_	_
6	that	_	DT	DT	_	5	dobj	_	_
7	...	_	:	:	_	0	erased	_	_
8	.	_	.	.	_	0	erased	_	_
#cc(do-5, and-1)
#advmod(can-3, how-2)
#nsubj(do-5, can-3)
#dep(can-3, i-4)
#root(ROOT-0, do-5)
#dobj(do-5, that-6)
result:
1	print	_	VBP	VBP	_	0	root	_	_
2	those	_	DT	DT	_	3	det	_	_
3	coupons	_	NNS	NNS	_	1	nsubj	_	_
4	twice	_	RB	RB	_	5	advmod	_	_
5	for	_	IN	IN	_	1	prep	_	_
6	two	_	CD	CD	_	7	num	_	_
7	phones	_	NNS	NNS	_	5	pobj	_	_
8	?	_	.	.	_	0	erased	_	_
#root(ROOT-0, print-1)
#det(coupons-3, those-2)
#nsubj(print-1, coupons-3)
#advmod(print-1, twice-4)
#num(phones-7, two-6)
#prep_for(print-1, phones-7)
result:
1	...	_	:	:	_	0	erased	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	saw	_	VBD	VBD	_	0	root	_	_
4	another	_	DT	DT	_	5	det	_	_
5	review	_	NN	NN	_	3	dobj	_	_
6	saying	_	VBG	VBG	_	3	xcomp	_	_
7	his	_	PRP$	PRP$	_	9	poss	_	_
8	only	_	JJ	JJ	_	9	amod	_	_
9	gripe	_	NN	NN	_	12	nsubj	_	_
10	was	_	VBD	VBD	_	12	cop	_	_
11	a	_	DT	DT	_	12	det	_	_
12	lack	_	NN	NN	_	6	ccomp	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	voice	_	NN	NN	_	15	nn	_	_
15	dialing	_	NN	NN	_	13	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#nsubj(saw-3, i-2)
#root(ROOT-0, saw-3)
#det(review-5, another-4)
#dobj(saw-3, review-5)
#xcomp(saw-3, saying-6)
#poss(gripe-9, his-7)
#amod(gripe-9, only-8)
#nsubj(lack-12, gripe-9)
#cop(lack-12, was-10)
#det(lack-12, a-11)
#ccomp(saying-6, lack-12)
#nn(dialing-15, voice-14)
#prep_of(lack-12, dialing-15)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	4	nsubj	_	_
3	does	_	VBZ	VBZ	_	4	aux	_	_
4	have	_	VB	VB	_	0	root	_	_
5	voice	_	NN	NN	_	4	dobj	_	_
6	dialing	_	VBG	VBG	_	4	xcomp	_	_
7	according	_	VBG	VBG	_	6	prep	_	_
8	to	_	TO	TO	_	7	pcomp	_	_
9	amazon	_	NNP	NNP	_	8	pobj	_	_
10	&	_	CC	CC	_	9	cc	_	_
11	t-mobile	_	NN	NN	_	9	conj	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	nokia	_	NN	NN	_	11	conj	_	_
14	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(have-4, phone-2)
#aux(have-4, does-3)
#root(ROOT-0, have-4)
#dobj(have-4, voice-5)
#xcomp(have-4, dialing-6)
#prepc_according_to(dialing-6, to-8)
#pobj(dialing-6, amazon-9)
#pobj(dialing-6, t-mobile-11)
#conj_and(amazon-9, t-mobile-11)
#conj_and(amazon-9, nokia-13)
#conj_and(t-mobile-11, nokia-13)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	4	nsubj	_	_
3	may	_	MD	MD	_	4	aux	_	_
4	look	_	VB	VB	_	0	root	_	_
5	large	_	JJ	JJ	_	4	acomp	_	_
6	but	_	CC	CC	_	4	cc	_	_
7	it	_	PRP	PRP	_	11	nsubj	_	_
8	is	_	VBZ	VBZ	_	11	cop	_	_
9	very	_	RB	RB	_	10	advmod	_	_
10	small	_	JJ	JJ	_	11	amod	_	_
11	smaller	_	JJR	JJR	_	4	conj	_	_
12	then	_	RB	RB	_	11	advmod	_	_
13	the	_	DT	DT	_	14	quantmod	_	_
14	3390	_	CD	CD	_	15	num	_	_
15	phone	_	NN	NN	_	12	pobj	_	_
16	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(look-4, phone-2)
#aux(look-4, may-3)
#root(ROOT-0, look-4)
#acomp(look-4, large-5)
#nsubj(smaller-11, it-7)
#cop(smaller-11, is-8)
#advmod(small-10, very-9)
#amod(smaller-11, small-10)
#conj_but(look-4, smaller-11)
#advmod(smaller-11, then-12)
#quantmod(3390-14, the-13)
#num(phone-15, 3390-14)
#pobj(then-12, phone-15)
result:
1	my	_	PRP$	PRP$	_	2	poss	_	_
2	sister	_	NN	NN	_	3	nsubj	_	_
3	has	_	VBZ	VBZ	_	0	root	_	_
4	this	_	DT	DT	_	5	det	_	_
5	series	_	NN	NN	_	3	dobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	phone	_	NN	NN	_	6	pobj	_	_
8	and	_	CC	CC	_	3	cc	_	_
9	she	_	PRP	PRP	_	10	nsubj	_	_
10	loves	_	VBZ	VBZ	_	3	conj	_	_
11	the	_	DT	DT	_	12	det	_	_
12	radio	_	NN	NN	_	10	dobj	_	_
13	and	_	CC	CC	_	12	cc	_	_
14	headset	_	NN	NN	_	12	conj	_	_
15	.	_	.	.	_	0	erased	_	_
#poss(sister-2, my-1)
#nsubj(has-3, sister-2)
#root(ROOT-0, has-3)
#det(series-5, this-4)
#dobj(has-3, series-5)
#prep_of(series-5, phone-7)
#nsubj(loves-10, she-9)
#conj_and(has-3, loves-10)
#det(radio-12, the-11)
#dobj(loves-10, radio-12)
#dobj(loves-10, headset-14)
#conj_and(radio-12, headset-14)
result:
1	i	_	FW	FW	_	10	nsubj	_	_
2	find	_	VB	VB	_	10	parataxis	_	_
3	the	_	DT	DT	_	4	det	_	_
4	lack	_	NN	NN	_	2	dobj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	entertaining	_	JJ	JJ	_	7	amod	_	_
7	games	_	NNS	NNS	_	5	pobj	_	_
8	on	_	IN	IN	_	2	prep	_	_
9	this	_	DT	DT	_	8	pobj	_	_
10	phone	_	VBP	VBP	_	0	root	_	_
11	quite	_	RB	RB	_	12	advmod	_	_
12	disturbing	_	JJ	JJ	_	10	acomp	_	_
13	.	_	.	.	_	0	erased	_	_
#nsubj(phone-10, i-1)
#parataxis(phone-10, find-2)
#det(lack-4, the-3)
#dobj(find-2, lack-4)
#amod(games-7, entertaining-6)
#prep_of(lack-4, games-7)
#prep_on(find-2, this-9)
#root(ROOT-0, phone-10)
#advmod(disturbing-12, quite-11)
#acomp(phone-10, disturbing-12)
result:
1	i	_	FW	FW	_	5	nsubj	_	_
2	do	_	VBP	VBP	_	5	parataxis	_	_
3	n't	_	RB	RB	_	2	nsubj	_	_
4	really	_	RB	RB	_	5	advmod	_	_
5	like	_	VBP	VBP	_	0	root	_	_
6	bounce	_	NN	NN	_	5	dobj	_	_
7	.	_	.	.	_	0	erased	_	_
#nsubj(like-5, i-1)
#parataxis(like-5, do-2)
#nsubj(do-2, n't-3)
#advmod(like-5, really-4)
#root(ROOT-0, like-5)
#dobj(like-5, bounce-6)
result:
1	i	_	FW	FW	_	5	nsubj	_	_
2	have	_	VBP	VBP	_	4	aux	_	_
3	always	_	RB	RB	_	4	advmod	_	_
4	known	_	VBN	VBN	_	5	parataxis	_	_
5	nokia	_	VBZ	VBZ	_	0	root	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	provide	_	VB	VB	_	5	xcomp	_	_
8	me	_	PRP	PRP	_	7	dobj	_	_
9	with	_	IN	IN	_	7	prep	_	_
10	good	_	JJ	JJ	_	11	amod	_	_
11	games	_	NNS	NNS	_	9	pobj	_	_
12	on	_	IN	IN	_	11	prep	_	_
13	their	_	PRP$	PRP$	_	14	poss	_	_
14	phones	_	NNS	NNS	_	12	pobj	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(nokia-5, i-1)
#nsubj(provide-7, i-1)
#aux(known-4, have-2)
#advmod(known-4, always-3)
#parataxis(nokia-5, known-4)
#root(ROOT-0, nokia-5)
#aux(provide-7, to-6)
#xcomp(nokia-5, provide-7)
#dobj(provide-7, me-8)
#amod(games-11, good-10)
#prep_with(provide-7, games-11)
#poss(phones-14, their-13)
#prep_on(games-11, phones-14)
result:
1	battery	_	NN	NN	_	2	nn	_	_
2	life	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	good	_	JJ	JJ	_	0	root	_	_
5	for	_	IN	IN	_	4	prep	_	_
6	a	_	DT	DT	_	7	det	_	_
7	phone	_	NN	NN	_	5	pobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	this	_	DT	DT	_	10	det	_	_
10	size	_	NN	NN	_	8	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#nn(life-2, battery-1)
#nsubj(good-4, life-2)
#cop(good-4, is-3)
#root(ROOT-0, good-4)
#det(phone-7, a-6)
#prep_for(good-4, phone-7)
#det(size-10, this-9)
#prep_of(phone-7, size-10)
result:
1	but	_	CC	CC	_	22	cc	_	_
2	anyway	_	RB	RB	_	22	advmod	_	_
3	,	_	,	,	_	0	erased	_	_
4	the	_	DT	DT	_	6	det	_	_
5	only	_	JJ	JJ	_	6	amod	_	_
6	thing	_	NN	NN	_	22	nsubj	_	_
7	you	_	PRP	PRP	_	10	nsubj	_	_
8	should	_	MD	MD	_	10	aux	_	_
9	really	_	RB	RB	_	10	advmod	_	_
10	look	_	VB	VB	_	6	rcmod	_	_
11	at	_	IN	IN	_	10	prep	_	_
12	here	_	RB	RB	_	11	pcomp	_	_
13	is	_	VBZ	VBZ	_	22	aux	_	_
14	the	_	DT	DT	_	15	det	_	_
15	fact	_	NN	NN	_	22	advmod	_	_
16	that	_	IN	IN	_	20	mark	_	_
17	the	_	DT	DT	_	18	det	_	_
18	phone	_	NN	NN	_	20	nsubj	_	_
19	does	_	VBZ	VBZ	_	20	aux	_	_
20	have	_	VB	VB	_	15	ccomp	_	_
21	voice	_	NN	NN	_	20	dobj	_	_
22	dialing	_	VBG	VBG	_	0	root	_	_
23	.	_	.	.	_	0	erased	_	_
#cc(dialing-22, but-1)
#advmod(dialing-22, anyway-2)
#det(thing-6, the-4)
#amod(thing-6, only-5)
#nsubj(dialing-22, thing-6)
#nsubj(look-10, you-7)
#aux(look-10, should-8)
#advmod(look-10, really-9)
#rcmod(thing-6, look-10)
#prep(look-10, at-11)
#pcomp(at-11, here-12)
#pobj(at-11, here-12)
#aux(dialing-22, is-13)
#det(fact-15, the-14)
#advmod(dialing-22, fact-15)
#mark(have-20, that-16)
#det(phone-18, the-17)
#nsubj(have-20, phone-18)
#aux(have-20, does-19)
#ccomp(fact-15, have-20)
#dobj(have-20, voice-21)
#root(ROOT-0, dialing-22)
result:
1	great	_	JJ	JJ	_	2	amod	_	_
2	screen	_	NN	NN	_	0	root	_	_
3	and	_	CC	CC	_	2	cc	_	_
4	great	_	JJ	JJ	_	5	amod	_	_
5	sound	_	NN	NN	_	2	conj	_	_
6	.	_	.	.	_	0	erased	_	_
#amod(screen-2, great-1)
#root(ROOT-0, screen-2)
#amod(sound-5, great-4)
#conj_and(screen-2, sound-5)
result:
1	ok	_	RB	RB	_	4	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	everybody	_	NN	NN	_	4	nsubj	_	_
4	loves	_	VBZ	VBZ	_	0	root	_	_
5	the	_	DT	DT	_	7	det	_	_
6	fm	_	NN	NN	_	7	nn	_	_
7	radio	_	NN	NN	_	4	dobj	_	_
8	in	_	IN	IN	_	4	prep	_	_
9	this	_	DT	DT	_	8	pobj	_	_
10	,	_	,	,	_	0	erased	_	_
11	but	_	CC	CC	_	4	cc	_	_
12	you	_	PRP	PRP	_	13	nsubj	_	_
13	want	_	VBP	VBP	_	4	conj	_	_
14	a	_	DT	DT	_	16	det	_	_
15	cell	_	NN	NN	_	16	nn	_	_
16	phone	_	NN	NN	_	13	dobj	_	_
17	first	_	RB	RB	_	13	advmod	_	_
18	,	_	,	,	_	0	erased	_	_
19	right	_	RB	RB	_	13	advmod	_	_
20	?	_	.	.	_	0	erased	_	_
#advmod(loves-4, ok-1)
#nsubj(loves-4, everybody-3)
#root(ROOT-0, loves-4)
#det(radio-7, the-5)
#nn(radio-7, fm-6)
#dobj(loves-4, radio-7)
#prep_in(loves-4, this-9)
#nsubj(want-13, you-12)
#conj_but(loves-4, want-13)
#det(phone-16, a-14)
#nn(phone-16, cell-15)
#dobj(want-13, phone-16)
#advmod(want-13, first-17)
#advmod(want-13, right-19)
result:
1	the	_	DT	DT	_	3	det	_	_
2	6610	_	CD	CD	_	3	num	_	_
3	excels	_	NNS	NNS	_	9	nsubj	_	_
4	as	_	IN	IN	_	3	prep	_	_
5	a	_	DT	DT	_	7	det	_	_
6	cell	_	NN	NN	_	7	nn	_	_
7	phone	_	NN	NN	_	4	pobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	thank	_	VBP	VBP	_	0	root	_	_
10	god	_	NN	NN	_	9	dobj	_	_
11	.	_	.	.	_	0	erased	_	_
#det(excels-3, the-1)
#num(excels-3, 6610-2)
#nsubj(thank-9, excels-3)
#det(phone-7, a-5)
#nn(phone-7, cell-6)
#prep_as(excels-3, phone-7)
#root(ROOT-0, thank-9)
#dobj(thank-9, god-10)
result:
1	the	_	DT	DT	_	3	det	_	_
2	voice	_	NN	NN	_	3	nn	_	_
3	quality	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	very	_	RB	RB	_	6	advmod	_	_
6	good	_	JJ	JJ	_	0	root	_	_
7	,	_	,	,	_	0	erased	_	_
8	and	_	CC	CC	_	6	cc	_	_
9	it	_	PRP	PRP	_	10	nsubj	_	_
10	gets	_	VBZ	VBZ	_	6	conj	_	_
11	great	_	JJ	JJ	_	12	amod	_	_
12	reception	_	NN	NN	_	10	dobj	_	_
13	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
14	that	_	WDT	WDT	_	15	nsubj	_	_
15	is	_	VBZ	VBZ	_	12	dep	_	_
16	,	_	,	,	_	0	erased	_	_
17	in	_	IN	IN	_	15	prep	_	_
18	places	_	NNS	NNS	_	17	pobj	_	_
19	where	_	WRB	WRB	_	21	advmod	_	_
20	you	_	PRP	PRP	_	21	nsubj	_	_
21	get	_	VBP	VBP	_	18	rcmod	_	_
22	t-mobile	_	JJ	JJ	_	23	amod	_	_
23	coverage	_	NN	NN	_	21	dobj	_	_
24	,	_	,	,	_	0	erased	_	_
25	which	_	WDT	WDT	_	29	nsubj	_	_
26	is	_	VBZ	VBZ	_	29	cop	_	_
27	not	_	RB	RB	_	29	neg	_	_
28	that	_	DT	DT	_	29	det	_	_
29	good	_	JJ	JJ	_	23	rcmod	_	_
30	;	_	:	:	_	0	erased	_	_
31	see	_	VB	VB	_	21	parataxis	_	_
32	below	_	RB	RB	_	31	advmod	_	_
33	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
34	.	_	.	.	_	0	erased	_	_
#det(quality-3, the-1)
#nn(quality-3, voice-2)
#nsubj(good-6, quality-3)
#cop(good-6, is-4)
#advmod(good-6, very-5)
#root(ROOT-0, good-6)
#nsubj(gets-10, it-9)
#conj_and(good-6, gets-10)
#amod(reception-12, great-11)
#dobj(gets-10, reception-12)
#nsubj(is-15, that-14)
#dep(reception-12, is-15)
#prep_in(is-15, places-18)
#advmod(get-21, where-19)
#nsubj(get-21, you-20)
#rcmod(places-18, get-21)
#amod(coverage-23, t-mobile-22)
#dobj(get-21, coverage-23)
#nsubj(good-29, coverage-23)
#cop(good-29, is-26)
#neg(good-29, not-27)
#det(good-29, that-28)
#rcmod(coverage-23, good-29)
#parataxis(get-21, see-31)
#advmod(see-31, below-32)
result:
1	the	_	DT	DT	_	3	det	_	_
2	color	_	NN	NN	_	3	nn	_	_
3	screen	_	NN	NN	_	4	nsubj	_	_
4	makes	_	VBZ	VBZ	_	0	root	_	_
5	this	_	DT	DT	_	7	det	_	_
6	free-after-rebates	_	JJ	JJ	_	7	amod	_	_
7	phone	_	NN	NN	_	8	nsubj	_	_
8	shine	_	VB	VB	_	4	ccomp	_	_
9	bright	_	JJ	JJ	_	8	acomp	_	_
10	,	_	,	,	_	0	erased	_	_
11	and	_	CC	CC	_	4	cc	_	_
12	commands	_	NNS	NNS	_	15	nsubj	_	_
13	are	_	VBP	VBP	_	15	cop	_	_
14	very	_	RB	RB	_	15	advmod	_	_
15	responsive	_	JJ	JJ	_	4	conj	_	_
16	.	_	.	.	_	0	erased	_	_
#det(screen-3, the-1)
#nn(screen-3, color-2)
#nsubj(makes-4, screen-3)
#root(ROOT-0, makes-4)
#det(phone-7, this-5)
#amod(phone-7, free-after-rebates-6)
#nsubj(shine-8, phone-7)
#ccomp(makes-4, shine-8)
#acomp(shine-8, bright-9)
#nsubj(responsive-15, commands-12)
#cop(responsive-15, are-13)
#advmod(responsive-15, very-14)
#conj_and(makes-4, responsive-15)
result:
1	my	_	PRP$	PRP$	_	3	poss	_	_
2	only	_	JJ	JJ	_	3	amod	_	_
3	gripe	_	NN	NN	_	9	nsubj	_	_
4	about	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	6	det	_	_
6	hardware	_	NN	NN	_	4	pobj	_	_
7	is	_	VBZ	VBZ	_	9	cop	_	_
8	the	_	DT	DT	_	9	det	_	_
9	buttons	_	NNS	NNS	_	0	root	_	_
10	.	_	.	.	_	0	erased	_	_
#poss(gripe-3, my-1)
#amod(gripe-3, only-2)
#nsubj(buttons-9, gripe-3)
#det(hardware-6, the-5)
#prep_about(gripe-3, hardware-6)
#cop(buttons-9, is-7)
#det(buttons-9, the-8)
#root(ROOT-0, buttons-9)
result:
1	nokia	_	NN	NN	_	2	nsubj	_	_
2	seems	_	VBZ	VBZ	_	0	root	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	a	_	DT	DT	_	5	det	_	_
5	campaign	_	NN	NN	_	3	pobj	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	revamp	_	VB	VB	_	5	vmod	_	_
8	the	_	DT	DT	_	10	det	_	_
9	phone	_	NN	NN	_	10	nn	_	_
10	keypad	_	NN	NN	_	7	dobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	which	_	WDT	WDT	_	16	dobj	_	_
13	imho	_	NN	NN	_	16	nsubj	_	_
14	is	_	VBZ	VBZ	_	16	cop	_	_
15	totally	_	RB	RB	_	16	advmod	_	_
16	unnecessary	_	JJ	JJ	_	10	rcmod	_	_
17	.	_	.	.	_	0	erased	_	_
#nsubj(seems-2, nokia-1)
#root(ROOT-0, seems-2)
#det(campaign-5, a-4)
#prep_on(seems-2, campaign-5)
#aux(revamp-7, to-6)
#vmod(campaign-5, revamp-7)
#det(keypad-10, the-8)
#nn(keypad-10, phone-9)
#dobj(revamp-7, keypad-10)
#dobj(unnecessary-16, keypad-10)
#nsubj(unnecessary-16, imho-13)
#cop(unnecessary-16, is-14)
#advmod(unnecessary-16, totally-15)
#rcmod(keypad-10, unnecessary-16)
result:
1	this	_	DT	DT	_	2	det	_	_
2	model	_	NN	NN	_	4	nsubj	_	_
3	does	_	VBZ	VBZ	_	4	aux	_	_
4	have	_	VB	VB	_	11	ccomp	_	_
5	the	_	DT	DT	_	8	det	_	_
6	traditional	_	JJ	JJ	_	8	amod	_	_
7	key	_	JJ	JJ	_	8	amod	_	_
8	arrangement	_	NN	NN	_	4	dobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	it	_	PRP	PRP	_	11	nsubj	_	_
11	's	_	VBZ	VBZ	_	0	root	_	_
12	just	_	RB	RB	_	11	advmod	_	_
13	that	_	IN	IN	_	17	mark	_	_
14	they	_	PRP	PRP	_	17	nsubj	_	_
15	are	_	VBP	VBP	_	17	cop	_	_
16	really	_	RB	RB	_	17	advmod	_	_
17	close	_	JJ	JJ	_	11	ccomp	_	_
18	to	_	TO	TO	_	17	prep	_	_
19	one	_	CD	CD	_	18	pobj	_	_
20	another	_	DT	DT	_	19	dep	_	_
21	,	_	,	,	_	0	erased	_	_
22	and	_	CC	CC	_	17	cc	_	_
23	have	_	VBP	VBP	_	17	conj	_	_
24	unconventional	_	JJ	JJ	_	25	amod	_	_
25	shapes	_	NNS	NNS	_	23	dobj	_	_
26	,	_	,	,	_	0	erased	_	_
27	so	_	IN	IN	_	29	mark	_	_
28	it	_	PRP	PRP	_	29	nsubj	_	_
29	takes	_	VBZ	VBZ	_	11	advcl	_	_
30	a	_	DT	DT	_	31	det	_	_
31	big	_	JJ	JJ	_	29	dobj	_	_
32	getting	_	VBG	VBG	_	33	auxpass	_	_
33	used	_	VBN	VBN	_	29	xcomp	_	_
34	to	_	TO	TO	_	33	prep	_	_
35	for	_	IN	IN	_	33	prep	_	_
36	someone	_	NN	NN	_	35	pobj	_	_
37	like	_	IN	IN	_	36	prep	_	_
38	me	_	PRP	PRP	_	37	pobj	_	_
39	with	_	IN	IN	_	33	prep	_	_
40	big	_	JJ	JJ	_	41	amod	_	_
41	hands	_	NNS	NNS	_	39	pobj	_	_
42	.	_	.	.	_	0	erased	_	_
#det(model-2, this-1)
#nsubj(have-4, model-2)
#aux(have-4, does-3)
#ccomp('s-11, have-4)
#det(arrangement-8, the-5)
#amod(arrangement-8, traditional-6)
#amod(arrangement-8, key-7)
#dobj(have-4, arrangement-8)
#nsubj('s-11, it-10)
#root(ROOT-0, 's-11)
#advmod('s-11, just-12)
#mark(close-17, that-13)
#nsubj(close-17, they-14)
#nsubj(have-23, they-14)
#cop(close-17, are-15)
#advmod(close-17, really-16)
#ccomp('s-11, close-17)
#prep_to(close-17, one-19)
#dep(one-19, another-20)
#ccomp('s-11, have-23)
#conj_and(close-17, have-23)
#amod(shapes-25, unconventional-24)
#dobj(have-23, shapes-25)
#mark(takes-29, so-27)
#nsubj(takes-29, it-28)
#advcl('s-11, takes-29)
#det(big-31, a-30)
#dobj(takes-29, big-31)
#auxpass(used-33, getting-32)
#xcomp(takes-29, used-33)
#prep(used-33, to-34)
#prep_for(used-33, someone-36)
#prep_like(someone-36, me-38)
#amod(hands-41, big-40)
#prep_with(used-33, hands-41)
result:
1	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
2	to	_	TO	TO	_	4	aux	_	_
3	be	_	VB	VB	_	4	cop	_	_
4	fair	_	JJ	JJ	_	10	advcl	_	_
5	,	_	,	,	_	0	erased	_	_
6	the	_	DT	DT	_	7	det	_	_
7	same	_	JJ	JJ	_	10	nsubjpass	_	_
8	can	_	MD	MD	_	10	aux	_	_
9	be	_	VB	VB	_	10	auxpass	_	_
10	said	_	VBN	VBN	_	0	root	_	_
11	about	_	IN	IN	_	10	prep	_	_
12	many	_	JJ	JJ	_	14	amod	_	_
13	korean	_	NN	NN	_	14	nn	_	_
14	imports	_	NNS	NNS	_	11	pobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	and	_	CC	CC	_	10	cc	_	_
17	the	_	DT	DT	_	18	det	_	_
18	nokia	_	NN	NN	_	21	poss	_	_
19	's	_	POS	POS	_	18	possessive	_	_
20	build	_	VBN	VBN	_	21	amod	_	_
21	quality	_	NN	NN	_	24	nsubj	_	_
22	is	_	VBZ	VBZ	_	24	cop	_	_
23	light	_	JJ	JJ	_	24	amod	_	_
24	years	_	NNS	NNS	_	10	conj	_	_
25	ahead	_	RB	RB	_	24	advmod	_	_
26	of	_	IN	IN	_	24	prep	_	_
27	the	_	DT	DT	_	28	det	_	_
28	koreans	_	NNS	NNS	_	26	pobj	_	_
29	.	_	.	.	_	0	erased	_	_
30	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
#aux(fair-4, to-2)
#cop(fair-4, be-3)
#advcl(said-10, fair-4)
#det(same-7, the-6)
#nsubjpass(said-10, same-7)
#aux(said-10, can-8)
#auxpass(said-10, be-9)
#root(ROOT-0, said-10)
#amod(imports-14, many-12)
#nn(imports-14, korean-13)
#prep_about(said-10, imports-14)
#det(nokia-18, the-17)
#poss(quality-21, nokia-18)
#amod(quality-21, build-20)
#nsubj(years-24, quality-21)
#cop(years-24, is-22)
#amod(years-24, light-23)
#conj_and(said-10, years-24)
#det(koreans-28, the-27)
#prep_ahead_of(years-24, koreans-28)
result:
1	other	_	JJ	JJ	_	18	nsubj	_	_
2	than	_	IN	IN	_	1	amod	_	_
3	that	_	IN	IN	_	9	mark	_	_
4	,	_	,	,	_	0	erased	_	_
5	this	_	DT	DT	_	9	nsubj	_	_
6	is	_	VBZ	VBZ	_	9	cop	_	_
7	a	_	DT	DT	_	9	det	_	_
8	perfect	_	JJ	JJ	_	9	amod	_	_
9	phone	_	NN	NN	_	1	dep	_	_
10	for	_	IN	IN	_	9	prep	_	_
11	those	_	DT	DT	_	10	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	us	_	PRP	PRP	_	12	pobj	_	_
14	with	_	IN	IN	_	9	prep	_	_
15	no	_	DT	DT	_	16	neg	_	_
16	patience	_	NN	NN	_	14	pobj	_	_
17	for	_	IN	IN	_	9	prep	_	_
18	flips	_	VBZ	VBZ	_	0	root	_	_
19	.	_	.	.	_	0	erased	_	_
#nsubj(flips-18, other-1)
#amod(other-1, than-2)
#mark(phone-9, that-3)
#nsubj(phone-9, this-5)
#cop(phone-9, is-6)
#det(phone-9, a-7)
#amod(phone-9, perfect-8)
#dep(other-1, phone-9)
#prep_for(phone-9, those-11)
#prep_of(those-11, us-13)
#neg(patience-16, no-15)
#prep_with(phone-9, patience-16)
#prep(phone-9, for-17)
#root(ROOT-0, flips-18)
result:
1	finally	_	RB	RB	_	4	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	i	_	FW	FW	_	4	nsubj	_	_
4	reiterate	_	VBD	VBD	_	0	root	_	_
5	my	_	PRP$	PRP$	_	7	poss	_	_
6	thumbs-down	_	NN	NN	_	7	nn	_	_
7	rating	_	NN	NN	_	4	dobj	_	_
8	for	_	IN	IN	_	7	prep	_	_
9	t-mobile	_	NN	NN	_	8	pobj	_	_
10	as	_	IN	IN	_	4	prep	_	_
11	a	_	DT	DT	_	12	det	_	_
12	carrier	_	NN	NN	_	10	pobj	_	_
13	.	_	.	.	_	0	erased	_	_
#advmod(reiterate-4, finally-1)
#nsubj(reiterate-4, i-3)
#root(ROOT-0, reiterate-4)
#poss(rating-7, my-5)
#nn(rating-7, thumbs-down-6)
#dobj(reiterate-4, rating-7)
#prep_for(rating-7, t-mobile-9)
#det(carrier-12, a-11)
#prep_as(reiterate-4, carrier-12)
result:
1	their	_	PRP$	PRP$	_	3	poss	_	_
2	network	_	NN	NN	_	3	nn	_	_
3	coverage	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	very	_	RB	RB	_	6	advmod	_	_
6	sporadic	_	JJ	JJ	_	0	root	_	_
7	,	_	,	,	_	0	erased	_	_
8	and	_	CC	CC	_	6	cc	_	_
9	the	_	DT	DT	_	10	det	_	_
10	network	_	NN	NN	_	12	nsubjpass	_	_
11	always	_	RB	RB	_	12	advmod	_	_
12	seems	_	VBZ	VBZ	_	6	conj	_	_
13	overloaded	_	VBN	VBN	_	12	acomp	_	_
14	,	_	,	,	_	0	erased	_	_
15	resulting	_	VBG	VBG	_	13	prep	_	_
16	in	_	IN	IN	_	15	pcomp	_	_
17	very	_	RB	RB	_	18	advmod	_	_
18	unpleasant	_	JJ	JJ	_	20	amod	_	_
19	calling	_	NN	NN	_	20	nn	_	_
20	experience	_	NN	NN	_	16	pobj	_	_
21	.	_	.	.	_	0	erased	_	_
#poss(coverage-3, their-1)
#nn(coverage-3, network-2)
#nsubj(sporadic-6, coverage-3)
#cop(sporadic-6, is-4)
#advmod(sporadic-6, very-5)
#root(ROOT-0, sporadic-6)
#det(network-10, the-9)
#nsubjpass(seems-12, network-10)
#advmod(seems-12, always-11)
#conj_and(sporadic-6, seems-12)
#acomp(seems-12, overloaded-13)
#prep(overloaded-13, resulting-15)
#pcomp(resulting-15, in-16)
#advmod(unpleasant-18, very-17)
#amod(experience-20, unpleasant-18)
#nn(experience-20, calling-19)
#pobj(in-16, experience-20)
result:
1	if	_	IN	IN	_	4	mark	_	_
2	you	_	PRP	PRP	_	4	nsubj	_	_
3	can	_	MD	MD	_	4	aux	_	_
4	get	_	VB	VB	_	14	advcl	_	_
5	this	_	DT	DT	_	6	det	_	_
6	phone	_	NN	NN	_	4	dobj	_	_
7	for	_	IN	IN	_	4	prep	_	_
8	cingular	_	NN	NN	_	7	pobj	_	_
9	or	_	CC	CC	_	7	cc	_	_
10	at	_	IN	IN	_	7	conj	_	_
11	&	_	SYM	SYM	_	12	dep	_	_
12	t	_	CD	CD	_	10	dep	_	_
13	,	_	,	,	_	0	erased	_	_
14	go	_	VB	VB	_	0	root	_	_
15	with	_	IN	IN	_	14	prep	_	_
16	the	_	DT	DT	_	18	det	_	_
17	other	_	JJ	JJ	_	18	amod	_	_
18	carriers	_	NNS	NNS	_	15	pobj	_	_
19	.	_	.	.	_	0	erased	_	_
#mark(get-4, if-1)
#nsubj(get-4, you-2)
#nsubj(get-4', you-2)
#aux(get-4, can-3)
#conj_or(get-4, get-4')
#advcl(go-14, get-4)
#advcl(go-14, get-4')
#det(phone-6, this-5)
#dobj(get-4, phone-6)
#prep_at(get-4', cingular-8)
#prep_for(get-4, cingular-8)
#dep(t-12, &-11)
#dep(get-4, t-12)
#root(ROOT-0, go-14)
#det(carriers-18, the-16)
#amod(carriers-18, other-17)
#prep_with(go-14, carriers-18)
result:
1	the	_	DT	DT	_	2	det	_	_
2	nokia	_	NN	NN	_	8	nsubj	_	_
3	6610	_	CD	CD	_	2	dep	_	_
4	is	_	VBZ	VBZ	_	8	cop	_	_
5	a	_	DT	DT	_	8	det	_	_
6	relatively	_	RB	RB	_	7	advmod	_	_
7	new	_	JJ	JJ	_	8	amod	_	_
8	phone	_	NN	NN	_	0	root	_	_
9	,	_	,	,	_	0	erased	_	_
10	and	_	CC	CC	_	8	cc	_	_
11	what	_	WP	WP	_	14	dep	_	_
12	a	_	DT	DT	_	14	det	_	_
13	great	_	JJ	JJ	_	14	amod	_	_
14	phone	_	NN	NN	_	16	advcl	_	_
15	it	_	PRP	PRP	_	16	nsubj	_	_
16	is	_	VBZ	VBZ	_	8	conj	_	_
17	.	_	.	.	_	0	erased	_	_
#det(nokia-2, the-1)
#nsubj(phone-8, nokia-2)
#dep(nokia-2, 6610-3)
#cop(phone-8, is-4)
#det(phone-8, a-5)
#advmod(new-7, relatively-6)
#amod(phone-8, new-7)
#root(ROOT-0, phone-8)
#dep(phone-14, what-11)
#det(phone-14, a-12)
#amod(phone-14, great-13)
#advcl(is-16, phone-14)
#nsubj(is-16, it-15)
#conj_and(phone-8, is-16)
result:
1	when	_	WRB	WRB	_	6	advmod	_	_
2	i	_	FW	FW	_	6	prep	_	_
3	first	_	JJ	JJ	_	4	amod	_	_
4	saw	_	NN	NN	_	2	pobj	_	_
5	the	_	DT	DT	_	6	det	_	_
6	6610	_	NNS	NNS	_	9	advcl	_	_
7	,	_	,	,	_	0	erased	_	_
8	i	_	FW	FW	_	9	nsubj	_	_
9	thought	_	VBD	VBD	_	0	root	_	_
10	it	_	PRP	PRP	_	13	nsubj	_	_
11	was	_	VBD	VBD	_	13	cop	_	_
12	too	_	RB	RB	_	13	advmod	_	_
13	small	_	JJ	JJ	_	9	ccomp	_	_
14	.	_	.	.	_	0	erased	_	_
#advmod(6610-6, when-1)
#prep(6610-6, i-2)
#amod(saw-4, first-3)
#pobj(i-2, saw-4)
#det(6610-6, the-5)
#advcl(thought-9, 6610-6)
#nsubj(thought-9, i-8)
#root(ROOT-0, thought-9)
#nsubj(small-13, it-10)
#cop(small-13, was-11)
#advmod(small-13, too-12)
#ccomp(thought-9, small-13)
result:
1	after	_	IN	IN	_	6	prep	_	_
2	using	_	VBG	VBG	_	1	pcomp	_	_
3	it	_	PRP	PRP	_	2	dobj	_	_
4	,	_	,	,	_	0	erased	_	_
5	i	_	FW	FW	_	6	nsubj	_	_
6	found	_	VBD	VBD	_	0	root	_	_
7	the	_	DT	DT	_	8	det	_	_
8	size	_	NN	NN	_	6	dobj	_	_
9	to	_	TO	TO	_	11	aux	_	_
10	be	_	VB	VB	_	11	cop	_	_
11	perfect	_	JJ	JJ	_	8	vmod	_	_
12	for	_	IN	IN	_	11	prep	_	_
13	carrying	_	VBG	VBG	_	12	pcomp	_	_
14	in	_	IN	IN	_	13	prep	_	_
15	a	_	DT	DT	_	16	det	_	_
16	pocket	_	NN	NN	_	14	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#prepc_after(found-6, using-2)
#dobj(using-2, it-3)
#nsubj(found-6, i-5)
#root(ROOT-0, found-6)
#det(size-8, the-7)
#dobj(found-6, size-8)
#aux(perfect-11, to-9)
#cop(perfect-11, be-10)
#vmod(size-8, perfect-11)
#prepc_for(perfect-11, carrying-13)
#det(pocket-16, a-15)
#prep_in(carrying-13, pocket-16)
result:
1	it	_	PRP	PRP	_	6	nsubj	_	_
2	is	_	VBZ	VBZ	_	6	cop	_	_
3	just	_	RB	RB	_	6	advmod	_	_
4	a	_	DT	DT	_	5	det	_	_
5	tad	_	RB	RB	_	6	npadvmod	_	_
6	small	_	JJ	JJ	_	0	root	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	hold	_	VB	VB	_	6	xcomp	_	_
9	to	_	TO	TO	_	8	prep	_	_
10	your	_	PRP$	PRP$	_	11	poss	_	_
11	ear	_	NN	NN	_	9	pobj	_	_
12	with	_	IN	IN	_	8	prep	_	_
13	your	_	PRP$	PRP$	_	14	poss	_	_
14	shoulder	_	NN	NN	_	12	pobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	but	_	CC	CC	_	6	cc	_	_
17	that	_	WDT	WDT	_	19	nsubjpass	_	_
18	is	_	VBZ	VBZ	_	19	auxpass	_	_
19	solved	_	VBN	VBN	_	6	conj	_	_
20	with	_	IN	IN	_	19	prep	_	_
21	the	_	DT	DT	_	25	det	_	_
22	very	_	RB	RB	_	23	advmod	_	_
23	comfortable	_	JJ	JJ	_	25	amod	_	_
24	handsfree	_	JJ	JJ	_	25	amod	_	_
25	ear-piece	_	NN	NN	_	20	pobj	_	_
26	which	_	WDT	WDT	_	28	nsubjpass	_	_
27	is	_	VBZ	VBZ	_	28	auxpass	_	_
28	included	_	VBN	VBN	_	25	rcmod	_	_
29	.	_	.	.	_	0	erased	_	_
#nsubj(small-6, it-1)
#nsubj(hold-8, it-1)
#cop(small-6, is-2)
#advmod(small-6, just-3)
#det(tad-5, a-4)
#npadvmod(small-6, tad-5)
#root(ROOT-0, small-6)
#aux(hold-8, to-7)
#xcomp(small-6, hold-8)
#poss(ear-11, your-10)
#prep_to(hold-8, ear-11)
#poss(shoulder-14, your-13)
#prep_with(hold-8, shoulder-14)
#nsubjpass(solved-19, that-17)
#auxpass(solved-19, is-18)
#conj_but(small-6, solved-19)
#det(ear-piece-25, the-21)
#advmod(comfortable-23, very-22)
#amod(ear-piece-25, comfortable-23)
#amod(ear-piece-25, handsfree-24)
#prep_with(solved-19, ear-piece-25)
#nsubjpass(included-28, ear-piece-25)
#auxpass(included-28, is-27)
#rcmod(ear-piece-25, included-28)
result:
1	the	_	DT	DT	_	2	det	_	_
2	ear-piece	_	NN	NN	_	3	nsubj	_	_
3	has	_	VBZ	VBZ	_	0	root	_	_
4	a	_	DT	DT	_	5	det	_	_
5	button	_	NN	NN	_	3	dobj	_	_
6	that	_	WDT	WDT	_	7	nsubj	_	_
7	answers	_	VBZ	VBZ	_	5	rcmod	_	_
8	and	_	CC	CC	_	11	cc	_	_
9	hangs-up	_	JJ	JJ	_	11	amod	_	_
10	the	_	DT	DT	_	11	det	_	_
11	phone	_	NN	NN	_	7	dobj	_	_
12	so	_	IN	IN	_	16	mark	_	_
13	you	_	PRP	PRP	_	16	nsubj	_	_
14	do	_	VBP	VBP	_	16	aux	_	_
15	not	_	RB	RB	_	16	neg	_	_
16	have	_	VB	VB	_	3	advcl	_	_
17	to	_	TO	TO	_	16	prep	_	_
18	mess	_	NN	NN	_	17	pobj	_	_
19	with	_	IN	IN	_	16	prep	_	_
20	the	_	DT	DT	_	21	det	_	_
21	phone	_	NN	NN	_	19	pobj	_	_
22	at	_	IN	IN	_	16	prep	_	_
23	all	_	DT	DT	_	22	pobj	_	_
24	,	_	,	,	_	0	erased	_	_
25	unless	_	IN	IN	_	26	mark	_	_
26	dialing	_	VBG	VBG	_	16	advcl	_	_
27	a	_	DT	DT	_	28	det	_	_
28	number	_	NN	NN	_	26	dobj	_	_
29	.	_	.	.	_	0	erased	_	_
#det(ear-piece-2, the-1)
#nsubj(has-3, ear-piece-2)
#root(ROOT-0, has-3)
#det(button-5, a-4)
#dobj(has-3, button-5)
#nsubj(answers-7, button-5)
#rcmod(button-5, answers-7)
#cc(phone-11, and-8)
#amod(phone-11, hangs-up-9)
#det(phone-11, the-10)
#dobj(answers-7, phone-11)
#mark(have-16, so-12)
#nsubj(have-16, you-13)
#aux(have-16, do-14)
#neg(have-16, not-15)
#advcl(has-3, have-16)
#prep_to(have-16, mess-18)
#det(phone-21, the-20)
#prep_with(have-16, phone-21)
#prep_at(have-16, all-23)
#mark(dialing-26, unless-25)
#advcl(have-16, dialing-26)
#det(number-28, a-27)
#dobj(dialing-26, number-28)
result:
1	unfortunately	_	RB	RB	_	7	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	the	_	DT	DT	_	4	det	_	_
4	6610	_	CD	CD	_	7	nsubj	_	_
5	does	_	VBZ	VBZ	_	7	aux	_	_
6	not	_	RB	RB	_	7	neg	_	_
7	offer	_	VB	VB	_	0	root	_	_
8	voice	_	NN	NN	_	7	dobj	_	_
9	dialing	_	VBG	VBG	_	7	prep	_	_
10	like	_	IN	IN	_	9	pcomp	_	_
11	my	_	PRP$	PRP$	_	13	poss	_	_
12	previous	_	JJ	JJ	_	13	amod	_	_
13	phone	_	NN	NN	_	10	pobj	_	_
14	,	_	,	,	_	0	erased	_	_
15	but	_	CC	CC	_	7	cc	_	_
16	the	_	DT	DT	_	18	det	_	_
17	other	_	JJ	JJ	_	18	amod	_	_
18	features	_	NNS	NNS	_	21	nsubj	_	_
19	it	_	PRP	PRP	_	20	nsubj	_	_
20	packs	_	VBZ	VBZ	_	18	rcmod	_	_
21	outweighs	_	VBZ	VBZ	_	7	conj	_	_
22	this	_	DT	DT	_	21	dobj	_	_
23	shortcoming	_	VBG	VBG	_	22	amod	_	_
24	.	_	.	.	_	0	erased	_	_
#advmod(offer-7, unfortunately-1)
#det(6610-4, the-3)
#nsubj(offer-7, 6610-4)
#aux(offer-7, does-5)
#neg(offer-7, not-6)
#root(ROOT-0, offer-7)
#dobj(offer-7, voice-8)
#prep(offer-7, dialing-9)
#pcomp(dialing-9, like-10)
#poss(phone-13, my-11)
#amod(phone-13, previous-12)
#pobj(like-10, phone-13)
#det(features-18, the-16)
#amod(features-18, other-17)
#nsubj(outweighs-21, features-18)
#nsubj(packs-20, it-19)
#rcmod(features-18, packs-20)
#conj_but(offer-7, outweighs-21)
#dobj(outweighs-21, this-22)
#amod(this-22, shortcoming-23)
result:
1	when	_	WRB	WRB	_	3	advmod	_	_
2	i	_	FW	FW	_	3	nsubj	_	_
3	turned	_	VBD	VBD	_	14	advcl	_	_
4	the	_	DT	DT	_	5	det	_	_
5	phone	_	NN	NN	_	3	dobj	_	_
6	on	_	RP	RP	_	3	prt	_	_
7	,	_	,	,	_	0	erased	_	_
8	the	_	DT	DT	_	10	det	_	_
9	first	_	JJ	JJ	_	10	amod	_	_
10	thing	_	NN	NN	_	14	nsubj	_	_
11	that	_	WDT	WDT	_	12	nsubj	_	_
12	hit	_	VBD	VBD	_	10	rcmod	_	_
13	me	_	PRP	PRP	_	12	dobj	_	_
14	is	_	VBZ	VBZ	_	0	root	_	_
15	how	_	WRB	WRB	_	16	advmod	_	_
16	good	_	JJ	JJ	_	19	dep	_	_
17	the	_	DT	DT	_	18	det	_	_
18	screen	_	NN	NN	_	19	nsubj	_	_
19	is	_	VBZ	VBZ	_	14	ccomp	_	_
20	.	_	.	.	_	0	erased	_	_
#advmod(turned-3, when-1)
#nsubj(turned-3, i-2)
#advcl(is-14, turned-3)
#det(phone-5, the-4)
#dobj(turned-3, phone-5)
#prt(turned-3, on-6)
#det(thing-10, the-8)
#amod(thing-10, first-9)
#nsubj(hit-12, thing-10)
#nsubj(is-14, thing-10)
#rcmod(thing-10, hit-12)
#dobj(hit-12, me-13)
#root(ROOT-0, is-14)
#advmod(good-16, how-15)
#dep(is-19, good-16)
#det(screen-18, the-17)
#nsubj(is-19, screen-18)
#ccomp(is-14, is-19)
result:
1	the	_	DT	DT	_	2	det	_	_
2	resolution	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	very	_	RB	RB	_	5	advmod	_	_
5	good	_	JJ	JJ	_	0	root	_	_
6	and	_	CC	CC	_	5	cc	_	_
7	the	_	DT	DT	_	8	det	_	_
8	colors	_	NNS	NNS	_	10	nsubj	_	_
9	are	_	VBP	VBP	_	10	cop	_	_
10	bright	_	JJ	JJ	_	5	conj	_	_
11	and	_	CC	CC	_	10	cc	_	_
12	even	_	RB	RB	_	13	advmod	_	_
13	changeable	_	JJ	JJ	_	10	conj	_	_
14	!	_	.	.	_	0	erased	_	_
#det(resolution-2, the-1)
#nsubj(good-5, resolution-2)
#cop(good-5, is-3)
#advmod(good-5, very-4)
#root(ROOT-0, good-5)
#det(colors-8, the-7)
#nsubj(bright-10, colors-8)
#nsubj(changeable-13, colors-8)
#cop(bright-10, are-9)
#conj_and(good-5, bright-10)
#advmod(changeable-13, even-12)
#conj_and(good-5, changeable-13)
#conj_and(bright-10, changeable-13)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	3	nsubj	_	_
3	has	_	VBZ	VBZ	_	0	root	_	_
4	several	_	JJ	JJ	_	6	amod	_	_
5	color	_	NN	NN	_	6	nn	_	_
6	schemes	_	NNS	NNS	_	3	dobj	_	_
7	you	_	PRP	PRP	_	9	nsubj	_	_
8	can	_	MD	MD	_	9	aux	_	_
9	choose	_	VB	VB	_	3	dep	_	_
10	from	_	IN	IN	_	9	prep	_	_
11	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(has-3, phone-2)
#root(ROOT-0, has-3)
#amod(schemes-6, several-4)
#nn(schemes-6, color-5)
#dobj(has-3, schemes-6)
#nsubj(choose-9, you-7)
#aux(choose-9, can-8)
#dep(has-3, choose-9)
#prep(choose-9, from-10)
result:
1	i	_	FW	FW	_	5	nsubj	_	_
2	like	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	4	det	_	_
4	default	_	NN	NN	_	2	pobj	_	_
5	blue	_	NN	NN	_	0	root	_	_
6	.	_	.	.	_	0	erased	_	_
#nsubj(blue-5, i-1)
#det(default-4, the-3)
#prep_like(i-1, default-4)
#root(ROOT-0, blue-5)
result:
1	you	_	PRP	PRP	_	4	nsubj	_	_
2	can	_	MD	MD	_	4	aux	_	_
3	also	_	RB	RB	_	4	advmod	_	_
4	set	_	VB	VB	_	0	root	_	_
5	a	_	DT	DT	_	7	det	_	_
6	background	_	NN	NN	_	7	nn	_	_
7	wallpaper	_	NN	NN	_	4	dobj	_	_
8	.	_	.	.	_	0	erased	_	_
#nsubj(set-4, you-1)
#aux(set-4, can-2)
#advmod(set-4, also-3)
#root(ROOT-0, set-4)
#det(wallpaper-7, a-5)
#nn(wallpaper-7, background-6)
#dobj(set-4, wallpaper-7)
result:
1	the	_	DT	DT	_	2	det	_	_
2	ringtones	_	NNS	NNS	_	3	nsubj	_	_
3	included	_	VBD	VBD	_	0	root	_	_
4	are	_	VBP	VBP	_	5	cop	_	_
5	awesome	_	JJ	JJ	_	3	ccomp	_	_
6	,	_	,	,	_	0	erased	_	_
7	and	_	CC	CC	_	5	cc	_	_
8	did	_	VBD	VBD	_	5	conj	_	_
9	i	_	FW	FW	_	10	nsubj	_	_
10	mention	_	NN	NN	_	8	ccomp	_	_
11	they	_	PRP	PRP	_	13	nsubj	_	_
12	were	_	VBD	VBD	_	13	cop	_	_
13	polyphonic	_	JJ	JJ	_	10	ccomp	_	_
14	?	_	.	.	_	0	erased	_	_
#det(ringtones-2, the-1)
#nsubj(included-3, ringtones-2)
#root(ROOT-0, included-3)
#cop(awesome-5, are-4)
#ccomp(included-3, awesome-5)
#ccomp(included-3, did-8)
#conj_and(awesome-5, did-8)
#nsubj(mention-10, i-9)
#ccomp(did-8, mention-10)
#nsubj(polyphonic-13, they-11)
#cop(polyphonic-13, were-12)
#ccomp(mention-10, polyphonic-13)
result:
1	no	_	DT	DT	_	4	neg	_	_
2	more	_	RBR	RBR	_	3	advmod	_	_
3	annoying	_	JJ	JJ	_	4	amod	_	_
4	series	_	NN	NN	_	0	root	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	beeps	_	NNS	NNS	_	5	pobj	_	_
7	.	_	.	.	_	0	erased	_	_
#neg(series-4, no-1)
#advmod(annoying-3, more-2)
#amod(series-4, annoying-3)
#root(ROOT-0, series-4)
#prep_of(series-4, beeps-6)
result:
1	this	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	3	nsubj	_	_
3	plays	_	VBZ	VBZ	_	0	root	_	_
4	up	_	RP	RP	_	3	prt	_	_
5	to	_	TO	TO	_	3	prep	_	_
6	4	_	CD	CD	_	7	num	_	_
7	tones	_	NNS	NNS	_	5	pobj	_	_
8	at	_	IN	IN	_	7	prep	_	_
9	one	_	CD	CD	_	10	num	_	_
10	time	_	NN	NN	_	8	pobj	_	_
11	and	_	CC	CC	_	3	cc	_	_
12	it	_	PRP	PRP	_	14	nsubj	_	_
13	actually	_	RB	RB	_	14	advmod	_	_
14	sounds	_	VBZ	VBZ	_	3	conj	_	_
15	like	_	IN	IN	_	14	prep	_	_
16	music	_	NN	NN	_	15	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#det(phone-2, this-1)
#nsubj(plays-3, phone-2)
#root(ROOT-0, plays-3)
#prt(plays-3, up-4)
#num(tones-7, 4-6)
#prep_to(plays-3, tones-7)
#num(time-10, one-9)
#prep_at(tones-7, time-10)
#nsubj(sounds-14, it-12)
#advmod(sounds-14, actually-13)
#conj_and(plays-3, sounds-14)
#prep_like(sounds-14, music-16)
result:
1	you	_	PRP	PRP	_	4	nsubj	_	_
2	can	_	MD	MD	_	4	aux	_	_
3	also	_	RB	RB	_	4	advmod	_	_
4	assign	_	VB	VB	_	0	root	_	_
5	special	_	JJ	JJ	_	6	amod	_	_
6	rings	_	NNS	NNS	_	4	dobj	_	_
7	and	_	CC	CC	_	6	cc	_	_
8	graphics	_	NNS	NNS	_	6	conj	_	_
9	to	_	TO	TO	_	4	prep	_	_
10	special	_	JJ	JJ	_	11	amod	_	_
11	people	_	NNS	NNS	_	9	pobj	_	_
12	when	_	WRB	WRB	_	14	advmod	_	_
13	they	_	PRP	PRP	_	14	nsubj	_	_
14	call	_	VBP	VBP	_	4	advcl	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(assign-4, you-1)
#aux(assign-4, can-2)
#advmod(assign-4, also-3)
#root(ROOT-0, assign-4)
#amod(rings-6, special-5)
#dobj(assign-4, rings-6)
#dobj(assign-4, graphics-8)
#conj_and(rings-6, graphics-8)
#amod(people-11, special-10)
#prep_to(assign-4, people-11)
#advmod(call-14, when-12)
#nsubj(call-14, they-13)
#advcl(assign-4, call-14)
result:
1	the	_	DT	DT	_	3	det	_	_
2	massive	_	JJ	JJ	_	3	amod	_	_
3	phonebook	_	NN	NN	_	5	nsubj	_	_
4	can	_	MD	MD	_	5	aux	_	_
5	hold	_	VB	VB	_	0	root	_	_
6	300	_	CD	CD	_	7	num	_	_
7	entries	_	NNS	NNS	_	5	dobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	with	_	IN	IN	_	5	prep	_	_
10	multiple	_	JJ	JJ	_	12	amod	_	_
11	phone	_	NN	NN	_	12	nn	_	_
12	number	_	NN	NN	_	9	pobj	_	_
13	per	_	IN	IN	_	12	prep	_	_
14	entry	_	NN	NN	_	13	pobj	_	_
15	,	_	,	,	_	0	erased	_	_
16	so	_	IN	IN	_	19	mark	_	_
17	you	_	PRP	PRP	_	19	nsubj	_	_
18	can	_	MD	MD	_	19	aux	_	_
19	program	_	VB	VB	_	5	advcl	_	_
20	your	_	PRP$	PRP$	_	21	poss	_	_
21	boss	_	NN	NN	_	23	poss	_	_
22	's	_	POS	POS	_	21	possessive	_	_
23	home	_	NN	NN	_	19	dobj	_	_
24	,	_	,	,	_	0	erased	_	_
25	work	_	VB	VB	_	19	conj	_	_
26	and	_	CC	CC	_	19	cc	_	_
27	cellphone	_	VB	VB	_	19	conj	_	_
28	numbers	_	NNS	NNS	_	27	dobj	_	_
29	all	_	DT	DT	_	30	dep	_	_
30	under	_	IN	IN	_	27	prep	_	_
31	one	_	CD	CD	_	32	num	_	_
32	contact	_	NN	NN	_	30	pobj	_	_
33	.	_	.	.	_	0	erased	_	_
#det(phonebook-3, the-1)
#amod(phonebook-3, massive-2)
#nsubj(hold-5, phonebook-3)
#aux(hold-5, can-4)
#root(ROOT-0, hold-5)
#num(entries-7, 300-6)
#dobj(hold-5, entries-7)
#amod(number-12, multiple-10)
#nn(number-12, phone-11)
#prep_with(hold-5, number-12)
#prep_per(number-12, entry-14)
#mark(program-19, so-16)
#nsubj(program-19, you-17)
#nsubj(work-25, you-17)
#nsubj(cellphone-27, you-17)
#aux(program-19, can-18)
#advcl(hold-5, program-19)
#poss(boss-21, your-20)
#poss(home-23, boss-21)
#dobj(program-19, home-23)
#advcl(hold-5, work-25)
#conj_and(program-19, work-25)
#advcl(hold-5, cellphone-27)
#conj_and(program-19, cellphone-27)
#dobj(cellphone-27, numbers-28)
#dep(cellphone-27, all-29)
#num(contact-32, one-31)
#prep_under(cellphone-27, contact-32)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	4	nsubj	_	_
3	also	_	RB	RB	_	4	advmod	_	_
4	sports	_	VBZ	VBZ	_	0	root	_	_
5	an	_	DT	DT	_	7	det	_	_
6	image	_	NN	NN	_	7	nn	_	_
7	gallery	_	NN	NN	_	4	dobj	_	_
8	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
9	with	_	IN	IN	_	7	dep	_	_
10	option	_	NN	NN	_	12	nn	_	_
11	camera	_	NN	NN	_	12	nn	_	_
12	attachment	_	NN	NN	_	9	pobj	_	_
13	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
14	,	_	,	,	_	0	erased	_	_
15	a	_	DT	DT	_	16	det	_	_
16	calendar	_	NN	NN	_	7	dep	_	_
17	/	_	:	:	_	16	punct	_	_
18	organizer	_	NN	NN	_	16	dep	_	_
19	,	_	,	,	_	0	erased	_	_
20	alarm	_	NN	NN	_	21	nn	_	_
21	clock	_	NN	NN	_	18	appos	_	_
22	with	_	IN	IN	_	16	prep	_	_
23	snooze	_	NN	NN	_	22	pobj	_	_
24	,	_	,	,	_	0	erased	_	_
25	fm	_	NN	NN	_	26	nn	_	_
26	radio	_	NN	NN	_	7	conj	_	_
27	-LRB-	_	-LRB-	-LRB-	_	0	erased	_	_
28	way	_	NN	NN	_	29	nsubj	_	_
29	cool	_	VBP	VBP	_	26	dep	_	_
30	,	_	,	,	_	0	erased	_	_
31	even	_	RB	RB	_	34	advmod	_	_
32	if	_	IN	IN	_	34	mark	_	_
33	it	_	PRP	PRP	_	34	nsubj	_	_
34	is	_	VBZ	VBZ	_	29	advcl	_	_
35	just	_	RB	RB	_	34	advmod	_	_
36	through	_	IN	IN	_	34	prep	_	_
37	an	_	DT	DT	_	38	det	_	_
38	ear-peice	_	JJ	JJ	_	36	pobj	_	_
39	-RRB-	_	-RRB-	-RRB-	_	0	erased	_	_
40	,	_	,	,	_	0	erased	_	_
41	games	_	NNS	NNS	_	7	conj	_	_
42	,	_	,	,	_	0	erased	_	_
43	java	_	NN	NN	_	44	nn	_	_
44	applications	_	NNS	NNS	_	7	conj	_	_
45	and	_	CC	CC	_	7	cc	_	_
46	gprs	_	NNS	NNS	_	7	conj	_	_
47	high-speed	_	JJ	JJ	_	49	amod	_	_
48	internet	_	NN	NN	_	49	nn	_	_
49	connection	_	NN	NN	_	7	dep	_	_
50	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(sports-4, phone-2)
#advmod(sports-4, also-3)
#root(ROOT-0, sports-4)
#det(gallery-7, an-5)
#nn(gallery-7, image-6)
#dobj(sports-4, gallery-7)
#iobj(sports-4, gallery-7)
#dep(gallery-7, with-9)
#nn(attachment-12, option-10)
#nn(attachment-12, camera-11)
#pobj(with-9, attachment-12)
#det(calendar-16, a-15)
#dep(gallery-7, calendar-16)
#punct(calendar-16, /-17)
#dep(calendar-16, organizer-18)
#nn(clock-21, alarm-20)
#appos(organizer-18, clock-21)
#prep_with(calendar-16, snooze-23)
#nn(radio-26, fm-25)
#dobj(sports-4, radio-26)
#iobj(sports-4, radio-26)
#conj_and(gallery-7, radio-26)
#nsubj(cool-29, way-28)
#dep(radio-26, cool-29)
#advmod(is-34, even-31)
#mark(is-34, if-32)
#nsubj(is-34, it-33)
#advcl(cool-29, is-34)
#advmod(is-34, just-35)
#det(ear-peice-38, an-37)
#prep_through(is-34, ear-peice-38)
#dobj(sports-4, games-41)
#iobj(sports-4, games-41)
#conj_and(gallery-7, games-41)
#nn(applications-44, java-43)
#dobj(sports-4, applications-44)
#iobj(sports-4, applications-44)
#conj_and(gallery-7, applications-44)
#dobj(sports-4, gprs-46)
#iobj(sports-4, gprs-46)
#conj_and(gallery-7, gprs-46)
#amod(connection-49, high-speed-47)
#nn(connection-49, internet-48)
#dep(gallery-7, connection-49)
result:
1	the	_	DT	DT	_	3	det	_	_
2	gprs	_	JJ	JJ	_	3	amod	_	_
3	connection	_	NN	NN	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	sometimes	_	RB	RB	_	6	advmod	_	_
6	slow	_	JJ	JJ	_	0	root	_	_
7	,	_	,	,	_	0	erased	_	_
8	and	_	CC	CC	_	6	cc	_	_
9	writing	_	VBG	VBG	_	21	csubj	_	_
10	instant	_	JJ	JJ	_	11	amod	_	_
11	messages	_	NNS	NNS	_	9	dobj	_	_
12	with	_	IN	IN	_	9	prep	_	_
13	the	_	DT	DT	_	18	det	_	_
14	included	_	VBN	VBN	_	18	amod	_	_
15	aol	_	NN	NN	_	18	nn	_	_
16	instant	_	JJ	JJ	_	18	amod	_	_
17	messenger	_	NN	NN	_	18	nn	_	_
18	software	_	NN	NN	_	12	pobj	_	_
19	is	_	VBZ	VBZ	_	21	cop	_	_
20	a	_	DT	DT	_	21	det	_	_
21	pain	_	NN	NN	_	6	conj	_	_
22	,	_	,	,	_	0	erased	_	_
23	but	_	CC	CC	_	21	cc	_	_
24	the	_	DT	DT	_	27	det	_	_
25	other	_	JJ	JJ	_	27	amod	_	_
26	t-zones	_	JJ	JJ	_	27	amod	_	_
27	applications	_	NNS	NNS	_	30	nsubj	_	_
28	are	_	VBP	VBP	_	30	cop	_	_
29	quite	_	RB	RB	_	30	advmod	_	_
30	useful	_	JJ	JJ	_	21	conj	_	_
31	.	_	.	.	_	0	erased	_	_
#det(connection-3, the-1)
#amod(connection-3, gprs-2)
#nsubj(slow-6, connection-3)
#cop(slow-6, is-4)
#advmod(slow-6, sometimes-5)
#root(ROOT-0, slow-6)
#csubj(pain-21, writing-9)
#amod(messages-11, instant-10)
#dobj(writing-9, messages-11)
#det(software-18, the-13)
#amod(software-18, included-14)
#nn(software-18, aol-15)
#amod(software-18, instant-16)
#nn(software-18, messenger-17)
#prep_with(writing-9, software-18)
#cop(pain-21, is-19)
#det(pain-21, a-20)
#conj_and(slow-6, pain-21)
#det(applications-27, the-24)
#amod(applications-27, other-25)
#amod(applications-27, t-zones-26)
#nsubj(useful-30, applications-27)
#cop(useful-30, are-28)
#advmod(useful-30, quite-29)
#conj_and(slow-6, useful-30)
#conj_but(pain-21, useful-30)
result:
1	you	_	PRP	PRP	_	3	nsubj	_	_
2	can	_	MD	MD	_	3	aux	_	_
3	get	_	VB	VB	_	0	root	_	_
4	weather	_	NN	NN	_	3	dobj	_	_
5	,	_	,	,	_	0	erased	_	_
6	movies	_	NNS	NNS	_	4	conj	_	_
7	,	_	,	,	_	0	erased	_	_
8	horoscopes	_	NNS	NNS	_	4	conj	_	_
9	and	_	CC	CC	_	4	cc	_	_
10	more	_	JJR	JJR	_	4	conj	_	_
11	with	_	IN	IN	_	3	prep	_	_
12	a	_	DT	DT	_	14	det	_	_
13	few	_	JJ	JJ	_	14	amod	_	_
14	clicks	_	NNS	NNS	_	11	pobj	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(get-3, you-1)
#aux(get-3, can-2)
#root(ROOT-0, get-3)
#dobj(get-3, weather-4)
#dobj(get-3, movies-6)
#conj_and(weather-4, movies-6)
#dobj(get-3, horoscopes-8)
#conj_and(weather-4, horoscopes-8)
#dobj(get-3, more-10)
#conj_and(weather-4, more-10)
#det(clicks-14, a-12)
#amod(clicks-14, few-13)
#prep_with(get-3, clicks-14)
result:
1	the	_	DT	DT	_	2	det	_	_
2	service	_	NN	NN	_	3	nsubj	_	_
3	deafults	_	VBZ	VBZ	_	0	root	_	_
4	to	_	TO	TO	_	3	prep	_	_
5	showing	_	VBG	VBG	_	4	pcomp	_	_
6	the	_	DT	DT	_	7	det	_	_
7	information	_	NN	NN	_	5	dobj	_	_
8	associated	_	VBN	VBN	_	7	vmod	_	_
9	with	_	IN	IN	_	8	prep	_	_
10	your	_	PRP$	PRP$	_	13	poss	_	_
11	billing	_	NN	NN	_	13	nn	_	_
12	zip	_	NN	NN	_	13	nn	_	_
13	code	_	NN	NN	_	9	pobj	_	_
14	,	_	,	,	_	0	erased	_	_
15	but	_	CC	CC	_	3	cc	_	_
16	you	_	PRP	PRP	_	18	nsubj	_	_
17	can	_	MD	MD	_	18	aux	_	_
18	change	_	VB	VB	_	3	conj	_	_
19	the	_	DT	DT	_	20	det	_	_
20	default	_	NN	NN	_	18	dobj	_	_
21	and	_	CC	CC	_	18	cc	_	_
22	seach	_	VB	VB	_	18	conj	_	_
23	other	_	JJ	JJ	_	24	amod	_	_
24	areas	_	NNS	NNS	_	22	dobj	_	_
25	while	_	IN	IN	_	28	mark	_	_
26	on	_	IN	IN	_	28	advmod	_	_
27	the	_	DT	DT	_	26	dep	_	_
28	go	_	VBP	VBP	_	22	advcl	_	_
29	.	_	.	.	_	0	erased	_	_
#det(service-2, the-1)
#nsubj(deafults-3, service-2)
#root(ROOT-0, deafults-3)
#prepc_to(deafults-3, showing-5)
#det(information-7, the-6)
#dobj(showing-5, information-7)
#vmod(information-7, associated-8)
#poss(code-13, your-10)
#nn(code-13, billing-11)
#nn(code-13, zip-12)
#prep_with(associated-8, code-13)
#nsubj(change-18, you-16)
#nsubj(seach-22, you-16)
#aux(change-18, can-17)
#conj_but(deafults-3, change-18)
#det(default-20, the-19)
#dobj(change-18, default-20)
#conj_but(deafults-3, seach-22)
#conj_and(change-18, seach-22)
#amod(areas-24, other-23)
#dobj(seach-22, areas-24)
#mark(go-28, while-25)
#advmod(go-28, on-26)
#dep(on-26, the-27)
#advcl(seach-22, go-28)
result:
1	one	_	CD	CD	_	2	num	_	_
2	downside	_	NN	NN	_	0	root	_	_
3	:	_	:	:	_	0	erased	_	_
4	as	_	IN	IN	_	12	prep	_	_
5	of	_	IN	IN	_	4	pcomp	_	_
6	this	_	DT	DT	_	7	det	_	_
7	writing	_	NN	NN	_	5	pobj	_	_
8	,	_	,	,	_	0	erased	_	_
9	t-mobile	_	NN	NN	_	12	nsubj	_	_
10	has	_	VBZ	VBZ	_	12	aux	_	_
11	n't	_	RB	RB	_	12	neg	_	_
12	updated	_	VBN	VBN	_	2	dep	_	_
13	their	_	PRP$	PRP$	_	15	poss	_	_
14	t-zone	_	JJ	JJ	_	15	amod	_	_
15	system	_	NN	NN	_	12	dobj	_	_
16	to	_	TO	TO	_	18	aux	_	_
17	fully	_	RB	RB	_	18	advmod	_	_
18	support	_	VB	VB	_	12	vmod	_	_
19	the	_	DT	DT	_	20	det	_	_
20	6610	_	NNS	NNS	_	18	dobj	_	_
21	.	_	.	.	_	0	erased	_	_
#num(downside-2, one-1)
#root(ROOT-0, downside-2)
#prepc_as_of(updated-12, of-5)
#det(writing-7, this-6)
#pobj(updated-12, writing-7)
#nsubj(updated-12, t-mobile-9)
#aux(updated-12, has-10)
#neg(updated-12, n't-11)
#dep(downside-2, updated-12)
#poss(system-15, their-13)
#amod(system-15, t-zone-14)
#dobj(updated-12, system-15)
#aux(support-18, to-16)
#advmod(support-18, fully-17)
#vmod(updated-12, support-18)
#det(6610-20, the-19)
#dobj(support-18, 6610-20)
result:
1	their	_	PRP$	PRP$	_	2	poss	_	_
2	website	_	NN	NN	_	5	nsubj	_	_
3	does	_	VBZ	VBZ	_	5	aux	_	_
4	not	_	RB	RB	_	5	neg	_	_
5	show	_	VB	VB	_	0	root	_	_
6	it	_	PRP	PRP	_	5	dobj	_	_
7	as	_	IN	IN	_	5	prep	_	_
8	a	_	DT	DT	_	10	det	_	_
9	compatible	_	JJ	JJ	_	10	amod	_	_
10	phone	_	NN	NN	_	7	pobj	_	_
11	,	_	,	,	_	0	erased	_	_
12	and	_	CC	CC	_	5	cc	_	_
13	should	_	MD	MD	_	15	aux	_	_
14	i	_	FW	FW	_	15	advmod	_	_
15	try	_	VB	VB	_	5	conj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	access	_	VB	VB	_	15	xcomp	_	_
18	the	_	DT	DT	_	20	det	_	_
19	game	_	NN	NN	_	20	nn	_	_
20	downloads	_	NNS	NNS	_	17	dobj	_	_
21	on	_	IN	IN	_	17	prep	_	_
22	t-zones	_	NNS	NNS	_	21	pobj	_	_
23	the	_	DT	DT	_	25	det	_	_
24	system	_	NN	NN	_	25	nn	_	_
25	returns	_	NNS	NNS	_	22	dep	_	_
26	an	_	DT	DT	_	28	det	_	_
27	error	_	NN	NN	_	28	nn	_	_
28	message	_	NN	NN	_	34	nsubjpass	_	_
29	saying	_	VBG	VBG	_	28	vmod	_	_
30	my	_	PRP$	PRP$	_	31	poss	_	_
31	phone	_	NN	NN	_	29	dobj	_	_
32	is	_	VBZ	VBZ	_	34	auxpass	_	_
33	not	_	RB	RB	_	34	neg	_	_
34	supported	_	VBN	VBN	_	17	dep	_	_
35	.	_	.	.	_	0	erased	_	_
#poss(website-2, their-1)
#nsubj(show-5, website-2)
#nsubj(try-15, website-2)
#nsubj(access-17, website-2)
#aux(show-5, does-3)
#neg(show-5, not-4)
#root(ROOT-0, show-5)
#dobj(show-5, it-6)
#det(phone-10, a-8)
#amod(phone-10, compatible-9)
#prep_as(show-5, phone-10)
#aux(try-15, should-13)
#advmod(try-15, i-14)
#conj_and(show-5, try-15)
#aux(access-17, to-16)
#xcomp(try-15, access-17)
#det(downloads-20, the-18)
#nn(downloads-20, game-19)
#dobj(access-17, downloads-20)
#prep_on(access-17, t-zones-22)
#det(returns-25, the-23)
#nn(returns-25, system-24)
#dep(t-zones-22, returns-25)
#det(message-28, an-26)
#nn(message-28, error-27)
#nsubjpass(supported-34, message-28)
#vmod(message-28, saying-29)
#poss(phone-31, my-30)
#dobj(saying-29, phone-31)
#auxpass(supported-34, is-32)
#neg(supported-34, not-33)
#dep(access-17, supported-34)
result:
1	i	_	FW	FW	_	4	nsubjpass	_	_
2	have	_	VBD	VBD	_	4	aux	_	_
3	been	_	VBN	VBN	_	4	auxpass	_	_
4	assured	_	VBN	VBN	_	0	root	_	_
5	this	_	DT	DT	_	8	nsubjpass	_	_
6	will	_	MD	MD	_	8	aux	_	_
7	be	_	VB	VB	_	8	auxpass	_	_
8	fixed	_	VBN	VBN	_	4	ccomp	_	_
9	soon	_	RB	RB	_	8	advmod	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubjpass(assured-4, i-1)
#aux(assured-4, have-2)
#auxpass(assured-4, been-3)
#root(ROOT-0, assured-4)
#nsubjpass(fixed-8, this-5)
#aux(fixed-8, will-6)
#auxpass(fixed-8, be-7)
#ccomp(assured-4, fixed-8)
#advmod(fixed-8, soon-9)
result:
1	now	_	RB	RB	_	0	root	_	_
2	,	_	,	,	_	0	erased	_	_
3	for	_	IN	IN	_	1	dep	_	_
4	the	_	DT	DT	_	6	det	_	_
5	t-mobile	_	JJ	JJ	_	6	amod	_	_
6	service	_	NN	NN	_	3	pobj	_	_
7	:	_	:	:	_	0	erased	_	_
8	i	_	FW	FW	_	11	nsubj	_	_
9	can	_	MD	MD	_	11	aux	_	_
10	not	_	RB	RB	_	11	neg	_	_
11	say	_	VB	VB	_	1	dep	_	_
12	enough	_	RB	RB	_	13	advmod	_	_
13	good	_	JJ	JJ	_	14	amod	_	_
14	things	_	NNS	NNS	_	11	dobj	_	_
15	about	_	IN	IN	_	14	prep	_	_
16	the	_	DT	DT	_	17	det	_	_
17	people	_	NNS	NNS	_	15	pobj	_	_
18	who	_	WP	WP	_	19	nsubj	_	_
19	answer	_	VB	VB	_	17	rcmod	_	_
20	the	_	DT	DT	_	21	det	_	_
21	phones	_	NNS	NNS	_	19	dobj	_	_
22	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, now-1)
#dep(now-1, for-3)
#det(service-6, the-4)
#amod(service-6, t-mobile-5)
#pobj(for-3, service-6)
#nsubj(say-11, i-8)
#aux(say-11, can-9)
#neg(say-11, not-10)
#dep(now-1, say-11)
#advmod(good-13, enough-12)
#amod(things-14, good-13)
#dobj(say-11, things-14)
#det(people-17, the-16)
#prep_about(things-14, people-17)
#nsubj(answer-19, people-17)
#rcmod(people-17, answer-19)
#det(phones-21, the-20)
#dobj(answer-19, phones-21)
result:
1	if	_	IN	IN	_	3	mark	_	_
2	you	_	PRP	PRP	_	3	nsubj	_	_
3	have	_	VBP	VBP	_	8	advcl	_	_
4	a	_	DT	DT	_	5	det	_	_
5	question	_	NN	NN	_	3	dobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	they	_	PRP	PRP	_	8	nsubj	_	_
8	have	_	VBP	VBP	_	0	root	_	_
9	the	_	DT	DT	_	10	det	_	_
10	answer	_	NN	NN	_	8	dobj	_	_
11	.	_	.	.	_	0	erased	_	_
#mark(have-3, if-1)
#nsubj(have-3, you-2)
#advcl(have-8, have-3)
#det(question-5, a-4)
#dobj(have-3, question-5)
#nsubj(have-8, they-7)
#root(ROOT-0, have-8)
#det(answer-10, the-9)
#dobj(have-8, answer-10)
result:
1	and	_	CC	CC	_	5	cc	_	_
2	should	_	MD	MD	_	5	aux	_	_
3	they	_	PRP	PRP	_	5	nsubj	_	_
4	not	_	RB	RB	_	5	advmod	_	_
5	know	_	VB	VB	_	0	root	_	_
6	it	_	PRP	PRP	_	5	dobj	_	_
7	,	_	,	,	_	0	erased	_	_
8	they	_	PRP	PRP	_	10	nsubj	_	_
9	can	_	MD	MD	_	10	aux	_	_
10	find	_	VB	VB	_	5	dep	_	_
11	it	_	PRP	PRP	_	10	dobj	_	_
12	out	_	RP	RP	_	10	prt	_	_
13	pretty	_	RB	RB	_	14	advmod	_	_
14	quick	_	JJ	JJ	_	10	advmod	_	_
15	.	_	.	.	_	0	erased	_	_
#cc(know-5, and-1)
#aux(know-5, should-2)
#nsubj(know-5, they-3)
#advmod(know-5, not-4)
#root(ROOT-0, know-5)
#dobj(know-5, it-6)
#nsubj(find-10, they-8)
#aux(find-10, can-9)
#dep(know-5, find-10)
#dobj(find-10, it-11)
#prt(find-10, out-12)
#advmod(quick-14, pretty-13)
#advmod(find-10, quick-14)
result:
1	every	_	DT	DT	_	3	det	_	_
2	phone	_	NN	NN	_	3	nn	_	_
3	experience	_	NN	NN	_	5	nsubj	_	_
4	has	_	VBZ	VBZ	_	5	aux	_	_
5	started	_	VBN	VBN	_	0	root	_	_
6	with	_	IN	IN	_	5	prep	_	_
7	a	_	DT	DT	_	10	det	_	_
8	very	_	RB	RB	_	9	advmod	_	_
9	brief	_	JJ	JJ	_	10	amod	_	_
10	time	_	NN	NN	_	6	pobj	_	_
11	on	_	IN	IN	_	5	prep	_	_
12	hold	_	NN	NN	_	11	pobj	_	_
13	followed	_	VBN	VBN	_	12	vmod	_	_
14	by	_	IN	IN	_	13	prep	_	_
15	a	_	DT	DT	_	17	det	_	_
16	cheerful	_	JJ	JJ	_	17	amod	_	_
17	representative	_	NN	NN	_	14	pobj	_	_
18	answering	_	VBG	VBG	_	5	xcomp	_	_
19	the	_	DT	DT	_	20	det	_	_
20	phone	_	NN	NN	_	18	dobj	_	_
21	.	_	.	.	_	0	erased	_	_
#det(experience-3, every-1)
#nn(experience-3, phone-2)
#nsubj(started-5, experience-3)
#aux(started-5, has-4)
#root(ROOT-0, started-5)
#det(time-10, a-7)
#advmod(brief-9, very-8)
#amod(time-10, brief-9)
#prep_with(started-5, time-10)
#prep_on(started-5, hold-12)
#vmod(hold-12, followed-13)
#det(representative-17, a-15)
#amod(representative-17, cheerful-16)
#agent(followed-13, representative-17)
#xcomp(started-5, answering-18)
#det(phone-20, the-19)
#dobj(answering-18, phone-20)
result:
1	all	_	PDT	PDT	_	3	dep	_	_
2	my	_	PRP$	PRP$	_	3	poss	_	_
3	questions	_	NNS	NNS	_	11	nsubjpass	_	_
4	or	_	CC	CC	_	3	cc	_	_
5	problems	_	NNS	NNS	_	3	conj	_	_
6	have	_	VBP	VBP	_	11	aux	_	_
7	been	_	VBN	VBN	_	11	auxpass	_	_
8	quickly	_	RB	RB	_	11	advmod	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	satisfactorily	_	RB	RB	_	8	conj	_	_
11	resolved	_	VBN	VBN	_	0	root	_	_
12	.	_	.	.	_	0	erased	_	_
#dep(questions-3, all-1)
#poss(questions-3, my-2)
#nsubjpass(resolved-11, questions-3)
#conj_or(questions-3, problems-5)
#nsubjpass(resolved-11, problems-5)
#aux(resolved-11, have-6)
#auxpass(resolved-11, been-7)
#advmod(resolved-11, quickly-8)
#conj_and(quickly-8, satisfactorily-10)
#advmod(resolved-11, satisfactorily-10)
#root(ROOT-0, resolved-11)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	'd	_	MD	MD	_	3	aux	_	_
3	like	_	VB	VB	_	0	root	_	_
4	to	_	TO	TO	_	5	aux	_	_
5	see	_	VB	VB	_	3	xcomp	_	_
6	my	_	PRP$	PRP$	_	8	poss	_	_
7	old	_	JJ	JJ	_	8	amod	_	_
8	carrier	_	NN	NN	_	5	dobj	_	_
9	do	_	VB	VB	_	5	dep	_	_
10	that	_	DT	DT	_	9	dobj	_	_
11	!	_	.	.	_	0	erased	_	_
#nsubj(like-3, i-1)
#nsubj(see-5, i-1)
#aux(like-3, 'd-2)
#root(ROOT-0, like-3)
#aux(see-5, to-4)
#xcomp(like-3, see-5)
#poss(carrier-8, my-6)
#amod(carrier-8, old-7)
#dobj(see-5, carrier-8)
#dep(see-5, do-9)
#dobj(do-9, that-10)
result:
1	the	_	DT	DT	_	3	det	_	_
2	rate	_	NN	NN	_	3	nn	_	_
3	plans	_	NNS	NNS	_	7	nsubj	_	_
4	are	_	VBP	VBP	_	7	cop	_	_
5	also	_	RB	RB	_	7	advmod	_	_
6	very	_	RB	RB	_	7	advmod	_	_
7	good	_	JJ	JJ	_	0	root	_	_
8	,	_	,	,	_	0	erased	_	_
9	at	_	IN	IN	_	7	advmod	_	_
10	least	_	JJS	JJS	_	9	pobj	_	_
11	for	_	IN	IN	_	9	prep	_	_
12	me	_	PRP	PRP	_	11	pobj	_	_
13	.	_	.	.	_	0	erased	_	_
#det(plans-3, the-1)
#nn(plans-3, rate-2)
#nsubj(good-7, plans-3)
#cop(good-7, are-4)
#advmod(good-7, also-5)
#advmod(good-7, very-6)
#root(ROOT-0, good-7)
#advmod(good-7, at-9)
#pobj(at-9, least-10)
#prep_for(at-9, me-12)
result:
1	different	_	JJ	JJ	_	2	amod	_	_
2	people	_	NNS	NNS	_	3	nsubj	_	_
3	have	_	VBP	VBP	_	0	root	_	_
4	different	_	JJ	JJ	_	5	amod	_	_
5	needs	_	NNS	NNS	_	3	dobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	of	_	IN	IN	_	5	prep	_	_
8	course	_	NN	NN	_	7	pobj	_	_
9	,	_	,	,	_	0	erased	_	_
10	but	_	CC	CC	_	3	cc	_	_
11	the	_	DT	DT	_	13	det	_	_
12	t-mobile	_	JJ	JJ	_	13	amod	_	_
13	plans	_	NNS	NNS	_	15	nsubjpass	_	_
14	are	_	VBP	VBP	_	15	auxpass	_	_
15	priced	_	VBN	VBN	_	3	conj	_	_
16	very	_	RB	RB	_	17	advmod	_	_
17	well	_	RB	RB	_	18	advmod	_	_
18	for	_	IN	IN	_	15	prep	_	_
19	the	_	DT	DT	_	20	det	_	_
20	minutes	_	NNS	NNS	_	18	pobj	_	_
21	and	_	CC	CC	_	20	cc	_	_
22	services	_	NNS	NNS	_	20	conj	_	_
23	you	_	PRP	PRP	_	24	nsubj	_	_
24	receive	_	VBP	VBP	_	15	ccomp	_	_
25	.	_	.	.	_	0	erased	_	_
#amod(people-2, different-1)
#nsubj(have-3, people-2)
#root(ROOT-0, have-3)
#amod(needs-5, different-4)
#dobj(have-3, needs-5)
#prep_of(needs-5, course-8)
#det(plans-13, the-11)
#amod(plans-13, t-mobile-12)
#nsubjpass(priced-15, plans-13)
#auxpass(priced-15, are-14)
#conj_but(have-3, priced-15)
#advmod(well-17, very-16)
#advmod(priced-15, well-17)
#det(minutes-20, the-19)
#prep_for(priced-15, minutes-20)
#prep_for(priced-15, services-22)
#conj_and(minutes-20, services-22)
#nsubj(receive-24, you-23)
#ccomp(priced-15, receive-24)
result:
1	the	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	5	nsubj	_	_
3	would	_	MD	MD	_	5	aux	_	_
4	have	_	VB	VB	_	5	aux	_	_
5	received	_	VBN	VBN	_	0	root	_	_
6	5	_	CD	CD	_	7	num	_	_
7	stars	_	NNS	NNS	_	5	dobj	_	_
8	if	_	IN	IN	_	20	mark	_	_
9	the	_	DT	DT	_	10	det	_	_
10	phone	_	NN	NN	_	20	nsubj	_	_
11	had	_	VBD	VBD	_	20	aux	_	_
12	voice	_	NN	NN	_	20	dobj	_	_
13	dialing	_	VBG	VBG	_	20	prep	_	_
14	and	_	CC	CC	_	17	cc	_	_
15	the	_	DT	DT	_	17	det	_	_
16	game	_	NN	NN	_	17	nn	_	_
17	downloads	_	NNS	NNS	_	13	pobj	_	_
18	from	_	IN	IN	_	17	prep	_	_
19	t-zones	_	NNS	NNS	_	18	pobj	_	_
20	worked	_	VBN	VBN	_	5	advcl	_	_
21	.	_	.	.	_	0	erased	_	_
#det(phone-2, the-1)
#nsubj(received-5, phone-2)
#aux(received-5, would-3)
#aux(received-5, have-4)
#root(ROOT-0, received-5)
#num(stars-7, 5-6)
#dobj(received-5, stars-7)
#mark(worked-20, if-8)
#det(phone-10, the-9)
#nsubj(worked-20, phone-10)
#aux(worked-20, had-11)
#dobj(worked-20, voice-12)
#cc(downloads-17, and-14)
#det(downloads-17, the-15)
#nn(downloads-17, game-16)
#prep_dialing(worked-20, downloads-17)
#prep_from(downloads-17, t-zones-19)
#advcl(received-5, worked-20)
result:
1	this	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	5	nsubjpass	_	_
3	is	_	VBZ	VBZ	_	5	auxpass	_	_
4	highly	_	RB	RB	_	5	advmod	_	_
5	recommended	_	VBN	VBN	_	0	root	_	_
6	otherwise	_	RB	RB	_	5	advmod	_	_
7	.	_	.	.	_	0	erased	_	_
#det(phone-2, this-1)
#nsubjpass(recommended-5, phone-2)
#auxpass(recommended-5, is-3)
#advmod(recommended-5, highly-4)
#root(ROOT-0, recommended-5)
#advmod(recommended-5, otherwise-6)
result:
1	nokia	_	NN	NN	_	2	nsubj	_	_
2	makes	_	VBZ	VBZ	_	0	root	_	_
3	a	_	DT	DT	_	5	det	_	_
4	great	_	JJ	JJ	_	5	amod	_	_
5	phone	_	NN	NN	_	2	dobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	that	_	IN	IN	_	9	nsubj	_	_
8	's	_	VBZ	VBZ	_	9	cop	_	_
9	clear	_	JJ	JJ	_	5	rcmod	_	_
10	.	_	.	.	_	0	erased	_	_
#nsubj(makes-2, nokia-1)
#root(ROOT-0, makes-2)
#det(phone-5, a-3)
#amod(phone-5, great-4)
#dobj(makes-2, phone-5)
#nsubj(clear-9, phone-5)
#cop(clear-9, 's-8)
#rcmod(phone-5, clear-9)
result:
1	with	_	IN	IN	_	11	prep	_	_
2	all	_	DT	DT	_	5	predet	_	_
3	its	_	PRP$	PRP$	_	5	poss	_	_
4	complicated	_	JJ	JJ	_	5	amod	_	_
5	features	_	NNS	NNS	_	1	pobj	_	_
6	,	_	,	,	_	0	erased	_	_
7	the	_	DT	DT	_	8	det	_	_
8	menus	_	NNS	NNS	_	11	nsubj	_	_
9	are	_	VBP	VBP	_	11	cop	_	_
10	easily	_	RB	RB	_	11	advmod	_	_
11	accessible	_	JJ	JJ	_	0	root	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	the	_	DT	DT	_	14	det	_	_
14	quality	_	NN	NN	_	19	nsubj	_	_
15	of	_	IN	IN	_	14	prep	_	_
16	the	_	DT	DT	_	17	det	_	_
17	features	_	NNS	NNS	_	15	pobj	_	_
18	is	_	VBZ	VBZ	_	19	cop	_	_
19	great	_	JJ	JJ	_	11	conj	_	_
20	.	_	.	.	_	0	erased	_	_
#predet(features-5, all-2)
#poss(features-5, its-3)
#amod(features-5, complicated-4)
#prep_with(accessible-11, features-5)
#det(menus-8, the-7)
#nsubj(accessible-11, menus-8)
#cop(accessible-11, are-9)
#advmod(accessible-11, easily-10)
#root(ROOT-0, accessible-11)
#det(quality-14, the-13)
#nsubj(great-19, quality-14)
#det(features-17, the-16)
#prep_of(quality-14, features-17)
#cop(great-19, is-18)
#conj_and(accessible-11, great-19)
result:
1	the	_	DT	DT	_	4	det	_	_
2	one	_	CD	CD	_	4	num	_	_
3	huge	_	JJ	JJ	_	4	amod	_	_
4	disappointment	_	NN	NN	_	5	nsubj	_	_
5	is	_	VBZ	VBZ	_	0	root	_	_
6	that	_	IN	IN	_	9	mark	_	_
7	the	_	DT	DT	_	8	det	_	_
8	phones	_	NNS	NNS	_	9	nsubj	_	_
9	manufactured	_	VBD	VBD	_	5	ccomp	_	_
10	for	_	IN	IN	_	9	prep	_	_
11	t-mobile	_	JJ	JJ	_	12	amod	_	_
12	lack	_	NN	NN	_	10	pobj	_	_
13	many	_	JJ	JJ	_	14	dep	_	_
14	of	_	IN	IN	_	12	prep	_	_
15	the	_	DT	DT	_	16	det	_	_
16	menus	_	NNS	NNS	_	14	pobj	_	_
17	and	_	CC	CC	_	16	cc	_	_
18	functions	_	NNS	NNS	_	16	conj	_	_
19	that	_	IN	IN	_	27	mark	_	_
20	a	_	DT	DT	_	21	det	_	_
21	nokia	_	NN	NN	_	27	nsubj	_	_
22	straight	_	RB	RB	_	23	advmod	_	_
23	from	_	IN	IN	_	21	rcmod	_	_
24	the	_	DT	DT	_	25	det	_	_
25	manufacturer	_	NN	NN	_	23	pobj	_	_
26	should	_	MD	MD	_	27	aux	_	_
27	have	_	VB	VB	_	9	ccomp	_	_
28	.	_	.	.	_	0	erased	_	_
#det(disappointment-4, the-1)
#num(disappointment-4, one-2)
#amod(disappointment-4, huge-3)
#nsubj(is-5, disappointment-4)
#root(ROOT-0, is-5)
#mark(manufactured-9, that-6)
#det(phones-8, the-7)
#nsubj(manufactured-9, phones-8)
#ccomp(is-5, manufactured-9)
#amod(lack-12, t-mobile-11)
#prep_for(manufactured-9, lack-12)
#dep(lack-12, many-13)
#det(menus-16, the-15)
#prep_of(lack-12, menus-16)
#prep_of(lack-12, functions-18)
#conj_and(menus-16, functions-18)
#mark(have-27, that-19)
#det(nokia-21, a-20)
#nsubj(have-27, nokia-21)
#advmod(from-23, straight-22)
#rcmod(nokia-21, from-23)
#det(manufacturer-25, the-24)
#pobj(from-23, manufacturer-25)
#aux(have-27, should-26)
#ccomp(manufactured-9, have-27)
result:
1	one	_	CD	CD	_	6	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	5	det	_	_
4	things	_	NNS	NNS	_	5	nn	_	_
5	t-mobile	_	NN	NN	_	2	pobj	_	_
6	brags	_	VBZ	VBZ	_	0	root	_	_
7	about	_	RB	RB	_	6	advmod	_	_
8	is	_	VBZ	VBZ	_	10	cop	_	_
9	the	_	DT	DT	_	10	det	_	_
10	fact	_	NN	NN	_	6	dep	_	_
11	that	_	IN	IN	_	14	mark	_	_
12	it	_	PRP	PRP	_	14	nsubj	_	_
13	's	_	VBZ	VBZ	_	14	cop	_	_
14	a	_	DT	DT	_	10	dep	_	_
15	''	_	''	''	_	0	erased	_	_
16	worldphone	_	JJ	JJ	_	14	dep	_	_
17	''	_	''	''	_	0	erased	_	_
18	and	_	CC	CC	_	6	cc	_	_
19	can	_	MD	MD	_	21	aux	_	_
20	be	_	VB	VB	_	21	auxpass	_	_
21	used	_	VBN	VBN	_	6	conj	_	_
22	in	_	IN	IN	_	21	prep	_	_
23	europe	_	NN	NN	_	22	pobj	_	_
24	,	_	,	,	_	0	erased	_	_
25	etc.	_	FW	FW	_	23	appos	_	_
26	.	_	.	.	_	0	erased	_	_
#nsubj(brags-6, one-1)
#nsubjpass(used-21, one-1)
#det(t-mobile-5, the-3)
#nn(t-mobile-5, things-4)
#prep_of(one-1, t-mobile-5)
#root(ROOT-0, brags-6)
#advmod(brags-6, about-7)
#cop(fact-10, is-8)
#det(fact-10, the-9)
#dep(brags-6, fact-10)
#mark(a-14, that-11)
#nsubj(a-14, it-12)
#cop(a-14, 's-13)
#dep(fact-10, a-14)
#dep(a-14, worldphone-16)
#aux(used-21, can-19)
#auxpass(used-21, be-20)
#conj_and(brags-6, used-21)
#prep_in(used-21, europe-23)
#appos(europe-23, etc.-25)
result:
1	yet	_	RB	RB	_	4	advmod	_	_
2	they	_	PRP	PRP	_	4	nsubj	_	_
3	've	_	VBP	VBP	_	4	aux	_	_
4	gotten	_	VBN	VBN	_	0	root	_	_
5	rid	_	JJ	JJ	_	4	dobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	most	_	JJS	JJS	_	6	pobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	languages	_	NNS	NNS	_	8	pobj	_	_
11	that	_	WDT	WDT	_	13	nsubj	_	_
12	should	_	MD	MD	_	13	aux	_	_
13	be	_	VB	VB	_	10	rcmod	_	_
14	in	_	IN	IN	_	13	prep	_	_
15	the	_	DT	DT	_	16	det	_	_
16	phone	_	NN	NN	_	14	pobj	_	_
17	,	_	,	,	_	0	erased	_	_
18	including	_	VBG	VBG	_	10	vmod	_	_
19	italian	_	JJ	JJ	_	18	dobj	_	_
20	,	_	,	,	_	0	erased	_	_
21	german	_	JJ	JJ	_	19	amod	_	_
22	,	_	,	,	_	0	erased	_	_
23	and	_	CC	CC	_	19	cc	_	_
24	dutch	_	NN	NN	_	19	conj	_	_
25	.	_	.	.	_	0	erased	_	_
#advmod(gotten-4, yet-1)
#nsubj(gotten-4, they-2)
#aux(gotten-4, 've-3)
#root(ROOT-0, gotten-4)
#dobj(gotten-4, rid-5)
#prep_of(rid-5, most-7)
#det(languages-10, the-9)
#prep_of(most-7, languages-10)
#nsubj(be-13, languages-10)
#aux(be-13, should-12)
#rcmod(languages-10, be-13)
#det(phone-16, the-15)
#prep_in(be-13, phone-16)
#vmod(languages-10, including-18)
#dobj(including-18, italian-19)
#dobj(including-18, german-21)
#amod(italian-19, german-21)
#conj_and(italian-19, german-21)
#dobj(including-18, dutch-24)
#conj_and(italian-19, dutch-24)
result:
1	the	_	DT	DT	_	3	det	_	_
2	internet	_	NN	NN	_	3	nn	_	_
3	functions	_	NNS	NNS	_	14	nsubj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	6	det	_	_
6	phone	_	NN	NN	_	4	pobj	_	_
7	-	_	:	:	_	0	erased	_	_
8	wap	_	NN	NN	_	3	dep	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	gprs	_	NNS	NNS	_	8	conj	_	_
11	-	_	:	:	_	0	erased	_	_
12	will	_	MD	MD	_	14	aux	_	_
13	only	_	RB	RB	_	14	advmod	_	_
14	work	_	VB	VB	_	0	root	_	_
15	through	_	IN	IN	_	14	prep	_	_
16	t-mobile	_	NN	NN	_	18	poss	_	_
17	's	_	POS	POS	_	16	possessive	_	_
18	services	_	NNS	NNS	_	15	pobj	_	_
19	,	_	,	,	_	0	erased	_	_
20	because	_	IN	IN	_	23	mark	_	_
21	they	_	PRP	PRP	_	23	nsubj	_	_
22	have	_	VBP	VBP	_	23	aux	_	_
23	deleted	_	VBN	VBN	_	14	advcl	_	_
24	the	_	DT	DT	_	26	det	_	_
25	menu	_	NN	NN	_	26	nn	_	_
26	options	_	NNS	NNS	_	23	dobj	_	_
27	that	_	WDT	WDT	_	29	nsubj	_	_
28	would	_	MD	MD	_	29	aux	_	_
29	enable	_	VB	VB	_	26	rcmod	_	_
30	you	_	PRP	PRP	_	29	dobj	_	_
31	to	_	TO	TO	_	32	aux	_	_
32	configure	_	VB	VB	_	29	xcomp	_	_
33	the	_	DT	DT	_	34	det	_	_
34	phone	_	NN	NN	_	32	dobj	_	_
35	to	_	TO	TO	_	37	aux	_	_
36	be	_	VB	VB	_	37	auxpass	_	_
37	used	_	VBN	VBN	_	32	vmod	_	_
38	on	_	IN	IN	_	37	prep	_	_
39	a	_	DT	DT	_	41	det	_	_
40	different	_	JJ	JJ	_	41	amod	_	_
41	network	_	NN	NN	_	38	pobj	_	_
42	.	_	.	.	_	0	erased	_	_
#det(functions-3, the-1)
#nn(functions-3, internet-2)
#nsubj(work-14, functions-3)
#det(phone-6, the-5)
#prep_of(functions-3, phone-6)
#dep(functions-3, wap-8)
#dep(functions-3, gprs-10)
#conj_and(wap-8, gprs-10)
#aux(work-14, will-12)
#advmod(work-14, only-13)
#root(ROOT-0, work-14)
#poss(services-18, t-mobile-16)
#prep_through(work-14, services-18)
#mark(deleted-23, because-20)
#nsubj(deleted-23, they-21)
#aux(deleted-23, have-22)
#advcl(work-14, deleted-23)
#det(options-26, the-24)
#nn(options-26, menu-25)
#dobj(deleted-23, options-26)
#nsubj(enable-29, options-26)
#aux(enable-29, would-28)
#rcmod(options-26, enable-29)
#dobj(enable-29, you-30)
#nsubj(configure-32, you-30)
#aux(configure-32, to-31)
#xcomp(enable-29, configure-32)
#det(phone-34, the-33)
#dobj(configure-32, phone-34)
#aux(used-37, to-35)
#auxpass(used-37, be-36)
#vmod(configure-32, used-37)
#det(network-41, a-39)
#amod(network-41, different-40)
#prep_on(used-37, network-41)
result:
1	therefore	_	RB	RB	_	25	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	if	_	IN	IN	_	5	mark	_	_
4	you	_	PRP	PRP	_	5	nsubj	_	_
5	wanted	_	VBD	VBD	_	25	advcl	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	travel	_	VB	VB	_	5	xcomp	_	_
8	abroad	_	RB	RB	_	7	advmod	_	_
9	and	_	CC	CC	_	7	cc	_	_
10	pop	_	VB	VB	_	7	conj	_	_
11	in	_	IN	IN	_	10	prep	_	_
12	a	_	DT	DT	_	15	det	_	_
13	local	_	JJ	JJ	_	15	amod	_	_
14	sim	_	NN	NN	_	15	nn	_	_
15	card	_	NN	NN	_	11	pobj	_	_
16	,	_	,	,	_	0	erased	_	_
17	even	_	RB	RB	_	20	advmod	_	_
18	if	_	IN	IN	_	20	mark	_	_
19	you	_	PRP	PRP	_	20	nsubj	_	_
20	unlock	_	VBP	VBP	_	10	advcl	_	_
21	the	_	DT	DT	_	22	det	_	_
22	phone	_	NN	NN	_	20	dobj	_	_
23	,	_	,	,	_	0	erased	_	_
24	there	_	EX	EX	_	25	expl	_	_
25	is	_	VBZ	VBZ	_	0	root	_	_
26	no	_	DT	DT	_	27	neg	_	_
27	way	_	NN	NN	_	25	nsubj	_	_
28	you	_	PRP	PRP	_	30	nsubj	_	_
29	can	_	MD	MD	_	30	aux	_	_
30	use	_	VB	VB	_	27	rcmod	_	_
31	the	_	DT	DT	_	33	det	_	_
32	local	_	JJ	JJ	_	33	amod	_	_
33	wap	_	NN	NN	_	30	iobj	_	_
34	browser	_	NN	NN	_	30	dobj	_	_
35	or	_	CC	CC	_	34	cc	_	_
36	internet	_	NN	NN	_	34	conj	_	_
37	.	_	.	.	_	0	erased	_	_
#advmod(is-25, therefore-1)
#mark(wanted-5, if-3)
#nsubj(wanted-5, you-4)
#nsubj(travel-7, you-4)
#nsubj(pop-10, you-4)
#advcl(is-25, wanted-5)
#aux(travel-7, to-6)
#xcomp(wanted-5, travel-7)
#advmod(travel-7, abroad-8)
#xcomp(wanted-5, pop-10)
#conj_and(travel-7, pop-10)
#det(card-15, a-12)
#amod(card-15, local-13)
#nn(card-15, sim-14)
#prep_in(pop-10, card-15)
#advmod(unlock-20, even-17)
#mark(unlock-20, if-18)
#nsubj(unlock-20, you-19)
#advcl(pop-10, unlock-20)
#det(phone-22, the-21)
#dobj(unlock-20, phone-22)
#expl(is-25, there-24)
#root(ROOT-0, is-25)
#neg(way-27, no-26)
#nsubj(is-25, way-27)
#nsubj(use-30, you-28)
#aux(use-30, can-29)
#rcmod(way-27, use-30)
#det(wap-33, the-31)
#amod(wap-33, local-32)
#iobj(use-30, wap-33)
#dobj(use-30, browser-34)
#dobj(use-30, internet-36)
#conj_or(browser-34, internet-36)
result:
1	after	_	IN	IN	_	16	prep	_	_
2	spending	_	VBG	VBG	_	1	pcomp	_	_
3	hours	_	NNS	NNS	_	2	dobj	_	_
4	being	_	VBG	VBG	_	5	auxpass	_	_
5	transferred	_	VBN	VBN	_	2	vmod	_	_
6	from	_	IN	IN	_	5	prep	_	_
7	one	_	CD	CD	_	8	num	_	_
8	tech	_	NN	NN	_	6	pobj	_	_
9	help	_	VB	VB	_	5	ccomp	_	_
10	person	_	NN	NN	_	9	dobj	_	_
11	to	_	TO	TO	_	9	prep	_	_
12	another	_	DT	DT	_	11	pobj	_	_
13	,	_	,	,	_	0	erased	_	_
14	i	_	FW	FW	_	16	nsubjpass	_	_
15	got	_	VBD	VBD	_	16	auxpass	_	_
16	fed	_	VBN	VBN	_	0	root	_	_
17	up	_	RP	RP	_	16	prt	_	_
18	and	_	CC	CC	_	16	cc	_	_
19	have	_	VBP	VBP	_	20	aux	_	_
20	decided	_	VBN	VBN	_	16	conj	_	_
21	to	_	TO	TO	_	22	aux	_	_
22	return	_	VB	VB	_	20	xcomp	_	_
23	the	_	DT	DT	_	24	det	_	_
24	phone	_	NN	NN	_	22	dobj	_	_
25	.	_	.	.	_	0	erased	_	_
#prepc_after(fed-16, spending-2)
#dobj(spending-2, hours-3)
#auxpass(transferred-5, being-4)
#vmod(spending-2, transferred-5)
#num(tech-8, one-7)
#prep_from(transferred-5, tech-8)
#ccomp(transferred-5, help-9)
#dobj(help-9, person-10)
#prep_to(help-9, another-12)
#nsubjpass(fed-16, i-14)
#nsubjpass(decided-20, i-14)
#nsubj(return-22, i-14)
#auxpass(fed-16, got-15)
#root(ROOT-0, fed-16)
#prt(fed-16, up-17)
#aux(decided-20, have-19)
#conj_and(fed-16, decided-20)
#aux(return-22, to-21)
#xcomp(decided-20, return-22)
#det(phone-24, the-23)
#dobj(return-22, phone-24)
result:
1	bottom	_	JJ	JJ	_	2	amod	_	_
2	line	_	NN	NN	_	19	nsubj	_	_
3	,	_	,	,	_	0	erased	_	_
4	if	_	IN	IN	_	7	mark	_	_
5	you	_	PRP	PRP	_	7	nsubjpass	_	_
6	're	_	VBP	VBP	_	7	auxpass	_	_
7	attracted	_	VBN	VBN	_	19	advcl	_	_
8	to	_	TO	TO	_	7	prep	_	_
9	this	_	DT	DT	_	10	det	_	_
10	phone	_	NN	NN	_	8	pobj	_	_
11	because	_	IN	IN	_	12	mwe	_	_
12	of	_	IN	IN	_	7	prep	_	_
13	its	_	PRP$	PRP$	_	15	poss	_	_
14	tri-band	_	JJ	JJ	_	15	amod	_	_
15	feature	_	NN	NN	_	12	pobj	_	_
16	so	_	RB	RB	_	19	advmod	_	_
17	you	_	PRP	PRP	_	19	nsubj	_	_
18	can	_	MD	MD	_	19	aux	_	_
19	take	_	VB	VB	_	0	root	_	_
20	it	_	PRP	PRP	_	19	dobj	_	_
21	abroad	_	RB	RB	_	19	advmod	_	_
22	,	_	,	,	_	0	erased	_	_
23	forget	_	VB	VB	_	19	dep	_	_
24	it	_	PRP	PRP	_	23	dobj	_	_
25	.	_	.	.	_	0	erased	_	_
#amod(line-2, bottom-1)
#nsubj(take-19, line-2)
#mark(attracted-7, if-4)
#nsubjpass(attracted-7, you-5)
#auxpass(attracted-7, 're-6)
#advcl(take-19, attracted-7)
#det(phone-10, this-9)
#prep_to(attracted-7, phone-10)
#poss(feature-15, its-13)
#amod(feature-15, tri-band-14)
#prep_because_of(attracted-7, feature-15)
#advmod(take-19, so-16)
#nsubj(take-19, you-17)
#aux(take-19, can-18)
#root(ROOT-0, take-19)
#dobj(take-19, it-20)
#advmod(take-19, abroad-21)
#dep(take-19, forget-23)
#dobj(forget-23, it-24)
result:
1	find	_	VB	VB	_	0	root	_	_
2	another	_	DT	DT	_	3	det	_	_
3	phone	_	NN	NN	_	1	dobj	_	_
4	,	_	,	,	_	0	erased	_	_
5	or	_	CC	CC	_	1	cc	_	_
6	buy	_	VB	VB	_	1	conj	_	_
7	this	_	DT	DT	_	8	det	_	_
8	one	_	NN	NN	_	6	dobj	_	_
9	in	_	IN	IN	_	6	prep	_	_
10	its	_	PRP$	PRP$	_	12	poss	_	_
11	manufacturer-unlocked	_	JJ	JJ	_	12	amod	_	_
12	form	_	NN	NN	_	9	pobj	_	_
13	.	_	.	.	_	0	erased	_	_
#root(ROOT-0, find-1)
#det(phone-3, another-2)
#dobj(find-1, phone-3)
#conj_or(find-1, buy-6)
#det(one-8, this-7)
#dobj(buy-6, one-8)
#poss(form-12, its-10)
#amod(form-12, manufacturer-unlocked-11)
#prep_in(buy-6, form-12)
result:
1	this	_	DT	DT	_	2	det	_	_
2	phone	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	good	_	JJ	JJ	_	0	root	_	_
5	with	_	IN	IN	_	4	prep	_	_
6	a	_	DT	DT	_	8	det	_	_
7	huge	_	JJ	JJ	_	8	amod	_	_
8	array	_	NN	NN	_	5	pobj	_	_
9	of	_	IN	IN	_	8	prep	_	_
10	features	_	NNS	NNS	_	9	pobj	_	_
11	built	_	VBN	VBN	_	10	vmod	_	_
12	into	_	IN	IN	_	11	prep	_	_
13	it	_	PRP	PRP	_	12	pobj	_	_
14	.	_	.	.	_	0	erased	_	_
#det(phone-2, this-1)
#nsubj(good-4, phone-2)
#cop(good-4, is-3)
#root(ROOT-0, good-4)
#det(array-8, a-6)
#amod(array-8, huge-7)
#prep_with(good-4, array-8)
#prep_of(array-8, features-10)
#vmod(features-10, built-11)
#prep_into(built-11, it-13)
result:
1	i	_	FW	FW	_	2	nsubj	_	_
2	purchased	_	VBD	VBD	_	0	root	_	_
3	the	_	DT	DT	_	4	det	_	_
4	phone	_	NN	NN	_	2	dobj	_	_
5	last	_	JJ	JJ	_	6	amod	_	_
6	week	_	NN	NN	_	2	tmod	_	_
7	and	_	CC	CC	_	2	cc	_	_
8	have	_	VBP	VBP	_	10	aux	_	_
9	been	_	VBN	VBN	_	10	aux	_	_
10	using	_	VBG	VBG	_	2	conj	_	_
11	till	_	IN	IN	_	10	prep	_	_
12	then	_	RB	RB	_	11	pcomp	_	_
13	.	_	.	.	_	0	erased	_	_
14	.	_	.	.	_	0	erased	_	_
#nsubj(purchased-2, i-1)
#nsubj(using-10, i-1)
#root(ROOT-0, purchased-2)
#det(phone-4, the-3)
#dobj(purchased-2, phone-4)
#amod(week-6, last-5)
#tmod(purchased-2, week-6)
#aux(using-10, have-8)
#aux(using-10, been-9)
#conj_and(purchased-2, using-10)
#prep(using-10, till-11)
#pcomp(till-11, then-12)
result:
1	i	_	FW	FW	_	4	nsubj	_	_
2	did	_	VBD	VBD	_	4	aux	_	_
3	n't	_	RB	RB	_	4	neg	_	_
4	had	_	VBD	VBD	_	0	root	_	_
5	any	_	DT	DT	_	6	det	_	_
6	problem	_	NN	NN	_	4	dobj	_	_
7	till	_	IN	IN	_	4	prep	_	_
8	now	_	RB	RB	_	7	pcomp	_	_
9	.	_	.	.	_	0	erased	_	_
#nsubj(had-4, i-1)
#aux(had-4, did-2)
#neg(had-4, n't-3)
#root(ROOT-0, had-4)
#det(problem-6, any-5)
#dobj(had-4, problem-6)
#prep(had-4, till-7)
#pcomp(till-7, now-8)
result:
1	the	_	DT	DT	_	2	det	_	_
2	design	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	sleek	_	JJ	JJ	_	0	root	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	the	_	DT	DT	_	8	det	_	_
7	color	_	NN	NN	_	8	nn	_	_
8	screen	_	NN	NN	_	9	nsubj	_	_
9	has	_	VBZ	VBZ	_	4	conj	_	_
10	good	_	JJ	JJ	_	11	amod	_	_
11	resolution	_	NN	NN	_	9	dobj	_	_
12	.	_	.	.	_	0	erased	_	_
#det(design-2, the-1)
#nsubj(sleek-4, design-2)
#cop(sleek-4, is-3)
#root(ROOT-0, sleek-4)
#det(screen-8, the-6)
#nn(screen-8, color-7)
#nsubj(has-9, screen-8)
#conj_and(sleek-4, has-9)
#amod(resolution-11, good-10)
#dobj(has-9, resolution-11)
result:
1	it	_	PRP	PRP	_	5	nsubj	_	_
2	is	_	VBZ	VBZ	_	5	cop	_	_
3	very	_	RB	RB	_	4	advmod	_	_
4	light	_	JJ	JJ	_	5	amod	_	_
5	weight	_	NN	NN	_	0	root	_	_
6	and	_	CC	CC	_	5	cc	_	_
7	has	_	VBZ	VBZ	_	5	conj	_	_
8	a	_	DT	DT	_	11	det	_	_
9	good	_	JJ	JJ	_	11	amod	_	_
10	signal	_	NN	NN	_	11	nn	_	_
11	strength	_	NN	NN	_	7	dobj	_	_
12	.	_	.	.	_	0	erased	_	_
#nsubj(weight-5, it-1)
#nsubj(has-7, it-1)
#cop(weight-5, is-2)
#advmod(light-4, very-3)
#amod(weight-5, light-4)
#root(ROOT-0, weight-5)
#conj_and(weight-5, has-7)
#det(strength-11, a-8)
#amod(strength-11, good-9)
#nn(strength-11, signal-10)
#dobj(has-7, strength-11)
result:
1	however	_	RB	RB	_	8	advmod	_	_
2	,	_	,	,	_	0	erased	_	_
3	the	_	DT	DT	_	5	det	_	_
4	main	_	JJ	JJ	_	5	amod	_	_
5	problem	_	NN	NN	_	8	nsubj	_	_
6	that	_	DT	DT	_	7	det	_	_
7	i	_	FW	FW	_	5	dep	_	_
8	think	_	VBP	VBP	_	0	root	_	_
9	is	_	VBZ	VBZ	_	10	cop	_	_
10	the	_	DT	DT	_	8	dep	_	_
11	with	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	14	det	_	_
13	sound	_	JJ	JJ	_	14	amod	_	_
14	quality	_	NN	NN	_	11	pobj	_	_
15	.	_	.	.	_	0	erased	_	_
#advmod(think-8, however-1)
#det(problem-5, the-3)
#amod(problem-5, main-4)
#nsubj(think-8, problem-5)
#det(i-7, that-6)
#dep(problem-5, i-7)
#root(ROOT-0, think-8)
#cop(the-10, is-9)
#dep(think-8, the-10)
#det(quality-14, the-12)
#amod(quality-14, sound-13)
#prep_with(the-10, quality-14)
result:
1	it	_	PRP	PRP	_	5	nsubj	_	_
2	is	_	VBZ	VBZ	_	5	cop	_	_
3	not	_	RB	RB	_	5	neg	_	_
4	as	_	RB	RB	_	5	advmod	_	_
5	good	_	JJ	JJ	_	0	root	_	_
6	as	_	IN	IN	_	13	mark	_	_
7	the	_	DT	DT	_	9	det	_	_
8	samsung	_	JJ	JJ	_	9	amod	_	_
9	phones	_	NNS	NNS	_	13	nsubj	_	_
10	that	_	WDT	WDT	_	9	rcmod	_	_
11	i	_	FW	FW	_	9	dep	_	_
12	have	_	VBP	VBP	_	13	aux	_	_
13	used	_	VBN	VBN	_	5	advcl	_	_
14	earlier	_	RBR	RBR	_	13	advmod	_	_
15	.	_	.	.	_	0	erased	_	_
#nsubj(good-5, it-1)
#cop(good-5, is-2)
#neg(good-5, not-3)
#advmod(good-5, as-4)
#root(ROOT-0, good-5)
#mark(used-13, as-6)
#det(phones-9, the-7)
#amod(phones-9, samsung-8)
#nsubj(used-13, phones-9)
#rcmod(phones-9, that-10)
#dep(phones-9, i-11)
#aux(used-13, have-12)
#advcl(good-5, used-13)
#advmod(used-13, earlier-14)
result:
1	when	_	WRB	WRB	_	2	advmod	_	_
2	talking	_	VBG	VBG	_	8	advcl	_	_
3	the	_	DT	DT	_	4	det	_	_
4	voice	_	NN	NN	_	2	dobj	_	_
5	is	_	VBZ	VBZ	_	8	cop	_	_
6	not	_	RB	RB	_	8	neg	_	_
7	very	_	RB	RB	_	8	advmod	_	_
8	clear	_	JJ	JJ	_	0	root	_	_
9	.	_	.	.	_	0	erased	_	_
#advmod(talking-2, when-1)
#advcl(clear-8, talking-2)
#csubj(clear-8, talking-2)
#det(voice-4, the-3)
#dobj(talking-2, voice-4)
#cop(clear-8, is-5)
#neg(clear-8, not-6)
#advmod(clear-8, very-7)
#root(ROOT-0, clear-8)
result:
1	but	_	CC	CC	_	6	cc	_	_
2	,	_	,	,	_	0	erased	_	_
3	i	_	FW	FW	_	6	nsubj	_	_
4	would	_	MD	MD	_	6	aux	_	_
5	definately	_	RB	RB	_	6	advmod	_	_
6	recommend	_	VB	VB	_	0	root	_	_
7	this	_	DT	DT	_	8	det	_	_
8	phone	_	NN	NN	_	6	dobj	_	_
9	.	_	.	.	_	0	erased	_	_
#cc(recommend-6, but-1)
#nsubj(recommend-6, i-3)
#aux(recommend-6, would-4)
#advmod(recommend-6, definately-5)
#root(ROOT-0, recommend-6)
#det(phone-8, this-7)
#dobj(recommend-6, phone-8)
result:
1	go	_	VB	VB	_	18	csubj	_	_
2	for	_	IN	IN	_	1	prep	_	_
3	it	_	PRP	PRP	_	2	pobj	_	_
4	...	_	:	:	_	0	erased	_	_
5	i	_	FW	FW	_	3	dep	_	_
6	have	_	VB	VB	_	7	aux	_	_
7	read	_	VBN	VBN	_	1	ccomp	_	_
8	a	_	DT	DT	_	9	det	_	_
9	lot	_	NN	NN	_	7	dobj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	reviews	_	NNS	NNS	_	10	pobj	_	_
13	and	_	CC	CC	_	12	cc	_	_
14	my	_	PRP$	PRP$	_	15	poss	_	_
15	phone	_	NN	NN	_	12	conj	_	_
16	does	_	VBZ	VBZ	_	18	aux	_	_
17	not	_	RB	RB	_	18	neg	_	_
18	have	_	VB	VB	_	0	root	_	_
19	a	_	DT	DT	_	20	det	_	_
20	hiss	_	NN	NN	_	18	dobj	_	_
21	or	_	CC	CC	_	20	cc	_	_
22	anything	_	NN	NN	_	20	conj	_	_
23	that	_	IN	IN	_	26	mark	_	_
24	people	_	NNS	NNS	_	26	nsubj	_	_
25	are	_	VBP	VBP	_	26	aux	_	_
26	talking	_	VBG	VBG	_	18	ccomp	_	_
27	about	_	IN	IN	_	26	prep	_	_
28	.	_	.	.	_	0	erased	_	_
#csubj(have-18, go-1)
#prep_for(go-1, it-3)
#dep(it-3, i-5)
#aux(read-7, have-6)
#ccomp(go-1, read-7)
#det(lot-9, a-8)
#dobj(read-7, lot-9)
#det(reviews-12, the-11)
#prep_of(lot-9, reviews-12)
#poss(phone-15, my-14)
#prep_of(lot-9, phone-15)
#conj_and(reviews-12, phone-15)
#aux(have-18, does-16)
#neg(have-18, not-17)
#root(ROOT-0, have-18)
#det(hiss-20, a-19)
#dobj(have-18, hiss-20)
#dobj(have-18, anything-22)
#conj_or(hiss-20, anything-22)
#mark(talking-26, that-23)
#nsubj(talking-26, people-24)
#aux(talking-26, are-25)
#ccomp(have-18, talking-26)
#prep(talking-26, about-27)
result:
1	it	_	PRP	PRP	_	4	nsubj	_	_
2	is	_	VBZ	VBZ	_	4	cop	_	_
3	crystal	_	NN	NN	_	4	advmod	_	_
4	clear	_	JJ	JJ	_	0	root	_	_
5	.	_	.	.	_	0	erased	_	_
#nsubj(clear-4, it-1)
#cop(clear-4, is-2)
#advmod(clear-4, crystal-3)
#root(ROOT-0, clear-4)
result:
1	this	_	DT	DT	_	3	nsubj	_	_
2	is	_	VBZ	VBZ	_	3	cop	_	_
3	one	_	CD	CD	_	10	dep	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	7	det	_	_
6	nicest	_	JJ	JJ	_	7	amod	_	_
7	phones	_	NNS	NNS	_	4	pobj	_	_
8	nokia	_	NN	NN	_	10	nsubj	_	_
9	has	_	VBZ	VBZ	_	10	aux	_	_
10	made	_	VBN	VBN	_	0	root	_	_
11	.	_	.	.	_	0	erased	_	_
#nsubj(one-3, this-1)
#cop(one-3, is-2)
#dep(made-10, one-3)
#det(phones-7, the-5)
#amod(phones-7, nicest-6)
#prep_of(one-3, phones-7)
#nsubj(made-10, nokia-8)
#aux(made-10, has-9)
#root(ROOT-0, made-10)
result:
1	i	_	FW	FW	_	3	nsubj	_	_
2	do	_	VBP	VBP	_	3	nsubj	_	_
3	recommend	_	VBP	VBP	_	0	root	_	_
4	getting	_	VBG	VBG	_	3	xcomp	_	_
5	the	_	DT	DT	_	7	det	_	_
6	data	_	NNS	NNS	_	7	nn	_	_
7	kit	_	NN	NN	_	4	dobj	_	_
8	for	_	IN	IN	_	7	prep	_	_
9	those	_	DT	DT	_	10	det	_	_
10	geeks	_	NNS	NNS	_	8	pobj	_	_
11	.	_	.	.	_	0	erased	_	_
#nsubj(recommend-3, i-1)
#nsubj(recommend-3, do-2)
#root(ROOT-0, recommend-3)
#xcomp(recommend-3, getting-4)
#det(kit-7, the-5)
#nn(kit-7, data-6)
#dobj(getting-4, kit-7)
#det(geeks-10, those-9)
#prep_for(kit-7, geeks-10)
result:
1	there	_	EX	EX	_	2	expl	_	_
2	are	_	VBP	VBP	_	0	root	_	_
3	a	_	DT	DT	_	4	det	_	_
4	lot	_	NN	NN	_	2	nsubj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	cool	_	JJ	JJ	_	7	amod	_	_
7	websites	_	NNS	NNS	_	5	pobj	_	_
8	with	_	IN	IN	_	2	prep	_	_
9	games	_	NNS	NNS	_	8	pobj	_	_
10	and	_	CC	CC	_	9	cc	_	_
11	midi	_	JJ	JJ	_	12	amod	_	_
12	ringtones	_	NNS	NNS	_	9	conj	_	_
13	to	_	TO	TO	_	12	prep	_	_
14	download	_	NN	NN	_	13	pobj	_	_
15	for	_	IN	IN	_	14	prep	_	_
16	free	_	JJ	JJ	_	15	pobj	_	_
17	.	_	.	.	_	0	erased	_	_
#expl(are-2, there-1)
#root(ROOT-0, are-2)
#det(lot-4, a-3)
#nsubj(are-2, lot-4)
#amod(websites-7, cool-6)
#prep_of(lot-4, websites-7)
#prep_with(are-2, games-9)
#amod(ringtones-12, midi-11)
#prep_with(are-2, ringtones-12)
#conj_and(games-9, ringtones-12)
#prep_to(ringtones-12, download-14)
#prep_for(download-14, free-16)
